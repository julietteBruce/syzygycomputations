--This file computes Betti tables for P^2 for d = 10 and b = 1
A := QQ[t_0,t_1,t_2];
--tb stands for Total Betti numbers
tb101 = new HashTable from {(7,0) => 0, (6,1) => 600, (8,0) => 0, (7,1) => 270, (9,0) => 0, (8,1) => 70, (9,1) => 8, (0,0) => 2, (0,1) => 0, (1,0) => 10, (2,0) => 0, (1,1) => 0, (2,1) => 120, (3,0) => 0, (3,1) => 420, (4,0) => 0, (4,1) => 756, (5,0) => 0, (6,0) => 0, (5,1) => 840};
--mb stands for Multigraded Betti numbers
mb101 = new HashTable from {(7,0) => 0, (6,1) => t_0^48*t_1^23+2*t_0^47*t_1^24+4*t_0^46*t_1^25+7*t_0^45*t_1^26+11*t_0^44*t_1^27+15*t_0^43*t_1^28+21*t_0^42*t_1^29+27*t_0^41*t_1^30+33*t_0^40*t_1^31+39*t_0^39*t_1^32+44*t_0^38*t_1^33+47*t_0^37*t_1^34+49*t_0^36*t_1^35+49*t_0^35*t_1^36+47*t_0^34*t_1^37+44*t_0^33*t_1^38+39*t_0^32*t_1^39+33*t_0^31*t_1^40+27*t_0^30*t_1^41+21*t_0^29*t_1^42+15*t_0^28*t_1^43+11*t_0^27*t_1^44+7*t_0^26*t_1^45+4*t_0^25*t_1^46+2*t_0^24*t_1^47+t_0^23*t_1^48, (7,1) => t_0^51*t_1^30+2*t_0^50*t_1^31+4*t_0^49*t_1^32+6*t_0^48*t_1^33+9*t_0^47*t_1^34+12*t_0^46*t_1^35+15*t_0^45*t_1^36+18*t_0^44*t_1^37+21*t_0^43*t_1^38+23*t_0^42*t_1^39+24*t_0^41*t_1^40+24*t_0^40*t_1^41+23*t_0^39*t_1^42+21*t_0^38*t_1^43+18*t_0^37*t_1^44+15*t_0^36*t_1^45+12*t_0^35*t_1^46+9*t_0^34*t_1^47+6*t_0^33*t_1^48+4*t_0^32*t_1^49+2*t_0^31*t_1^50+t_0^30*t_1^51, (8,0) => 0, (8,1) => t_0^53*t_1^38+2*t_0^52*t_1^39+3*t_0^51*t_1^40+4*t_0^50*t_1^41+5*t_0^49*t_1^42+6*t_0^48*t_1^43+7*t_0^47*t_1^44+7*t_0^46*t_1^45+7*t_0^45*t_1^46+7*t_0^44*t_1^47+6*t_0^43*t_1^48+5*t_0^42*t_1^49+4*t_0^41*t_1^50+3*t_0^40*t_1^51+2*t_0^39*t_1^52+t_0^38*t_1^53, (9,0) => 0, (9,1) => t_0^54*t_1^47+t_0^53*t_1^48+t_0^52*t_1^49+t_0^51*t_1^50+t_0^50*t_1^51+t_0^49*t_1^52+t_0^48*t_1^53+t_0^47*t_1^54, (0,0) => t_0+t_1, (0,1) => 0, (1,0) => t_0^10*t_1+t_0^9*t_1^2+t_0^8*t_1^3+t_0^7*t_1^4+t_0^6*t_1^5+t_0^5*t_1^6+t_0^4*t_1^7+t_0^3*t_1^8+t_0^2*t_1^9+t_0*t_1^10, (2,0) => 0, (1,1) => 0, (3,0) => 0, (2,1) => t_0^26*t_1^5+t_0^25*t_1^6+2*t_0^24*t_1^7+3*t_0^23*t_1^8+4*t_0^22*t_1^9+5*t_0^21*t_1^10+7*t_0^20*t_1^11+8*t_0^19*t_1^12+9*t_0^18*t_1^13+10*t_0^17*t_1^14+10*t_0^16*t_1^15+10*t_0^15*t_1^16+10*t_0^14*t_1^17+9*t_0^13*t_1^18+8*t_0^12*t_1^19+7*t_0^11*t_1^20+5*t_0^10*t_1^21+4*t_0^9*t_1^22+3*t_0^8*t_1^23+2*t_0^7*t_1^24+t_0^6*t_1^25+t_0^5*t_1^26, (4,0) => 0, (3,1) => t_0^33*t_1^8+2*t_0^32*t_1^9+3*t_0^31*t_1^10+5*t_0^30*t_1^11+8*t_0^29*t_1^12+11*t_0^28*t_1^13+15*t_0^27*t_1^14+19*t_0^26*t_1^15+23*t_0^25*t_1^16+27*t_0^24*t_1^17+30*t_0^23*t_1^18+32*t_0^22*t_1^19+34*t_0^21*t_1^20+34*t_0^20*t_1^21+32*t_0^19*t_1^22+30*t_0^18*t_1^23+27*t_0^17*t_1^24+23*t_0^16*t_1^25+19*t_0^15*t_1^26+15*t_0^14*t_1^27+11*t_0^13*t_1^28+8*t_0^12*t_1^29+5*t_0^11*t_1^30+3*t_0^10*t_1^31+2*t_0^9*t_1^32+t_0^8*t_1^33, (5,0) => 0, (4,1) => t_0^39*t_1^12+2*t_0^38*t_1^13+4*t_0^37*t_1^14+6*t_0^36*t_1^15+10*t_0^35*t_1^16+15*t_0^34*t_1^17+21*t_0^33*t_1^18+27*t_0^32*t_1^19+34*t_0^31*t_1^20+41*t_0^30*t_1^21+48*t_0^29*t_1^22+53*t_0^28*t_1^23+57*t_0^27*t_1^24+59*t_0^26*t_1^25+59*t_0^25*t_1^26+57*t_0^24*t_1^27+53*t_0^23*t_1^28+48*t_0^22*t_1^29+41*t_0^21*t_1^30+34*t_0^20*t_1^31+27*t_0^19*t_1^32+21*t_0^18*t_1^33+15*t_0^17*t_1^34+10*t_0^16*t_1^35+6*t_0^15*t_1^36+4*t_0^14*t_1^37+2*t_0^13*t_1^38+t_0^12*t_1^39, (5,1) => t_0^44*t_1^17+2*t_0^43*t_1^18+4*t_0^42*t_1^19+7*t_0^41*t_1^20+11*t_0^40*t_1^21+16*t_0^39*t_1^22+23*t_0^38*t_1^23+30*t_0^37*t_1^24+38*t_0^36*t_1^25+46*t_0^35*t_1^26+53*t_0^34*t_1^27+59*t_0^33*t_1^28+64*t_0^32*t_1^29+66*t_0^31*t_1^30+66*t_0^30*t_1^31+64*t_0^29*t_1^32+59*t_0^28*t_1^33+53*t_0^27*t_1^34+46*t_0^26*t_1^35+38*t_0^25*t_1^36+30*t_0^24*t_1^37+23*t_0^23*t_1^38+16*t_0^22*t_1^39+11*t_0^21*t_1^40+7*t_0^20*t_1^41+4*t_0^19*t_1^42+2*t_0^18*t_1^43+t_0^17*t_1^44, (6,0) => 0};
--sb represents the betti numbers as sums of Schur functors
sb101 = new HashTable from {(7,0) => {}, (6,1) => {({48,23},1)}, (8,0) => {}, (7,1) => {({51,30},1)}, (9,0) => {}, (8,1) => {({53,38},1)}, (9,1) => {({54,47},1)}, (0,0) => {({1,0},1)}, (0,1) => {}, (1,0) => {({10,1},1)}, (2,0) => {}, (1,1) => {}, (2,1) => {({26,5},1)}, (3,0) => {}, (3,1) => {({33,8},1)}, (4,0) => {}, (4,1) => {({39,12},1)}, (5,0) => {}, (6,0) => {}, (5,1) => {({44,17},1)}};
--dw encodes the dominant weights in each entry
dw101 = new HashTable from {(7,0) => {}, (6,1) => {{48,23}}, (8,0) => {}, (7,1) => {{51,30}}, (9,0) => {}, (8,1) => {{53,38}}, (9,1) => {{54,47}}, (0,0) => {{1,0}}, (0,1) => {}, (1,0) => {{10,1}}, (2,0) => {}, (1,1) => {}, (2,1) => {{26,5}}, (3,0) => {}, (3,1) => {{33,8}}, (4,0) => {}, (4,1) => {{39,12}}, (5,0) => {}, (6,0) => {}, (5,1) => {{44,17}}};
--lw encodes the lex leading weight in each entry
lw101 = new HashTable from {(7,0) => {}, (6,1) => {48,23}, (8,0) => {}, (7,1) => {51,30}, (9,0) => {}, (8,1) => {53,38}, (9,1) => {54,47}, (0,0) => {1,0}, (0,1) => {}, (1,0) => {10,1}, (2,0) => {}, (1,1) => {}, (2,1) => {26,5}, (3,0) => {}, (3,1) => {33,8}, (4,0) => {}, (4,1) => {39,12}, (5,0) => {}, (6,0) => {}, (5,1) => {44,17}};
--nr encodes the number of disctinct reprsentations in each entry
nr101 = new HashTable from {(7,0) => 0, (6,1) => 1, (8,0) => 0, (7,1) => 1, (9,0) => 0, (8,1) => 1, (9,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 0, (1,1) => 0, (2,1) => 1, (3,0) => 0, (3,1) => 1, (4,0) => 0, (4,1) => 1, (5,0) => 0, (6,0) => 0, (5,1) => 1};
--nrm encodes the number of representations with multiplicity in each entry
nrm101 = new HashTable from {(7,0) => 0, (6,1) => 1, (8,0) => 0, (7,1) => 1, (9,0) => 0, (8,1) => 1, (9,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 0, (1,1) => 0, (2,1) => 1, (3,0) => 0, (3,1) => 1, (4,0) => 0, (4,1) => 1, (5,0) => 0, (6,0) => 0, (5,1) => 1};
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
er101 = new HashTable from {(7,0) => 0, (6,1) => 0, (8,0) => 0, (7,1) => 0, (9,0) => 0, (8,1) => 0, (9,1) => 0, (0,0) => 0, (0,1) => 0, (1,0) => 0, (2,0) => 0, (1,1) => 0, (2,1) => 0, (3,0) => 0, (3,1) => 0, (4,0) => 0, (4,1) => 0, (5,0) => 0, (6,0) => 0, (5,1) => 0};
--bs encodes the Boij-Soederberg coefficients each entry
bs101 = {3628800/1};
end;