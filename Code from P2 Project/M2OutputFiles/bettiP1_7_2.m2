--This file computes Betti tables for P^2 for d = 7 and b = 2
A := QQ[t_0,t_1,t_2];
--tb stands for Total Betti numbers
tb72 = new HashTable from {(6,1) => 4, (0,0) => 3, (0,1) => 0, (1,0) => 14, (2,0) => 21, (1,1) => 0, (2,1) => 0, (3,0) => 0, (3,1) => 35, (4,0) => 0, (4,1) => 42, (5,0) => 0, (6,0) => 0, (5,1) => 21};
--mb stands for Multigraded Betti numbers
mb72 = new HashTable from {(6,1) => t_0^27*t_1^24+t_0^26*t_1^25+t_0^25*t_1^26+t_0^24*t_1^27, (0,0) => t_0^2+t_0*t_1+t_1^2, (1,0) => t_0^8*t_1+2*t_0^7*t_1^2+2*t_0^6*t_1^3+2*t_0^5*t_1^4+2*t_0^4*t_1^5+2*t_0^3*t_1^6+2*t_0^2*t_1^7+t_0*t_1^8, (0,1) => 0, (1,1) => 0, (2,0) => t_0^13*t_1^3+t_0^12*t_1^4+2*t_0^11*t_1^5+2*t_0^10*t_1^6+3*t_0^9*t_1^7+3*t_0^8*t_1^8+3*t_0^7*t_1^9+2*t_0^6*t_1^10+2*t_0^5*t_1^11+t_0^4*t_1^12+t_0^3*t_1^13, (2,1) => 0, (3,0) => 0, (3,1) => t_0^21*t_1^9+t_0^20*t_1^10+2*t_0^19*t_1^11+3*t_0^18*t_1^12+4*t_0^17*t_1^13+4*t_0^16*t_1^14+5*t_0^15*t_1^15+4*t_0^14*t_1^16+4*t_0^13*t_1^17+3*t_0^12*t_1^18+2*t_0^11*t_1^19+t_0^10*t_1^20+t_0^9*t_1^21, (4,0) => 0, (4,1) => t_0^24*t_1^13+2*t_0^23*t_1^14+3*t_0^22*t_1^15+4*t_0^21*t_1^16+5*t_0^20*t_1^17+6*t_0^19*t_1^18+6*t_0^18*t_1^19+5*t_0^17*t_1^20+4*t_0^16*t_1^21+3*t_0^15*t_1^22+2*t_0^14*t_1^23+t_0^13*t_1^24, (5,0) => 0, (5,1) => t_0^26*t_1^18+2*t_0^25*t_1^19+3*t_0^24*t_1^20+3*t_0^23*t_1^21+3*t_0^22*t_1^22+3*t_0^21*t_1^23+3*t_0^20*t_1^24+2*t_0^19*t_1^25+t_0^18*t_1^26, (6,0) => 0};
--sb represents the betti numbers as sums of Schur functors
sb72 = new HashTable from {(6,1) => {({27,24},1)}, (0,0) => {({2,0},1)}, (0,1) => {}, (1,0) => {({8,1},1)}, (2,0) => {({13,3},1)}, (1,1) => {}, (2,1) => {}, (3,0) => {}, (3,1) => {({21,9},1)}, (4,0) => {}, (4,1) => {({24,13},1)}, (5,0) => {}, (6,0) => {}, (5,1) => {({26,18},1)}};
--dw encodes the dominant weights in each entry
dw72 = new HashTable from {(6,1) => {{27,24}}, (0,0) => {{2,0}}, (0,1) => {}, (1,0) => {{8,1}}, (2,0) => {{13,3}}, (1,1) => {}, (2,1) => {}, (3,0) => {}, (3,1) => {{21,9}}, (4,0) => {}, (4,1) => {{24,13}}, (5,0) => {}, (6,0) => {}, (5,1) => {{26,18}}};
--lw encodes the lex leading weight in each entry
lw72 = new HashTable from {(6,1) => {27,24}, (0,0) => {2,0}, (0,1) => {}, (1,0) => {8,1}, (2,0) => {13,3}, (1,1) => {}, (2,1) => {}, (3,0) => {}, (3,1) => {21,9}, (4,0) => {}, (4,1) => {24,13}, (5,0) => {}, (6,0) => {}, (5,1) => {26,18}};
--nr encodes the number of disctinct reprsentations in each entry
nr72 = new HashTable from {(6,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (2,1) => 0, (3,0) => 0, (3,1) => 1, (4,0) => 0, (4,1) => 1, (5,0) => 0, (6,0) => 0, (5,1) => 1};
--nrm encodes the number of representations with multiplicity in each entry
nrm72 = new HashTable from {(6,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (2,1) => 0, (3,0) => 0, (3,1) => 1, (4,0) => 0, (4,1) => 1, (5,0) => 0, (6,0) => 0, (5,1) => 1};
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
er72 = new HashTable from {(6,1) => 0, (0,0) => 0, (0,1) => 0, (1,0) => 0, (2,0) => 0, (1,1) => 0, (2,1) => 0, (3,0) => 0, (3,1) => 0, (4,0) => 0, (4,1) => 0, (5,0) => 0, (6,0) => 0, (5,1) => 0};
--bs encodes the Boij-Soederberg coefficients each entry
bs72 = {5040/1};
end;