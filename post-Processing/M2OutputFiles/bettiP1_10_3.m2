--This file computes Betti tables for P^2 for d = 10 and b = 3
A := QQ[t_0,t_1,t_2];
--tb stands for Total Betti numbers
tb103 = new HashTable from {(7,0) => 0, (6,1) => 360, (8,0) => 0, (7,1) => 180, (9,0) => 0, (8,1) => 50, (9,1) => 6, (0,0) => 4, (0,1) => 0, (1,0) => 30, (2,0) => 90, (1,1) => 0, (2,1) => 0, (3,0) => 120, (3,1) => 0, (4,0) => 0, (4,1) => 252, (5,0) => 0, (6,0) => 0, (5,1) => 420};
--mb stands for Multigraded Betti numbers
mb103 = new HashTable from {(7,0) => 0, (6,1) => t_0^48*t_1^25+2*t_0^47*t_1^26+4*t_0^46*t_1^27+6*t_0^45*t_1^28+9*t_0^44*t_1^29+12*t_0^43*t_1^30+16*t_0^42*t_1^31+20*t_0^41*t_1^32+24*t_0^40*t_1^33+27*t_0^39*t_1^34+29*t_0^38*t_1^35+30*t_0^37*t_1^36+30*t_0^36*t_1^37+29*t_0^35*t_1^38+27*t_0^34*t_1^39+24*t_0^33*t_1^40+20*t_0^32*t_1^41+16*t_0^31*t_1^42+12*t_0^30*t_1^43+9*t_0^29*t_1^44+6*t_0^28*t_1^45+4*t_0^27*t_1^46+2*t_0^26*t_1^47+t_0^25*t_1^48, (7,1) => t_0^51*t_1^32+2*t_0^50*t_1^33+4*t_0^49*t_1^34+6*t_0^48*t_1^35+8*t_0^47*t_1^36+10*t_0^46*t_1^37+12*t_0^45*t_1^38+14*t_0^44*t_1^39+16*t_0^43*t_1^40+17*t_0^42*t_1^41+17*t_0^41*t_1^42+16*t_0^40*t_1^43+14*t_0^39*t_1^44+12*t_0^38*t_1^45+10*t_0^37*t_1^46+8*t_0^36*t_1^47+6*t_0^35*t_1^48+4*t_0^34*t_1^49+2*t_0^33*t_1^50+t_0^32*t_1^51, (8,0) => 0, (8,1) => t_0^53*t_1^40+2*t_0^52*t_1^41+3*t_0^51*t_1^42+4*t_0^50*t_1^43+5*t_0^49*t_1^44+5*t_0^48*t_1^45+5*t_0^47*t_1^46+5*t_0^46*t_1^47+5*t_0^45*t_1^48+5*t_0^44*t_1^49+4*t_0^43*t_1^50+3*t_0^42*t_1^51+2*t_0^41*t_1^52+t_0^40*t_1^53, (9,0) => 0, (9,1) => t_0^54*t_1^49+t_0^53*t_1^50+t_0^52*t_1^51+t_0^51*t_1^52+t_0^50*t_1^53+t_0^49*t_1^54, (0,0) => t_0^3+t_0^2*t_1+t_0*t_1^2+t_1^3, (0,1) => 0, (1,0) => t_0^12*t_1+2*t_0^11*t_1^2+3*t_0^10*t_1^3+3*t_0^9*t_1^4+3*t_0^8*t_1^5+3*t_0^7*t_1^6+3*t_0^6*t_1^7+3*t_0^5*t_1^8+3*t_0^4*t_1^9+3*t_0^3*t_1^10+2*t_0^2*t_1^11+t_0*t_1^12, (2,0) => t_0^20*t_1^3+2*t_0^19*t_1^4+3*t_0^18*t_1^5+4*t_0^17*t_1^6+5*t_0^16*t_1^7+6*t_0^15*t_1^8+7*t_0^14*t_1^9+8*t_0^13*t_1^10+9*t_0^12*t_1^11+9*t_0^11*t_1^12+8*t_0^10*t_1^13+7*t_0^9*t_1^14+6*t_0^8*t_1^15+5*t_0^7*t_1^16+4*t_0^6*t_1^17+3*t_0^5*t_1^18+2*t_0^4*t_1^19+t_0^3*t_1^20, (1,1) => 0, (3,0) => t_0^27*t_1^6+t_0^26*t_1^7+2*t_0^25*t_1^8+3*t_0^24*t_1^9+4*t_0^23*t_1^10+5*t_0^22*t_1^11+7*t_0^21*t_1^12+8*t_0^20*t_1^13+9*t_0^19*t_1^14+10*t_0^18*t_1^15+10*t_0^17*t_1^16+10*t_0^16*t_1^17+10*t_0^15*t_1^18+9*t_0^14*t_1^19+8*t_0^13*t_1^20+7*t_0^12*t_1^21+5*t_0^11*t_1^22+4*t_0^10*t_1^23+3*t_0^9*t_1^24+2*t_0^8*t_1^25+t_0^7*t_1^26+t_0^6*t_1^27, (2,1) => 0, (4,0) => 0, (3,1) => 0, (5,0) => 0, (4,1) => t_0^39*t_1^14+t_0^38*t_1^15+2*t_0^37*t_1^16+3*t_0^36*t_1^17+5*t_0^35*t_1^18+7*t_0^34*t_1^19+9*t_0^33*t_1^20+11*t_0^32*t_1^21+14*t_0^31*t_1^22+16*t_0^30*t_1^23+18*t_0^29*t_1^24+19*t_0^28*t_1^25+20*t_0^27*t_1^26+20*t_0^26*t_1^27+19*t_0^25*t_1^28+18*t_0^24*t_1^29+16*t_0^23*t_1^30+14*t_0^22*t_1^31+11*t_0^21*t_1^32+9*t_0^20*t_1^33+7*t_0^19*t_1^34+5*t_0^18*t_1^35+3*t_0^17*t_1^36+2*t_0^16*t_1^37+t_0^15*t_1^38+t_0^14*t_1^39, (5,1) => t_0^44*t_1^19+2*t_0^43*t_1^20+3*t_0^42*t_1^21+5*t_0^41*t_1^22+8*t_0^40*t_1^23+11*t_0^39*t_1^24+15*t_0^38*t_1^25+19*t_0^37*t_1^26+23*t_0^36*t_1^27+27*t_0^35*t_1^28+30*t_0^34*t_1^29+32*t_0^33*t_1^30+34*t_0^32*t_1^31+34*t_0^31*t_1^32+32*t_0^30*t_1^33+30*t_0^29*t_1^34+27*t_0^28*t_1^35+23*t_0^27*t_1^36+19*t_0^26*t_1^37+15*t_0^25*t_1^38+11*t_0^24*t_1^39+8*t_0^23*t_1^40+5*t_0^22*t_1^41+3*t_0^21*t_1^42+2*t_0^20*t_1^43+t_0^19*t_1^44, (6,0) => 0};
--sb represents the betti numbers as sums of Schur functors
sb103 = new HashTable from {(7,0) => {}, (6,1) => {({48,25},1)}, (8,0) => {}, (7,1) => {({51,32},1)}, (9,0) => {}, (8,1) => {({53,40},1)}, (9,1) => {({54,49},1)}, (0,0) => {({3,0},1)}, (0,1) => {}, (1,0) => {({12,1},1)}, (2,0) => {({20,3},1)}, (1,1) => {}, (2,1) => {}, (3,0) => {({27,6},1)}, (3,1) => {}, (4,0) => {}, (4,1) => {({39,14},1)}, (5,0) => {}, (6,0) => {}, (5,1) => {({44,19},1)}};
--dw encodes the dominant weights in each entry
dw103 = new HashTable from {(7,0) => {}, (6,1) => {{48,25}}, (8,0) => {}, (7,1) => {{51,32}}, (9,0) => {}, (8,1) => {{53,40}}, (9,1) => {{54,49}}, (0,0) => {{3,0}}, (0,1) => {}, (1,0) => {{12,1}}, (2,0) => {{20,3}}, (1,1) => {}, (2,1) => {}, (3,0) => {{27,6}}, (3,1) => {}, (4,0) => {}, (4,1) => {{39,14}}, (5,0) => {}, (6,0) => {}, (5,1) => {{44,19}}};
--lw encodes the lex leading weight in each entry
lw103 = new HashTable from {(7,0) => {}, (6,1) => {48,25}, (8,0) => {}, (7,1) => {51,32}, (9,0) => {}, (8,1) => {53,40}, (9,1) => {54,49}, (0,0) => {3,0}, (0,1) => {}, (1,0) => {12,1}, (2,0) => {20,3}, (1,1) => {}, (2,1) => {}, (3,0) => {27,6}, (3,1) => {}, (4,0) => {}, (4,1) => {39,14}, (5,0) => {}, (6,0) => {}, (5,1) => {44,19}};
--nr encodes the number of disctinct reprsentations in each entry
nr103 = new HashTable from {(7,0) => 0, (6,1) => 1, (8,0) => 0, (7,1) => 1, (9,0) => 0, (8,1) => 1, (9,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (2,1) => 0, (3,0) => 1, (3,1) => 0, (4,0) => 0, (4,1) => 1, (5,0) => 0, (6,0) => 0, (5,1) => 1};
--nrm encodes the number of representations with multiplicity in each entry
nrm103 = new HashTable from {(7,0) => 0, (6,1) => 1, (8,0) => 0, (7,1) => 1, (9,0) => 0, (8,1) => 1, (9,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (2,1) => 0, (3,0) => 1, (3,1) => 0, (4,0) => 0, (4,1) => 1, (5,0) => 0, (6,0) => 0, (5,1) => 1};
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
er103 = new HashTable from {(7,0) => 0, (6,1) => 0, (8,0) => 0, (7,1) => 0, (9,0) => 0, (8,1) => 0, (9,1) => 0, (0,0) => 0, (0,1) => 0, (1,0) => 0, (2,0) => 0, (1,1) => 0, (2,1) => 0, (3,0) => 0, (3,1) => 0, (4,0) => 0, (4,1) => 0, (5,0) => 0, (6,0) => 0, (5,1) => 0};
--bs encodes the Boij-Soederberg coefficients each entry
bs103 = {3628800/1};
end;