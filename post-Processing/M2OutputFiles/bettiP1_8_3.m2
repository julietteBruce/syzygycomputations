--This file computes Betti tables for P^2 for d = 8 and b = 3
A := QQ[t_0,t_1,t_2];
--tb stands for Total Betti numbers
tb83 = new HashTable from {(7,0) => 0, (6,1) => 24, (7,1) => 4, (0,0) => 4, (0,1) => 0, (1,0) => 24, (2,0) => 56, (1,1) => 0, (2,1) => 0, (3,0) => 56, (3,1) => 0, (4,0) => 0, (4,1) => 56, (5,0) => 0, (6,0) => 0, (5,1) => 56};
--mb stands for Multigraded Betti numbers
mb83 = new HashTable from {(7,0) => 0, (6,1) => t_0^34*t_1^25+2*t_0^33*t_1^26+3*t_0^32*t_1^27+3*t_0^31*t_1^28+3*t_0^30*t_1^29+3*t_0^29*t_1^30+3*t_0^28*t_1^31+3*t_0^27*t_1^32+2*t_0^26*t_1^33+t_0^25*t_1^34, (7,1) => t_0^35*t_1^32+t_0^34*t_1^33+t_0^33*t_1^34+t_0^32*t_1^35, (0,0) => t_0^3+t_0^2*t_1+t_0*t_1^2+t_1^3, (1,0) => t_0^10*t_1+2*t_0^9*t_1^2+3*t_0^8*t_1^3+3*t_0^7*t_1^4+3*t_0^6*t_1^5+3*t_0^5*t_1^6+3*t_0^4*t_1^7+3*t_0^3*t_1^8+2*t_0^2*t_1^9+t_0*t_1^10, (0,1) => 0, (2,0) => t_0^16*t_1^3+2*t_0^15*t_1^4+3*t_0^14*t_1^5+4*t_0^13*t_1^6+5*t_0^12*t_1^7+6*t_0^11*t_1^8+7*t_0^10*t_1^9+7*t_0^9*t_1^10+6*t_0^8*t_1^11+5*t_0^7*t_1^12+4*t_0^6*t_1^13+3*t_0^5*t_1^14+2*t_0^4*t_1^15+t_0^3*t_1^16, (1,1) => 0, (2,1) => 0, (3,0) => t_0^21*t_1^6+t_0^20*t_1^7+2*t_0^19*t_1^8+3*t_0^18*t_1^9+4*t_0^17*t_1^10+5*t_0^16*t_1^11+6*t_0^15*t_1^12+6*t_0^14*t_1^13+6*t_0^13*t_1^14+6*t_0^12*t_1^15+5*t_0^11*t_1^16+4*t_0^10*t_1^17+3*t_0^9*t_1^18+2*t_0^8*t_1^19+t_0^7*t_1^20+t_0^6*t_1^21, (3,1) => 0, (4,0) => 0, (5,0) => 0, (4,1) => t_0^29*t_1^14+t_0^28*t_1^15+2*t_0^27*t_1^16+3*t_0^26*t_1^17+4*t_0^25*t_1^18+5*t_0^24*t_1^19+6*t_0^23*t_1^20+6*t_0^22*t_1^21+6*t_0^21*t_1^22+6*t_0^20*t_1^23+5*t_0^19*t_1^24+4*t_0^18*t_1^25+3*t_0^17*t_1^26+2*t_0^16*t_1^27+t_0^15*t_1^28+t_0^14*t_1^29, (5,1) => t_0^32*t_1^19+2*t_0^31*t_1^20+3*t_0^30*t_1^21+4*t_0^29*t_1^22+5*t_0^28*t_1^23+6*t_0^27*t_1^24+7*t_0^26*t_1^25+7*t_0^25*t_1^26+6*t_0^24*t_1^27+5*t_0^23*t_1^28+4*t_0^22*t_1^29+3*t_0^21*t_1^30+2*t_0^20*t_1^31+t_0^19*t_1^32, (6,0) => 0};
--sb represents the betti numbers as sums of Schur functors
sb83 = new HashTable from {(7,0) => {}, (6,1) => {({34,25},1)}, (7,1) => {({35,32},1)}, (0,0) => {({3,0},1)}, (0,1) => {}, (1,0) => {({10,1},1)}, (2,0) => {({16,3},1)}, (1,1) => {}, (2,1) => {}, (3,0) => {({21,6},1)}, (3,1) => {}, (4,0) => {}, (4,1) => {({29,14},1)}, (5,0) => {}, (6,0) => {}, (5,1) => {({32,19},1)}};
--dw encodes the dominant weights in each entry
dw83 = new HashTable from {(7,0) => {}, (6,1) => {{34,25}}, (7,1) => {{35,32}}, (0,0) => {{3,0}}, (0,1) => {}, (1,0) => {{10,1}}, (2,0) => {{16,3}}, (1,1) => {}, (2,1) => {}, (3,0) => {{21,6}}, (3,1) => {}, (4,0) => {}, (4,1) => {{29,14}}, (5,0) => {}, (6,0) => {}, (5,1) => {{32,19}}};
--lw encodes the lex leading weight in each entry
lw83 = new HashTable from {(7,0) => {}, (6,1) => {34,25}, (7,1) => {35,32}, (0,0) => {3,0}, (0,1) => {}, (1,0) => {10,1}, (2,0) => {16,3}, (1,1) => {}, (2,1) => {}, (3,0) => {21,6}, (3,1) => {}, (4,0) => {}, (4,1) => {29,14}, (5,0) => {}, (6,0) => {}, (5,1) => {32,19}};
--nr encodes the number of disctinct reprsentations in each entry
nr83 = new HashTable from {(7,0) => 0, (6,1) => 1, (7,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (2,1) => 0, (3,0) => 1, (3,1) => 0, (4,0) => 0, (4,1) => 1, (5,0) => 0, (6,0) => 0, (5,1) => 1};
--nrm encodes the number of representations with multiplicity in each entry
nrm83 = new HashTable from {(7,0) => 0, (6,1) => 1, (7,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (2,1) => 0, (3,0) => 1, (3,1) => 0, (4,0) => 0, (4,1) => 1, (5,0) => 0, (6,0) => 0, (5,1) => 1};
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
er83 = new HashTable from {(7,0) => 0, (6,1) => 0, (7,1) => 0, (0,0) => 0, (0,1) => 0, (1,0) => 0, (2,0) => 0, (1,1) => 0, (2,1) => 0, (3,0) => 0, (3,1) => 0, (4,0) => 0, (4,1) => 0, (5,0) => 0, (6,0) => 0, (5,1) => 0};
--bs encodes the Boij-Soederberg coefficients each entry
bs83 = {40320/1};
end;