--This file computes Betti tables for P^2 for d = 4 and b = 2
A := QQ[t_0,t_1,t_2];
--tb stands for Total Betti numbers
tb42 = new HashTable from {(5,2) => 0, (6,1) => 4488, (7,0) => 0, (8,0) => 0, (6,2) => 0, (7,1) => 4950, (9,0) => 0, (8,1) => 3630, (7,2) => 0, (10,0) => 0, (9,1) => 1804, (8,2) => 0, (11,0) => 0, (10,1) => 588, (9,2) => 0, (12,0) => 0, (11,1) => 114, (10,2) => 0, (12,1) => 10, (11,2) => 0, (12,2) => 0, (0,0) => 6, (0,1) => 0, (1,0) => 62, (2,0) => 276, (0,2) => 0, (1,1) => 0, (3,0) => 660, (2,1) => 0, (1,2) => 0, (3,1) => 55, (2,2) => 0, (4,0) => 825, (3,2) => 0, (4,1) => 450, (5,0) => 252, (4,2) => 0, (5,1) => 2376, (6,0) => 0};
--mb stands for Multigraded Betti numbers
mb42 = new HashTable from {(7,0) => 0, (6,1) => t_0^16*t_1^10*t_2^4+t_0^16*t_1^9*t_2^5+2*t_0^16*t_1^8*t_2^6+2*t_0^16*t_1^7*t_2^7+2*t_0^16*t_1^6*t_2^8+t_0^16*t_1^5*t_2^9+t_0^16*t_1^4*t_2^10+t_0^15*t_1^12*t_2^3+3*t_0^15*t_1^11*t_2^4+6*t_0^15*t_1^10*t_2^5+9*t_0^15*t_1^9*t_2^6+11*t_0^15*t_1^8*t_2^7+11*t_0^15*t_1^7*t_2^8+9*t_0^15*t_1^6*t_2^9+6*t_0^15*t_1^5*t_2^10+3*t_0^15*t_1^4*t_2^11+t_0^15*t_1^3*t_2^12+t_0^14*t_1^13*t_2^3+6*t_0^14*t_1^12*t_2^4+13*t_0^14*t_1^11*t_2^5+23*t_0^14*t_1^10*t_2^6+29*t_0^14*t_1^9*t_2^7+33*t_0^14*t_1^8*t_2^8+29*t_0^14*t_1^7*t_2^9+23*t_0^14*t_1^6*t_2^10+13*t_0^14*t_1^5*t_2^11+6*t_0^14*t_1^4*t_2^12+t_0^14*t_1^3*t_2^13+t_0^13*t_1^14*t_2^3+6*t_0^13*t_1^13*t_2^4+18*t_0^13*t_1^12*t_2^5+35*t_0^13*t_1^11*t_2^6+53*t_0^13*t_1^10*t_2^7+63*t_0^13*t_1^9*t_2^8+63*t_0^13*t_1^8*t_2^9+53*t_0^13*t_1^7*t_2^10+35*t_0^13*t_1^6*t_2^11+18*t_0^13*t_1^5*t_2^12+6*t_0^13*t_1^4*t_2^13+t_0^13*t_1^3*t_2^14+t_0^12*t_1^15*t_2^3+6*t_0^12*t_1^14*t_2^4+18*t_0^12*t_1^13*t_2^5+43*t_0^12*t_1^12*t_2^6+71*t_0^12*t_1^11*t_2^7+97*t_0^12*t_1^10*t_2^8+104*t_0^12*t_1^9*t_2^9+97*t_0^12*t_1^8*t_2^10+71*t_0^12*t_1^7*t_2^11+43*t_0^12*t_1^6*t_2^12+18*t_0^12*t_1^5*t_2^13+6*t_0^12*t_1^4*t_2^14+t_0^12*t_1^3*t_2^15+3*t_0^11*t_1^15*t_2^4+13*t_0^11*t_1^14*t_2^5+35*t_0^11*t_1^13*t_2^6+71*t_0^11*t_1^12*t_2^7+108*t_0^11*t_1^11*t_2^8+132*t_0^11*t_1^10*t_2^9+132*t_0^11*t_1^9*t_2^10+108*t_0^11*t_1^8*t_2^11+71*t_0^11*t_1^7*t_2^12+35*t_0^11*t_1^6*t_2^13+13*t_0^11*t_1^5*t_2^14+3*t_0^11*t_1^4*t_2^15+t_0^10*t_1^16*t_2^4+6*t_0^10*t_1^15*t_2^5+23*t_0^10*t_1^14*t_2^6+53*t_0^10*t_1^13*t_2^7+97*t_0^10*t_1^12*t_2^8+132*t_0^10*t_1^11*t_2^9+150*t_0^10*t_1^10*t_2^10+132*t_0^10*t_1^9*t_2^11+97*t_0^10*t_1^8*t_2^12+53*t_0^10*t_1^7*t_2^13+23*t_0^10*t_1^6*t_2^14+6*t_0^10*t_1^5*t_2^15+t_0^10*t_1^4*t_2^16+t_0^9*t_1^16*t_2^5+9*t_0^9*t_1^15*t_2^6+29*t_0^9*t_1^14*t_2^7+63*t_0^9*t_1^13*t_2^8+104*t_0^9*t_1^12*t_2^9+132*t_0^9*t_1^11*t_2^10+132*t_0^9*t_1^10*t_2^11+104*t_0^9*t_1^9*t_2^12+63*t_0^9*t_1^8*t_2^13+29*t_0^9*t_1^7*t_2^14+9*t_0^9*t_1^6*t_2^15+t_0^9*t_1^5*t_2^16+2*t_0^8*t_1^16*t_2^6+11*t_0^8*t_1^15*t_2^7+33*t_0^8*t_1^14*t_2^8+63*t_0^8*t_1^13*t_2^9+97*t_0^8*t_1^12*t_2^10+108*t_0^8*t_1^11*t_2^11+97*t_0^8*t_1^10*t_2^12+63*t_0^8*t_1^9*t_2^13+33*t_0^8*t_1^8*t_2^14+11*t_0^8*t_1^7*t_2^15+2*t_0^8*t_1^6*t_2^16+2*t_0^7*t_1^16*t_2^7+11*t_0^7*t_1^15*t_2^8+29*t_0^7*t_1^14*t_2^9+53*t_0^7*t_1^13*t_2^10+71*t_0^7*t_1^12*t_2^11+71*t_0^7*t_1^11*t_2^12+53*t_0^7*t_1^10*t_2^13+29*t_0^7*t_1^9*t_2^14+11*t_0^7*t_1^8*t_2^15+2*t_0^7*t_1^7*t_2^16+2*t_0^6*t_1^16*t_2^8+9*t_0^6*t_1^15*t_2^9+23*t_0^6*t_1^14*t_2^10+35*t_0^6*t_1^13*t_2^11+43*t_0^6*t_1^12*t_2^12+35*t_0^6*t_1^11*t_2^13+23*t_0^6*t_1^10*t_2^14+9*t_0^6*t_1^9*t_2^15+2*t_0^6*t_1^8*t_2^16+t_0^5*t_1^16*t_2^9+6*t_0^5*t_1^15*t_2^10+13*t_0^5*t_1^14*t_2^11+18*t_0^5*t_1^13*t_2^12+18*t_0^5*t_1^12*t_2^13+13*t_0^5*t_1^11*t_2^14+6*t_0^5*t_1^10*t_2^15+t_0^5*t_1^9*t_2^16+t_0^4*t_1^16*t_2^10+3*t_0^4*t_1^15*t_2^11+6*t_0^4*t_1^14*t_2^12+6*t_0^4*t_1^13*t_2^13+6*t_0^4*t_1^12*t_2^14+3*t_0^4*t_1^11*t_2^15+t_0^4*t_1^10*t_2^16+t_0^3*t_1^15*t_2^12+t_0^3*t_1^14*t_2^13+t_0^3*t_1^13*t_2^14+t_0^3*t_1^12*t_2^15, (5,2) => 0, (8,0) => 0, (6,2) => 0, (7,1) => t_0^17*t_1^12*t_2^5+2*t_0^17*t_1^11*t_2^6+3*t_0^17*t_1^10*t_2^7+4*t_0^17*t_1^9*t_2^8+4*t_0^17*t_1^8*t_2^9+3*t_0^17*t_1^7*t_2^10+2*t_0^17*t_1^6*t_2^11+t_0^17*t_1^5*t_2^12+2*t_0^16*t_1^13*t_2^5+6*t_0^16*t_1^12*t_2^6+11*t_0^16*t_1^11*t_2^7+15*t_0^16*t_1^10*t_2^8+17*t_0^16*t_1^9*t_2^9+15*t_0^16*t_1^8*t_2^10+11*t_0^16*t_1^7*t_2^11+6*t_0^16*t_1^6*t_2^12+2*t_0^16*t_1^5*t_2^13+t_0^15*t_1^15*t_2^4+4*t_0^15*t_1^14*t_2^5+12*t_0^15*t_1^13*t_2^6+25*t_0^15*t_1^12*t_2^7+38*t_0^15*t_1^11*t_2^8+46*t_0^15*t_1^10*t_2^9+46*t_0^15*t_1^9*t_2^10+38*t_0^15*t_1^8*t_2^11+25*t_0^15*t_1^7*t_2^12+12*t_0^15*t_1^6*t_2^13+4*t_0^15*t_1^5*t_2^14+t_0^15*t_1^4*t_2^15+4*t_0^14*t_1^15*t_2^5+13*t_0^14*t_1^14*t_2^6+33*t_0^14*t_1^13*t_2^7+58*t_0^14*t_1^12*t_2^8+80*t_0^14*t_1^11*t_2^9+87*t_0^14*t_1^10*t_2^10+80*t_0^14*t_1^9*t_2^11+58*t_0^14*t_1^8*t_2^12+33*t_0^14*t_1^7*t_2^13+13*t_0^14*t_1^6*t_2^14+4*t_0^14*t_1^5*t_2^15+2*t_0^13*t_1^16*t_2^5+12*t_0^13*t_1^15*t_2^6+33*t_0^13*t_1^14*t_2^7+68*t_0^13*t_1^13*t_2^8+106*t_0^13*t_1^12*t_2^9+130*t_0^13*t_1^11*t_2^10+130*t_0^13*t_1^10*t_2^11+106*t_0^13*t_1^9*t_2^12+68*t_0^13*t_1^8*t_2^13+33*t_0^13*t_1^7*t_2^14+12*t_0^13*t_1^6*t_2^15+2*t_0^13*t_1^5*t_2^16+t_0^12*t_1^17*t_2^5+6*t_0^12*t_1^16*t_2^6+25*t_0^12*t_1^15*t_2^7+58*t_0^12*t_1^14*t_2^8+106*t_0^12*t_1^13*t_2^9+147*t_0^12*t_1^12*t_2^10+165*t_0^12*t_1^11*t_2^11+147*t_0^12*t_1^10*t_2^12+106*t_0^12*t_1^9*t_2^13+58*t_0^12*t_1^8*t_2^14+25*t_0^12*t_1^7*t_2^15+6*t_0^12*t_1^6*t_2^16+t_0^12*t_1^5*t_2^17+2*t_0^11*t_1^17*t_2^6+11*t_0^11*t_1^16*t_2^7+38*t_0^11*t_1^15*t_2^8+80*t_0^11*t_1^14*t_2^9+130*t_0^11*t_1^13*t_2^10+165*t_0^11*t_1^12*t_2^11+165*t_0^11*t_1^11*t_2^12+130*t_0^11*t_1^10*t_2^13+80*t_0^11*t_1^9*t_2^14+38*t_0^11*t_1^8*t_2^15+11*t_0^11*t_1^7*t_2^16+2*t_0^11*t_1^6*t_2^17+3*t_0^10*t_1^17*t_2^7+15*t_0^10*t_1^16*t_2^8+46*t_0^10*t_1^15*t_2^9+87*t_0^10*t_1^14*t_2^10+130*t_0^10*t_1^13*t_2^11+147*t_0^10*t_1^12*t_2^12+130*t_0^10*t_1^11*t_2^13+87*t_0^10*t_1^10*t_2^14+46*t_0^10*t_1^9*t_2^15+15*t_0^10*t_1^8*t_2^16+3*t_0^10*t_1^7*t_2^17+4*t_0^9*t_1^17*t_2^8+17*t_0^9*t_1^16*t_2^9+46*t_0^9*t_1^15*t_2^10+80*t_0^9*t_1^14*t_2^11+106*t_0^9*t_1^13*t_2^12+106*t_0^9*t_1^12*t_2^13+80*t_0^9*t_1^11*t_2^14+46*t_0^9*t_1^10*t_2^15+17*t_0^9*t_1^9*t_2^16+4*t_0^9*t_1^8*t_2^17+4*t_0^8*t_1^17*t_2^9+15*t_0^8*t_1^16*t_2^10+38*t_0^8*t_1^15*t_2^11+58*t_0^8*t_1^14*t_2^12+68*t_0^8*t_1^13*t_2^13+58*t_0^8*t_1^12*t_2^14+38*t_0^8*t_1^11*t_2^15+15*t_0^8*t_1^10*t_2^16+4*t_0^8*t_1^9*t_2^17+3*t_0^7*t_1^17*t_2^10+11*t_0^7*t_1^16*t_2^11+25*t_0^7*t_1^15*t_2^12+33*t_0^7*t_1^14*t_2^13+33*t_0^7*t_1^13*t_2^14+25*t_0^7*t_1^12*t_2^15+11*t_0^7*t_1^11*t_2^16+3*t_0^7*t_1^10*t_2^17+2*t_0^6*t_1^17*t_2^11+6*t_0^6*t_1^16*t_2^12+12*t_0^6*t_1^15*t_2^13+13*t_0^6*t_1^14*t_2^14+12*t_0^6*t_1^13*t_2^15+6*t_0^6*t_1^12*t_2^16+2*t_0^6*t_1^11*t_2^17+t_0^5*t_1^17*t_2^12+2*t_0^5*t_1^16*t_2^13+4*t_0^5*t_1^15*t_2^14+4*t_0^5*t_1^14*t_2^15+2*t_0^5*t_1^13*t_2^16+t_0^5*t_1^12*t_2^17+t_0^4*t_1^15*t_2^15, (7,2) => 0, (8,1) => t_0^18*t_1^13*t_2^7+2*t_0^18*t_1^12*t_2^8+3*t_0^18*t_1^11*t_2^9+3*t_0^18*t_1^10*t_2^10+3*t_0^18*t_1^9*t_2^11+2*t_0^18*t_1^8*t_2^12+t_0^18*t_1^7*t_2^13+t_0^17*t_1^15*t_2^6+3*t_0^17*t_1^14*t_2^7+8*t_0^17*t_1^13*t_2^8+13*t_0^17*t_1^12*t_2^9+16*t_0^17*t_1^11*t_2^10+16*t_0^17*t_1^10*t_2^11+13*t_0^17*t_1^9*t_2^12+8*t_0^17*t_1^8*t_2^13+3*t_0^17*t_1^7*t_2^14+t_0^17*t_1^6*t_2^15+t_0^16*t_1^16*t_2^6+6*t_0^16*t_1^15*t_2^7+14*t_0^16*t_1^14*t_2^8+28*t_0^16*t_1^13*t_2^9+38*t_0^16*t_1^12*t_2^10+43*t_0^16*t_1^11*t_2^11+38*t_0^16*t_1^10*t_2^12+28*t_0^16*t_1^9*t_2^13+14*t_0^16*t_1^8*t_2^14+6*t_0^16*t_1^7*t_2^15+t_0^16*t_1^6*t_2^16+t_0^15*t_1^17*t_2^6+6*t_0^15*t_1^16*t_2^7+19*t_0^15*t_1^15*t_2^8+39*t_0^15*t_1^14*t_2^9+63*t_0^15*t_1^13*t_2^10+78*t_0^15*t_1^12*t_2^11+78*t_0^15*t_1^11*t_2^12+63*t_0^15*t_1^10*t_2^13+39*t_0^15*t_1^9*t_2^14+19*t_0^15*t_1^8*t_2^15+6*t_0^15*t_1^7*t_2^16+t_0^15*t_1^6*t_2^17+3*t_0^14*t_1^17*t_2^7+14*t_0^14*t_1^16*t_2^8+39*t_0^14*t_1^15*t_2^9+70*t_0^14*t_1^14*t_2^10+102*t_0^14*t_1^13*t_2^11+113*t_0^14*t_1^12*t_2^12+102*t_0^14*t_1^11*t_2^13+70*t_0^14*t_1^10*t_2^14+39*t_0^14*t_1^9*t_2^15+14*t_0^14*t_1^8*t_2^16+3*t_0^14*t_1^7*t_2^17+t_0^13*t_1^18*t_2^7+8*t_0^13*t_1^17*t_2^8+28*t_0^13*t_1^16*t_2^9+63*t_0^13*t_1^15*t_2^10+102*t_0^13*t_1^14*t_2^11+131*t_0^13*t_1^13*t_2^12+131*t_0^13*t_1^12*t_2^13+102*t_0^13*t_1^11*t_2^14+63*t_0^13*t_1^10*t_2^15+28*t_0^13*t_1^9*t_2^16+8*t_0^13*t_1^8*t_2^17+t_0^13*t_1^7*t_2^18+2*t_0^12*t_1^18*t_2^8+13*t_0^12*t_1^17*t_2^9+38*t_0^12*t_1^16*t_2^10+78*t_0^12*t_1^15*t_2^11+113*t_0^12*t_1^14*t_2^12+131*t_0^12*t_1^13*t_2^13+113*t_0^12*t_1^12*t_2^14+78*t_0^12*t_1^11*t_2^15+38*t_0^12*t_1^10*t_2^16+13*t_0^12*t_1^9*t_2^17+2*t_0^12*t_1^8*t_2^18+3*t_0^11*t_1^18*t_2^9+16*t_0^11*t_1^17*t_2^10+43*t_0^11*t_1^16*t_2^11+78*t_0^11*t_1^15*t_2^12+102*t_0^11*t_1^14*t_2^13+102*t_0^11*t_1^13*t_2^14+78*t_0^11*t_1^12*t_2^15+43*t_0^11*t_1^11*t_2^16+16*t_0^11*t_1^10*t_2^17+3*t_0^11*t_1^9*t_2^18+3*t_0^10*t_1^18*t_2^10+16*t_0^10*t_1^17*t_2^11+38*t_0^10*t_1^16*t_2^12+63*t_0^10*t_1^15*t_2^13+70*t_0^10*t_1^14*t_2^14+63*t_0^10*t_1^13*t_2^15+38*t_0^10*t_1^12*t_2^16+16*t_0^10*t_1^11*t_2^17+3*t_0^10*t_1^10*t_2^18+3*t_0^9*t_1^18*t_2^11+13*t_0^9*t_1^17*t_2^12+28*t_0^9*t_1^16*t_2^13+39*t_0^9*t_1^15*t_2^14+39*t_0^9*t_1^14*t_2^15+28*t_0^9*t_1^13*t_2^16+13*t_0^9*t_1^12*t_2^17+3*t_0^9*t_1^11*t_2^18+2*t_0^8*t_1^18*t_2^12+8*t_0^8*t_1^17*t_2^13+14*t_0^8*t_1^16*t_2^14+19*t_0^8*t_1^15*t_2^15+14*t_0^8*t_1^14*t_2^16+8*t_0^8*t_1^13*t_2^17+2*t_0^8*t_1^12*t_2^18+t_0^7*t_1^18*t_2^13+3*t_0^7*t_1^17*t_2^14+6*t_0^7*t_1^16*t_2^15+6*t_0^7*t_1^15*t_2^16+3*t_0^7*t_1^14*t_2^17+t_0^7*t_1^13*t_2^18+t_0^6*t_1^17*t_2^15+t_0^6*t_1^16*t_2^16+t_0^6*t_1^15*t_2^17, (9,0) => 0, (8,2) => 0, (9,1) => t_0^19*t_1^13*t_2^10+t_0^19*t_1^12*t_2^11+t_0^19*t_1^11*t_2^12+t_0^19*t_1^10*t_2^13+t_0^18*t_1^16*t_2^8+3*t_0^18*t_1^15*t_2^9+6*t_0^18*t_1^14*t_2^10+9*t_0^18*t_1^13*t_2^11+10*t_0^18*t_1^12*t_2^12+9*t_0^18*t_1^11*t_2^13+6*t_0^18*t_1^10*t_2^14+3*t_0^18*t_1^9*t_2^15+t_0^18*t_1^8*t_2^16+t_0^17*t_1^17*t_2^8+5*t_0^17*t_1^16*t_2^9+12*t_0^17*t_1^15*t_2^10+20*t_0^17*t_1^14*t_2^11+26*t_0^17*t_1^13*t_2^12+26*t_0^17*t_1^12*t_2^13+20*t_0^17*t_1^11*t_2^14+12*t_0^17*t_1^10*t_2^15+5*t_0^17*t_1^9*t_2^16+t_0^17*t_1^8*t_2^17+t_0^16*t_1^18*t_2^8+5*t_0^16*t_1^17*t_2^9+16*t_0^16*t_1^16*t_2^10+30*t_0^16*t_1^15*t_2^11+44*t_0^16*t_1^14*t_2^12+50*t_0^16*t_1^13*t_2^13+44*t_0^16*t_1^12*t_2^14+30*t_0^16*t_1^11*t_2^15+16*t_0^16*t_1^10*t_2^16+5*t_0^16*t_1^9*t_2^17+t_0^16*t_1^8*t_2^18+3*t_0^15*t_1^18*t_2^9+12*t_0^15*t_1^17*t_2^10+30*t_0^15*t_1^16*t_2^11+51*t_0^15*t_1^15*t_2^12+66*t_0^15*t_1^14*t_2^13+66*t_0^15*t_1^13*t_2^14+51*t_0^15*t_1^12*t_2^15+30*t_0^15*t_1^11*t_2^16+12*t_0^15*t_1^10*t_2^17+3*t_0^15*t_1^9*t_2^18+6*t_0^14*t_1^18*t_2^10+20*t_0^14*t_1^17*t_2^11+44*t_0^14*t_1^16*t_2^12+66*t_0^14*t_1^15*t_2^13+76*t_0^14*t_1^14*t_2^14+66*t_0^14*t_1^13*t_2^15+44*t_0^14*t_1^12*t_2^16+20*t_0^14*t_1^11*t_2^17+6*t_0^14*t_1^10*t_2^18+t_0^13*t_1^19*t_2^10+9*t_0^13*t_1^18*t_2^11+26*t_0^13*t_1^17*t_2^12+50*t_0^13*t_1^16*t_2^13+66*t_0^13*t_1^15*t_2^14+66*t_0^13*t_1^14*t_2^15+50*t_0^13*t_1^13*t_2^16+26*t_0^13*t_1^12*t_2^17+9*t_0^13*t_1^11*t_2^18+t_0^13*t_1^10*t_2^19+t_0^12*t_1^19*t_2^11+10*t_0^12*t_1^18*t_2^12+26*t_0^12*t_1^17*t_2^13+44*t_0^12*t_1^16*t_2^14+51*t_0^12*t_1^15*t_2^15+44*t_0^12*t_1^14*t_2^16+26*t_0^12*t_1^13*t_2^17+10*t_0^12*t_1^12*t_2^18+t_0^12*t_1^11*t_2^19+t_0^11*t_1^19*t_2^12+9*t_0^11*t_1^18*t_2^13+20*t_0^11*t_1^17*t_2^14+30*t_0^11*t_1^16*t_2^15+30*t_0^11*t_1^15*t_2^16+20*t_0^11*t_1^14*t_2^17+9*t_0^11*t_1^13*t_2^18+t_0^11*t_1^12*t_2^19+t_0^10*t_1^19*t_2^13+6*t_0^10*t_1^18*t_2^14+12*t_0^10*t_1^17*t_2^15+16*t_0^10*t_1^16*t_2^16+12*t_0^10*t_1^15*t_2^17+6*t_0^10*t_1^14*t_2^18+t_0^10*t_1^13*t_2^19+3*t_0^9*t_1^18*t_2^15+5*t_0^9*t_1^17*t_2^16+5*t_0^9*t_1^16*t_2^17+3*t_0^9*t_1^15*t_2^18+t_0^8*t_1^18*t_2^16+t_0^8*t_1^17*t_2^17+t_0^8*t_1^16*t_2^18, (10,0) => 0, (11,0) => 0, (10,1) => t_0^19*t_1^16*t_2^11+2*t_0^19*t_1^15*t_2^12+3*t_0^19*t_1^14*t_2^13+3*t_0^19*t_1^13*t_2^14+2*t_0^19*t_1^12*t_2^15+t_0^19*t_1^11*t_2^16+t_0^18*t_1^18*t_2^10+3*t_0^18*t_1^17*t_2^11+7*t_0^18*t_1^16*t_2^12+10*t_0^18*t_1^15*t_2^13+12*t_0^18*t_1^14*t_2^14+10*t_0^18*t_1^13*t_2^15+7*t_0^18*t_1^12*t_2^16+3*t_0^18*t_1^11*t_2^17+t_0^18*t_1^10*t_2^18+3*t_0^17*t_1^18*t_2^11+8*t_0^17*t_1^17*t_2^12+15*t_0^17*t_1^16*t_2^13+20*t_0^17*t_1^15*t_2^14+20*t_0^17*t_1^14*t_2^15+15*t_0^17*t_1^13*t_2^16+8*t_0^17*t_1^12*t_2^17+3*t_0^17*t_1^11*t_2^18+t_0^16*t_1^19*t_2^11+7*t_0^16*t_1^18*t_2^12+15*t_0^16*t_1^17*t_2^13+25*t_0^16*t_1^16*t_2^14+28*t_0^16*t_1^15*t_2^15+25*t_0^16*t_1^14*t_2^16+15*t_0^16*t_1^13*t_2^17+7*t_0^16*t_1^12*t_2^18+t_0^16*t_1^11*t_2^19+2*t_0^15*t_1^19*t_2^12+10*t_0^15*t_1^18*t_2^13+20*t_0^15*t_1^17*t_2^14+28*t_0^15*t_1^16*t_2^15+28*t_0^15*t_1^15*t_2^16+20*t_0^15*t_1^14*t_2^17+10*t_0^15*t_1^13*t_2^18+2*t_0^15*t_1^12*t_2^19+3*t_0^14*t_1^19*t_2^13+12*t_0^14*t_1^18*t_2^14+20*t_0^14*t_1^17*t_2^15+25*t_0^14*t_1^16*t_2^16+20*t_0^14*t_1^15*t_2^17+12*t_0^14*t_1^14*t_2^18+3*t_0^14*t_1^13*t_2^19+3*t_0^13*t_1^19*t_2^14+10*t_0^13*t_1^18*t_2^15+15*t_0^13*t_1^17*t_2^16+15*t_0^13*t_1^16*t_2^17+10*t_0^13*t_1^15*t_2^18+3*t_0^13*t_1^14*t_2^19+2*t_0^12*t_1^19*t_2^15+7*t_0^12*t_1^18*t_2^16+8*t_0^12*t_1^17*t_2^17+7*t_0^12*t_1^16*t_2^18+2*t_0^12*t_1^15*t_2^19+t_0^11*t_1^19*t_2^16+3*t_0^11*t_1^18*t_2^17+3*t_0^11*t_1^17*t_2^18+t_0^11*t_1^16*t_2^19+t_0^10*t_1^18*t_2^18, (9,2) => 0, (12,0) => 0, (11,1) => t_0^19*t_1^18*t_2^13+2*t_0^19*t_1^17*t_2^14+3*t_0^19*t_1^16*t_2^15+3*t_0^19*t_1^15*t_2^16+2*t_0^19*t_1^14*t_2^17+t_0^19*t_1^13*t_2^18+t_0^18*t_1^19*t_2^13+3*t_0^18*t_1^18*t_2^14+5*t_0^18*t_1^17*t_2^15+6*t_0^18*t_1^16*t_2^16+5*t_0^18*t_1^15*t_2^17+3*t_0^18*t_1^14*t_2^18+t_0^18*t_1^13*t_2^19+2*t_0^17*t_1^19*t_2^14+5*t_0^17*t_1^18*t_2^15+7*t_0^17*t_1^17*t_2^16+7*t_0^17*t_1^16*t_2^17+5*t_0^17*t_1^15*t_2^18+2*t_0^17*t_1^14*t_2^19+3*t_0^16*t_1^19*t_2^15+6*t_0^16*t_1^18*t_2^16+7*t_0^16*t_1^17*t_2^17+6*t_0^16*t_1^16*t_2^18+3*t_0^16*t_1^15*t_2^19+3*t_0^15*t_1^19*t_2^16+5*t_0^15*t_1^18*t_2^17+5*t_0^15*t_1^17*t_2^18+3*t_0^15*t_1^16*t_2^19+2*t_0^14*t_1^19*t_2^17+3*t_0^14*t_1^18*t_2^18+2*t_0^14*t_1^17*t_2^19+t_0^13*t_1^19*t_2^18+t_0^13*t_1^18*t_2^19, (10,2) => 0, (12,1) => t_0^19*t_1^19*t_2^16+t_0^19*t_1^18*t_2^17+t_0^19*t_1^17*t_2^18+t_0^19*t_1^16*t_2^19+t_0^18*t_1^19*t_2^17+t_0^18*t_1^18*t_2^18+t_0^18*t_1^17*t_2^19+t_0^17*t_1^19*t_2^18+t_0^17*t_1^18*t_2^19+t_0^16*t_1^19*t_2^19, (11,2) => 0, (12,2) => 0, (0,0) => t_0^2+t_0*t_1+t_0*t_2+t_1^2+t_1*t_2+t_2^2, (0,1) => 0, (1,0) => t_0^5*t_1+t_0^5*t_2+2*t_0^4*t_1^2+3*t_0^4*t_1*t_2+2*t_0^4*t_2^2+2*t_0^3*t_1^3+4*t_0^3*t_1^2*t_2+4*t_0^3*t_1*t_2^2+2*t_0^3*t_2^3+2*t_0^2*t_1^4+4*t_0^2*t_1^3*t_2+5*t_0^2*t_1^2*t_2^2+4*t_0^2*t_1*t_2^3+2*t_0^2*t_2^4+t_0*t_1^5+3*t_0*t_1^4*t_2+4*t_0*t_1^3*t_2^2+4*t_0*t_1^2*t_2^3+3*t_0*t_1*t_2^4+t_0*t_2^5+t_1^5*t_2+2*t_1^4*t_2^2+2*t_1^3*t_2^3+2*t_1^2*t_2^4+t_1*t_2^5, (1,1) => 0, (0,2) => 0, (2,0) => t_0^8*t_1*t_2+t_0^7*t_1^3+3*t_0^7*t_1^2*t_2+3*t_0^7*t_1*t_2^2+t_0^7*t_2^3+t_0^6*t_1^4+5*t_0^6*t_1^3*t_2+6*t_0^6*t_1^2*t_2^2+5*t_0^6*t_1*t_2^3+t_0^6*t_2^4+2*t_0^5*t_1^5+7*t_0^5*t_1^4*t_2+11*t_0^5*t_1^3*t_2^2+11*t_0^5*t_1^2*t_2^3+7*t_0^5*t_1*t_2^4+2*t_0^5*t_2^5+t_0^4*t_1^6+7*t_0^4*t_1^5*t_2+12*t_0^4*t_1^4*t_2^2+15*t_0^4*t_1^3*t_2^3+12*t_0^4*t_1^2*t_2^4+7*t_0^4*t_1*t_2^5+t_0^4*t_2^6+t_0^3*t_1^7+5*t_0^3*t_1^6*t_2+11*t_0^3*t_1^5*t_2^2+15*t_0^3*t_1^4*t_2^3+15*t_0^3*t_1^3*t_2^4+11*t_0^3*t_1^2*t_2^5+5*t_0^3*t_1*t_2^6+t_0^3*t_2^7+3*t_0^2*t_1^7*t_2+6*t_0^2*t_1^6*t_2^2+11*t_0^2*t_1^5*t_2^3+12*t_0^2*t_1^4*t_2^4+11*t_0^2*t_1^3*t_2^5+6*t_0^2*t_1^2*t_2^6+3*t_0^2*t_1*t_2^7+t_0*t_1^8*t_2+3*t_0*t_1^7*t_2^2+5*t_0*t_1^6*t_2^3+7*t_0*t_1^5*t_2^4+7*t_0*t_1^4*t_2^5+5*t_0*t_1^3*t_2^6+3*t_0*t_1^2*t_2^7+t_0*t_1*t_2^8+t_1^7*t_2^3+t_1^6*t_2^4+2*t_1^5*t_2^5+t_1^4*t_2^6+t_1^3*t_2^7, (1,2) => 0, (2,1) => 0, (3,0) => t_0^10*t_1^3*t_2+t_0^10*t_1^2*t_2^2+t_0^10*t_1*t_2^3+2*t_0^9*t_1^4*t_2+4*t_0^9*t_1^3*t_2^2+4*t_0^9*t_1^2*t_2^3+2*t_0^9*t_1*t_2^4+3*t_0^8*t_1^5*t_2+7*t_0^8*t_1^4*t_2^2+10*t_0^8*t_1^3*t_2^3+7*t_0^8*t_1^2*t_2^4+3*t_0^8*t_1*t_2^5+4*t_0^7*t_1^6*t_2+11*t_0^7*t_1^5*t_2^2+17*t_0^7*t_1^4*t_2^3+17*t_0^7*t_1^3*t_2^4+11*t_0^7*t_1^2*t_2^5+4*t_0^7*t_1*t_2^6+4*t_0^6*t_1^7*t_2+12*t_0^6*t_1^6*t_2^2+22*t_0^6*t_1^5*t_2^3+25*t_0^6*t_1^4*t_2^4+22*t_0^6*t_1^3*t_2^5+12*t_0^6*t_1^2*t_2^6+4*t_0^6*t_1*t_2^7+3*t_0^5*t_1^8*t_2+11*t_0^5*t_1^7*t_2^2+22*t_0^5*t_1^6*t_2^3+30*t_0^5*t_1^5*t_2^4+30*t_0^5*t_1^4*t_2^5+22*t_0^5*t_1^3*t_2^6+11*t_0^5*t_1^2*t_2^7+3*t_0^5*t_1*t_2^8+2*t_0^4*t_1^9*t_2+7*t_0^4*t_1^8*t_2^2+17*t_0^4*t_1^7*t_2^3+25*t_0^4*t_1^6*t_2^4+30*t_0^4*t_1^5*t_2^5+25*t_0^4*t_1^4*t_2^6+17*t_0^4*t_1^3*t_2^7+7*t_0^4*t_1^2*t_2^8+2*t_0^4*t_1*t_2^9+t_0^3*t_1^10*t_2+4*t_0^3*t_1^9*t_2^2+10*t_0^3*t_1^8*t_2^3+17*t_0^3*t_1^7*t_2^4+22*t_0^3*t_1^6*t_2^5+22*t_0^3*t_1^5*t_2^6+17*t_0^3*t_1^4*t_2^7+10*t_0^3*t_1^3*t_2^8+4*t_0^3*t_1^2*t_2^9+t_0^3*t_1*t_2^10+t_0^2*t_1^10*t_2^2+4*t_0^2*t_1^9*t_2^3+7*t_0^2*t_1^8*t_2^4+11*t_0^2*t_1^7*t_2^5+12*t_0^2*t_1^6*t_2^6+11*t_0^2*t_1^5*t_2^7+7*t_0^2*t_1^4*t_2^8+4*t_0^2*t_1^3*t_2^9+t_0^2*t_1^2*t_2^10+t_0*t_1^10*t_2^3+2*t_0*t_1^9*t_2^4+3*t_0*t_1^8*t_2^5+4*t_0*t_1^7*t_2^6+4*t_0*t_1^6*t_2^7+3*t_0*t_1^5*t_2^8+2*t_0*t_1^4*t_2^9+t_0*t_1^3*t_2^10, (4,0) => t_0^12*t_1^4*t_2^2+t_0^12*t_1^3*t_2^3+t_0^12*t_1^2*t_2^4+t_0^11*t_1^5*t_2^2+3*t_0^11*t_1^4*t_2^3+3*t_0^11*t_1^3*t_2^4+t_0^11*t_1^2*t_2^5+3*t_0^10*t_1^6*t_2^2+6*t_0^10*t_1^5*t_2^3+9*t_0^10*t_1^4*t_2^4+6*t_0^10*t_1^3*t_2^5+3*t_0^10*t_1^2*t_2^6+3*t_0^9*t_1^7*t_2^2+9*t_0^9*t_1^6*t_2^3+14*t_0^9*t_1^5*t_2^4+14*t_0^9*t_1^4*t_2^5+9*t_0^9*t_1^3*t_2^6+3*t_0^9*t_1^2*t_2^7+4*t_0^8*t_1^8*t_2^2+11*t_0^8*t_1^7*t_2^3+21*t_0^8*t_1^6*t_2^4+23*t_0^8*t_1^5*t_2^5+21*t_0^8*t_1^4*t_2^6+11*t_0^8*t_1^3*t_2^7+4*t_0^8*t_1^2*t_2^8+3*t_0^7*t_1^9*t_2^2+11*t_0^7*t_1^8*t_2^3+22*t_0^7*t_1^7*t_2^4+30*t_0^7*t_1^6*t_2^5+30*t_0^7*t_1^5*t_2^6+22*t_0^7*t_1^4*t_2^7+11*t_0^7*t_1^3*t_2^8+3*t_0^7*t_1^2*t_2^9+3*t_0^6*t_1^10*t_2^2+9*t_0^6*t_1^9*t_2^3+21*t_0^6*t_1^8*t_2^4+30*t_0^6*t_1^7*t_2^5+36*t_0^6*t_1^6*t_2^6+30*t_0^6*t_1^5*t_2^7+21*t_0^6*t_1^4*t_2^8+9*t_0^6*t_1^3*t_2^9+3*t_0^6*t_1^2*t_2^10+t_0^5*t_1^11*t_2^2+6*t_0^5*t_1^10*t_2^3+14*t_0^5*t_1^9*t_2^4+23*t_0^5*t_1^8*t_2^5+30*t_0^5*t_1^7*t_2^6+30*t_0^5*t_1^6*t_2^7+23*t_0^5*t_1^5*t_2^8+14*t_0^5*t_1^4*t_2^9+6*t_0^5*t_1^3*t_2^10+t_0^5*t_1^2*t_2^11+t_0^4*t_1^12*t_2^2+3*t_0^4*t_1^11*t_2^3+9*t_0^4*t_1^10*t_2^4+14*t_0^4*t_1^9*t_2^5+21*t_0^4*t_1^8*t_2^6+22*t_0^4*t_1^7*t_2^7+21*t_0^4*t_1^6*t_2^8+14*t_0^4*t_1^5*t_2^9+9*t_0^4*t_1^4*t_2^10+3*t_0^4*t_1^3*t_2^11+t_0^4*t_1^2*t_2^12+t_0^3*t_1^12*t_2^3+3*t_0^3*t_1^11*t_2^4+6*t_0^3*t_1^10*t_2^5+9*t_0^3*t_1^9*t_2^6+11*t_0^3*t_1^8*t_2^7+11*t_0^3*t_1^7*t_2^8+9*t_0^3*t_1^6*t_2^9+6*t_0^3*t_1^5*t_2^10+3*t_0^3*t_1^4*t_2^11+t_0^3*t_1^3*t_2^12+t_0^2*t_1^12*t_2^4+t_0^2*t_1^11*t_2^5+3*t_0^2*t_1^10*t_2^6+3*t_0^2*t_1^9*t_2^7+4*t_0^2*t_1^8*t_2^8+3*t_0^2*t_1^7*t_2^9+3*t_0^2*t_1^6*t_2^10+t_0^2*t_1^5*t_2^11+t_0^2*t_1^4*t_2^12, (2,2) => 0, (3,1) => t_0^9*t_1^9+t_0^9*t_1^8*t_2+t_0^9*t_1^7*t_2^2+t_0^9*t_1^6*t_2^3+t_0^9*t_1^5*t_2^4+t_0^9*t_1^4*t_2^5+t_0^9*t_1^3*t_2^6+t_0^9*t_1^2*t_2^7+t_0^9*t_1*t_2^8+t_0^9*t_2^9+t_0^8*t_1^9*t_2+t_0^8*t_1^8*t_2^2+t_0^8*t_1^7*t_2^3+t_0^8*t_1^6*t_2^4+t_0^8*t_1^5*t_2^5+t_0^8*t_1^4*t_2^6+t_0^8*t_1^3*t_2^7+t_0^8*t_1^2*t_2^8+t_0^8*t_1*t_2^9+t_0^7*t_1^9*t_2^2+t_0^7*t_1^8*t_2^3+t_0^7*t_1^7*t_2^4+t_0^7*t_1^6*t_2^5+t_0^7*t_1^5*t_2^6+t_0^7*t_1^4*t_2^7+t_0^7*t_1^3*t_2^8+t_0^7*t_1^2*t_2^9+t_0^6*t_1^9*t_2^3+t_0^6*t_1^8*t_2^4+t_0^6*t_1^7*t_2^5+t_0^6*t_1^6*t_2^6+t_0^6*t_1^5*t_2^7+t_0^6*t_1^4*t_2^8+t_0^6*t_1^3*t_2^9+t_0^5*t_1^9*t_2^4+t_0^5*t_1^8*t_2^5+t_0^5*t_1^7*t_2^6+t_0^5*t_1^6*t_2^7+t_0^5*t_1^5*t_2^8+t_0^5*t_1^4*t_2^9+t_0^4*t_1^9*t_2^5+t_0^4*t_1^8*t_2^6+t_0^4*t_1^7*t_2^7+t_0^4*t_1^6*t_2^8+t_0^4*t_1^5*t_2^9+t_0^3*t_1^9*t_2^6+t_0^3*t_1^8*t_2^7+t_0^3*t_1^7*t_2^8+t_0^3*t_1^6*t_2^9+t_0^2*t_1^9*t_2^7+t_0^2*t_1^8*t_2^8+t_0^2*t_1^7*t_2^9+t_0*t_1^9*t_2^8+t_0*t_1^8*t_2^9+t_1^9*t_2^9, (5,0) => t_0^14*t_1^4*t_2^4+t_0^13*t_1^5*t_2^4+t_0^13*t_1^4*t_2^5+2*t_0^12*t_1^6*t_2^4+2*t_0^12*t_1^5*t_2^5+2*t_0^12*t_1^4*t_2^6+2*t_0^11*t_1^7*t_2^4+3*t_0^11*t_1^6*t_2^5+3*t_0^11*t_1^5*t_2^6+2*t_0^11*t_1^4*t_2^7+3*t_0^10*t_1^8*t_2^4+4*t_0^10*t_1^7*t_2^5+6*t_0^10*t_1^6*t_2^6+4*t_0^10*t_1^5*t_2^7+3*t_0^10*t_1^4*t_2^8+3*t_0^9*t_1^9*t_2^4+5*t_0^9*t_1^8*t_2^5+7*t_0^9*t_1^7*t_2^6+7*t_0^9*t_1^6*t_2^7+5*t_0^9*t_1^5*t_2^8+3*t_0^9*t_1^4*t_2^9+3*t_0^8*t_1^10*t_2^4+5*t_0^8*t_1^9*t_2^5+9*t_0^8*t_1^8*t_2^6+9*t_0^8*t_1^7*t_2^7+9*t_0^8*t_1^6*t_2^8+5*t_0^8*t_1^5*t_2^9+3*t_0^8*t_1^4*t_2^10+2*t_0^7*t_1^11*t_2^4+4*t_0^7*t_1^10*t_2^5+7*t_0^7*t_1^9*t_2^6+9*t_0^7*t_1^8*t_2^7+9*t_0^7*t_1^7*t_2^8+7*t_0^7*t_1^6*t_2^9+4*t_0^7*t_1^5*t_2^10+2*t_0^7*t_1^4*t_2^11+2*t_0^6*t_1^12*t_2^4+3*t_0^6*t_1^11*t_2^5+6*t_0^6*t_1^10*t_2^6+7*t_0^6*t_1^9*t_2^7+9*t_0^6*t_1^8*t_2^8+7*t_0^6*t_1^7*t_2^9+6*t_0^6*t_1^6*t_2^10+3*t_0^6*t_1^5*t_2^11+2*t_0^6*t_1^4*t_2^12+t_0^5*t_1^13*t_2^4+2*t_0^5*t_1^12*t_2^5+3*t_0^5*t_1^11*t_2^6+4*t_0^5*t_1^10*t_2^7+5*t_0^5*t_1^9*t_2^8+5*t_0^5*t_1^8*t_2^9+4*t_0^5*t_1^7*t_2^10+3*t_0^5*t_1^6*t_2^11+2*t_0^5*t_1^5*t_2^12+t_0^5*t_1^4*t_2^13+t_0^4*t_1^14*t_2^4+t_0^4*t_1^13*t_2^5+2*t_0^4*t_1^12*t_2^6+2*t_0^4*t_1^11*t_2^7+3*t_0^4*t_1^10*t_2^8+3*t_0^4*t_1^9*t_2^9+3*t_0^4*t_1^8*t_2^10+2*t_0^4*t_1^7*t_2^11+2*t_0^4*t_1^6*t_2^12+t_0^4*t_1^5*t_2^13+t_0^4*t_1^4*t_2^14, (4,1) => t_0^12*t_1^9*t_2+t_0^12*t_1^8*t_2^2+t_0^12*t_1^7*t_2^3+t_0^12*t_1^6*t_2^4+t_0^12*t_1^5*t_2^5+t_0^12*t_1^4*t_2^6+t_0^12*t_1^3*t_2^7+t_0^12*t_1^2*t_2^8+t_0^12*t_1*t_2^9+t_0^11*t_1^10*t_2+3*t_0^11*t_1^9*t_2^2+3*t_0^11*t_1^8*t_2^3+3*t_0^11*t_1^7*t_2^4+3*t_0^11*t_1^6*t_2^5+3*t_0^11*t_1^5*t_2^6+3*t_0^11*t_1^4*t_2^7+3*t_0^11*t_1^3*t_2^8+3*t_0^11*t_1^2*t_2^9+t_0^11*t_1*t_2^10+t_0^10*t_1^11*t_2+3*t_0^10*t_1^10*t_2^2+6*t_0^10*t_1^9*t_2^3+6*t_0^10*t_1^8*t_2^4+6*t_0^10*t_1^7*t_2^5+6*t_0^10*t_1^6*t_2^6+6*t_0^10*t_1^5*t_2^7+6*t_0^10*t_1^4*t_2^8+6*t_0^10*t_1^3*t_2^9+3*t_0^10*t_1^2*t_2^10+t_0^10*t_1*t_2^11+t_0^9*t_1^12*t_2+3*t_0^9*t_1^11*t_2^2+6*t_0^9*t_1^10*t_2^3+10*t_0^9*t_1^9*t_2^4+10*t_0^9*t_1^8*t_2^5+10*t_0^9*t_1^7*t_2^6+10*t_0^9*t_1^6*t_2^7+10*t_0^9*t_1^5*t_2^8+10*t_0^9*t_1^4*t_2^9+6*t_0^9*t_1^3*t_2^10+3*t_0^9*t_1^2*t_2^11+t_0^9*t_1*t_2^12+t_0^8*t_1^12*t_2^2+3*t_0^8*t_1^11*t_2^3+6*t_0^8*t_1^10*t_2^4+10*t_0^8*t_1^9*t_2^5+10*t_0^8*t_1^8*t_2^6+10*t_0^8*t_1^7*t_2^7+10*t_0^8*t_1^6*t_2^8+10*t_0^8*t_1^5*t_2^9+6*t_0^8*t_1^4*t_2^10+3*t_0^8*t_1^3*t_2^11+t_0^8*t_1^2*t_2^12+t_0^7*t_1^12*t_2^3+3*t_0^7*t_1^11*t_2^4+6*t_0^7*t_1^10*t_2^5+10*t_0^7*t_1^9*t_2^6+10*t_0^7*t_1^8*t_2^7+10*t_0^7*t_1^7*t_2^8+10*t_0^7*t_1^6*t_2^9+6*t_0^7*t_1^5*t_2^10+3*t_0^7*t_1^4*t_2^11+t_0^7*t_1^3*t_2^12+t_0^6*t_1^12*t_2^4+3*t_0^6*t_1^11*t_2^5+6*t_0^6*t_1^10*t_2^6+10*t_0^6*t_1^9*t_2^7+10*t_0^6*t_1^8*t_2^8+10*t_0^6*t_1^7*t_2^9+6*t_0^6*t_1^6*t_2^10+3*t_0^6*t_1^5*t_2^11+t_0^6*t_1^4*t_2^12+t_0^5*t_1^12*t_2^5+3*t_0^5*t_1^11*t_2^6+6*t_0^5*t_1^10*t_2^7+10*t_0^5*t_1^9*t_2^8+10*t_0^5*t_1^8*t_2^9+6*t_0^5*t_1^7*t_2^10+3*t_0^5*t_1^6*t_2^11+t_0^5*t_1^5*t_2^12+t_0^4*t_1^12*t_2^6+3*t_0^4*t_1^11*t_2^7+6*t_0^4*t_1^10*t_2^8+10*t_0^4*t_1^9*t_2^9+6*t_0^4*t_1^8*t_2^10+3*t_0^4*t_1^7*t_2^11+t_0^4*t_1^6*t_2^12+t_0^3*t_1^12*t_2^7+3*t_0^3*t_1^11*t_2^8+6*t_0^3*t_1^10*t_2^9+6*t_0^3*t_1^9*t_2^10+3*t_0^3*t_1^8*t_2^11+t_0^3*t_1^7*t_2^12+t_0^2*t_1^12*t_2^8+3*t_0^2*t_1^11*t_2^9+3*t_0^2*t_1^10*t_2^10+3*t_0^2*t_1^9*t_2^11+t_0^2*t_1^8*t_2^12+t_0*t_1^12*t_2^9+t_0*t_1^11*t_2^10+t_0*t_1^10*t_2^11+t_0*t_1^9*t_2^12, (3,2) => 0, (6,0) => 0, (5,1) => t_0^14*t_1^10*t_2^2+2*t_0^14*t_1^9*t_2^3+3*t_0^14*t_1^8*t_2^4+3*t_0^14*t_1^7*t_2^5+4*t_0^14*t_1^6*t_2^6+3*t_0^14*t_1^5*t_2^7+3*t_0^14*t_1^4*t_2^8+2*t_0^14*t_1^3*t_2^9+t_0^14*t_1^2*t_2^10+t_0^13*t_1^11*t_2^2+4*t_0^13*t_1^10*t_2^3+7*t_0^13*t_1^9*t_2^4+9*t_0^13*t_1^8*t_2^5+11*t_0^13*t_1^7*t_2^6+11*t_0^13*t_1^6*t_2^7+9*t_0^13*t_1^5*t_2^8+7*t_0^13*t_1^4*t_2^9+4*t_0^13*t_1^3*t_2^10+t_0^13*t_1^2*t_2^11+2*t_0^12*t_1^12*t_2^2+6*t_0^12*t_1^11*t_2^3+14*t_0^12*t_1^10*t_2^4+20*t_0^12*t_1^9*t_2^5+26*t_0^12*t_1^8*t_2^6+27*t_0^12*t_1^7*t_2^7+26*t_0^12*t_1^6*t_2^8+20*t_0^12*t_1^5*t_2^9+14*t_0^12*t_1^4*t_2^10+6*t_0^12*t_1^3*t_2^11+2*t_0^12*t_1^2*t_2^12+t_0^11*t_1^13*t_2^2+6*t_0^11*t_1^12*t_2^3+15*t_0^11*t_1^11*t_2^4+28*t_0^11*t_1^10*t_2^5+39*t_0^11*t_1^9*t_2^6+45*t_0^11*t_1^8*t_2^7+45*t_0^11*t_1^7*t_2^8+39*t_0^11*t_1^6*t_2^9+28*t_0^11*t_1^5*t_2^10+15*t_0^11*t_1^4*t_2^11+6*t_0^11*t_1^3*t_2^12+t_0^11*t_1^2*t_2^13+t_0^10*t_1^14*t_2^2+4*t_0^10*t_1^13*t_2^3+14*t_0^10*t_1^12*t_2^4+28*t_0^10*t_1^11*t_2^5+48*t_0^10*t_1^10*t_2^6+60*t_0^10*t_1^9*t_2^7+66*t_0^10*t_1^8*t_2^8+60*t_0^10*t_1^7*t_2^9+48*t_0^10*t_1^6*t_2^10+28*t_0^10*t_1^5*t_2^11+14*t_0^10*t_1^4*t_2^12+4*t_0^10*t_1^3*t_2^13+t_0^10*t_1^2*t_2^14+2*t_0^9*t_1^14*t_2^3+7*t_0^9*t_1^13*t_2^4+20*t_0^9*t_1^12*t_2^5+39*t_0^9*t_1^11*t_2^6+60*t_0^9*t_1^10*t_2^7+72*t_0^9*t_1^9*t_2^8+72*t_0^9*t_1^8*t_2^9+60*t_0^9*t_1^7*t_2^10+39*t_0^9*t_1^6*t_2^11+20*t_0^9*t_1^5*t_2^12+7*t_0^9*t_1^4*t_2^13+2*t_0^9*t_1^3*t_2^14+3*t_0^8*t_1^14*t_2^4+9*t_0^8*t_1^13*t_2^5+26*t_0^8*t_1^12*t_2^6+45*t_0^8*t_1^11*t_2^7+66*t_0^8*t_1^10*t_2^8+72*t_0^8*t_1^9*t_2^9+66*t_0^8*t_1^8*t_2^10+45*t_0^8*t_1^7*t_2^11+26*t_0^8*t_1^6*t_2^12+9*t_0^8*t_1^5*t_2^13+3*t_0^8*t_1^4*t_2^14+3*t_0^7*t_1^14*t_2^5+11*t_0^7*t_1^13*t_2^6+27*t_0^7*t_1^12*t_2^7+45*t_0^7*t_1^11*t_2^8+60*t_0^7*t_1^10*t_2^9+60*t_0^7*t_1^9*t_2^10+45*t_0^7*t_1^8*t_2^11+27*t_0^7*t_1^7*t_2^12+11*t_0^7*t_1^6*t_2^13+3*t_0^7*t_1^5*t_2^14+4*t_0^6*t_1^14*t_2^6+11*t_0^6*t_1^13*t_2^7+26*t_0^6*t_1^12*t_2^8+39*t_0^6*t_1^11*t_2^9+48*t_0^6*t_1^10*t_2^10+39*t_0^6*t_1^9*t_2^11+26*t_0^6*t_1^8*t_2^12+11*t_0^6*t_1^7*t_2^13+4*t_0^6*t_1^6*t_2^14+3*t_0^5*t_1^14*t_2^7+9*t_0^5*t_1^13*t_2^8+20*t_0^5*t_1^12*t_2^9+28*t_0^5*t_1^11*t_2^10+28*t_0^5*t_1^10*t_2^11+20*t_0^5*t_1^9*t_2^12+9*t_0^5*t_1^8*t_2^13+3*t_0^5*t_1^7*t_2^14+3*t_0^4*t_1^14*t_2^8+7*t_0^4*t_1^13*t_2^9+14*t_0^4*t_1^12*t_2^10+15*t_0^4*t_1^11*t_2^11+14*t_0^4*t_1^10*t_2^12+7*t_0^4*t_1^9*t_2^13+3*t_0^4*t_1^8*t_2^14+2*t_0^3*t_1^14*t_2^9+4*t_0^3*t_1^13*t_2^10+6*t_0^3*t_1^12*t_2^11+6*t_0^3*t_1^11*t_2^12+4*t_0^3*t_1^10*t_2^13+2*t_0^3*t_1^9*t_2^14+t_0^2*t_1^14*t_2^10+t_0^2*t_1^13*t_2^11+2*t_0^2*t_1^12*t_2^12+t_0^2*t_1^11*t_2^13+t_0^2*t_1^10*t_2^14, (4,2) => 0};
--sb represents the betti numbers as sums of Schur functors
sb42 = new HashTable from {(7,0) => {}, (6,1) => {({16,10,4},1/1),({16,8,6},1/1),({15,12,3},1/1),({15,11,4},1/1),({15,10,5},2/1),({15,9,6},2/1),({15,8,7},1/1),({14,12,4},2/1),({14,11,5},3/1),({14,10,6},4/1),({14,9,7},2/1),({14,8,8},2/1),({13,12,5},2/1),({13,11,6},3/1),({13,10,7},5/1),({13,9,8},2/1),({12,12,6},3/1),({12,11,7},3/1),({12,10,8},4/1),({12,9,9},1/1),({11,11,8},1/1),({11,10,9},1/1),({10,10,10},1/1)}, (5,2) => {}, (8,0) => {}, (6,2) => {}, (7,1) => {({17,12,5},1/1),({17,11,6},1/1),({17,10,7},1/1),({17,9,8},1/1),({16,13,5},1/1),({16,12,6},2/1),({16,11,7},3/1),({16,10,8},2/1),({16,9,9},1/1),({15,15,4},1/1),({15,14,5},1/1),({15,13,6},3/1),({15,12,7},5/1),({15,11,8},5/1),({15,10,9},3/1),({14,13,7},3/1),({14,12,8},4/1),({14,11,9},5/1),({14,10,10},1/1),({13,13,8},3/1),({13,12,9},4/1),({13,11,10},3/1),({12,12,10},1/1),({12,11,11},1/1)}, (7,2) => {}, (8,1) => {({18,13,7},1/1),({18,12,8},1/1),({18,11,9},1/1),({17,15,6},1/1),({17,14,7},1/1),({17,13,8},3/1),({17,12,9},3/1),({17,11,10},2/1),({16,15,7},2/1),({16,14,8},2/1),({16,13,9},5/1),({16,12,10},3/1),({16,11,11},2/1),({15,15,8},2/1),({15,14,9},3/1),({15,13,10},5/1),({15,12,11},3/1),({14,14,10},1/1),({14,13,11},3/1),({14,12,12},1/1),({13,13,12},1/1)}, (9,0) => {}, (8,2) => {}, (9,1) => {({19,13,10},1/1),({18,16,8},1/1),({18,15,9},2/1),({18,14,10},2/1),({18,13,11},2/1),({18,12,12},1/1),({17,16,9},1/1),({17,15,10},2/1),({17,14,11},3/1),({17,13,12},2/1),({16,16,10},2/1),({16,15,11},2/1),({16,14,12},3/1),({16,13,13},1/1),({15,15,12},1/1),({15,14,13},1/1),({14,14,14},1/1)}, (10,0) => {}, (11,0) => {}, (10,1) => {({19,16,11},1/1),({19,15,12},1/1),({19,14,13},1/1),({18,18,10},1/1),({18,17,11},1/1),({18,16,12},2/1),({18,15,13},1/1),({18,14,14},1/1),({17,16,13},1/1),({17,15,14},1/1),({16,16,14},1/1)}, (9,2) => {}, (12,0) => {}, (11,1) => {({19,18,13},1/1),({19,17,14},1/1),({19,16,15},1/1)}, (10,2) => {}, (12,1) => {({19,19,16},1/1)}, (11,2) => {}, (12,2) => {}, (0,0) => {({2,0,0},1/1)}, (0,1) => {}, (1,0) => {({5,1,0},1/1),({4,2,0},1/1)}, (1,1) => {}, (0,2) => {}, (2,0) => {({8,1,1},1/1),({7,3,0},1/1),({7,2,1},1/1),({6,3,1},1/1),({5,5,0},1/1),({5,4,1},1/1),({5,3,2},1/1)}, (1,2) => {}, (2,1) => {}, (3,0) => {({10,3,1},1/1),({9,4,1},1/1),({9,3,2},1/1),({8,5,1},1/1),({8,4,2},1/1),({8,3,3},1/1),({7,6,1},1/1),({7,5,2},2/1),({7,4,3},1/1),({6,5,3},1/1),({5,5,4},1/1)}, (4,0) => {({12,4,2},1/1),({11,4,3},1/1),({10,6,2},2/1),({10,5,3},1/1),({10,4,4},1/1),({9,6,3},1/1),({9,5,4},1/1),({8,8,2},1/1),({8,7,3},1/1),({8,6,4},2/1),({7,6,5},1/1)}, (2,2) => {}, (3,1) => {({9,9,0},1/1)}, (5,0) => {({14,4,4},1/1),({12,6,4},1/1),({10,8,4},1/1),({10,6,6},1/1),({8,8,6},1/1)}, (4,1) => {({12,9,1},1/1),({11,9,2},1/1),({10,9,3},1/1),({9,9,4},1/1)}, (3,2) => {}, (6,0) => {}, (5,1) => {({14,10,2},1/1),({14,9,3},1/1),({14,8,4},1/1),({14,6,6},1/1),({13,10,3},1/1),({13,9,4},1/1),({13,8,5},1/1),({13,7,6},1/1),({12,12,2},1/1),({12,11,3},1/1),({12,10,4},3/1),({12,9,5},2/1),({12,8,6},2/1),({11,10,5},2/1),({11,9,6},1/1),({11,8,7},1/1),({10,10,6},2/1),({10,9,7},1/1),({10,8,8},1/1)}, (4,2) => {}};
--dw encodes the dominant weights in each entry
dw42 = new HashTable from {(5,2) => {}, (6,1) => {{16,10,4},{15,12,3}}, (7,0) => {}, (8,0) => {}, (6,2) => {}, (7,1) => {{17,12,5},{15,15,4}}, (9,0) => {}, (8,1) => {{18,13,7},{17,15,6}}, (7,2) => {}, (10,0) => {}, (9,1) => {{19,13,10},{18,16,8}}, (8,2) => {}, (11,0) => {}, (10,1) => {{19,16,11},{18,18,10}}, (9,2) => {}, (12,0) => {}, (11,1) => {{19,18,13}}, (10,2) => {}, (12,1) => {{19,19,16}}, (11,2) => {}, (12,2) => {}, (0,0) => {{2,0,0}}, (0,1) => {}, (1,0) => {{5,1,0}}, (2,0) => {{8,1,1},{7,3,0}}, (0,2) => {}, (1,1) => {}, (3,0) => {{10,3,1}}, (2,1) => {}, (1,2) => {}, (3,1) => {{9,9,0}}, (2,2) => {}, (4,0) => {{12,4,2}}, (3,2) => {}, (4,1) => {{12,9,1}}, (5,0) => {{14,4,4}}, (4,2) => {}, (5,1) => {{14,10,2}}, (6,0) => {}};
--lw encodes the lex leading weight in each entry
lw42 = new HashTable from {(5,2) => {}, (6,1) => {16,10,4}, (7,0) => {}, (8,0) => {}, (6,2) => {}, (7,1) => {17,12,5}, (9,0) => {}, (8,1) => {18,13,7}, (7,2) => {}, (10,0) => {}, (9,1) => {19,13,10}, (8,2) => {}, (11,0) => {}, (10,1) => {19,16,11}, (9,2) => {}, (12,0) => {}, (11,1) => {19,18,13}, (10,2) => {}, (12,1) => {19,19,16}, (11,2) => {}, (12,2) => {}, (0,0) => {2,0,0}, (0,1) => {}, (1,0) => {5,1,0}, (2,0) => {8,1,1}, (0,2) => {}, (1,1) => {}, (3,0) => {10,3,1}, (2,1) => {}, (1,2) => {}, (3,1) => {9,9,0}, (2,2) => {}, (4,0) => {12,4,2}, (3,2) => {}, (4,1) => {12,9,1}, (5,0) => {14,4,4}, (4,2) => {}, (5,1) => {14,10,2}, (6,0) => {}};
--nr encodes the number of disctinct reprsentations in each entry
nr42 = new HashTable from {(5,2) => 0, (6,1) => 23, (7,0) => 0, (8,0) => 0, (6,2) => 0, (7,1) => 24, (9,0) => 0, (8,1) => 21, (7,2) => 0, (10,0) => 0, (9,1) => 17, (8,2) => 0, (11,0) => 0, (10,1) => 11, (9,2) => 0, (12,0) => 0, (11,1) => 3, (10,2) => 0, (12,1) => 1, (11,2) => 0, (12,2) => 0, (0,0) => 1, (0,1) => 0, (1,0) => 2, (2,0) => 7, (0,2) => 0, (1,1) => 0, (3,0) => 11, (2,1) => 0, (1,2) => 0, (3,1) => 1, (2,2) => 0, (4,0) => 11, (3,2) => 0, (4,1) => 4, (5,0) => 5, (4,2) => 0, (5,1) => 19, (6,0) => 0};
--nrm encodes the number of representations with multiplicity in each entry
nrm42 = new HashTable from {(5,2) => 0, (6,1) => 48/1, (7,0) => 0, (8,0) => 0, (6,2) => 0, (7,1) => 56/1, (9,0) => 0, (8,1) => 46/1, (7,2) => 0, (10,0) => 0, (9,1) => 28/1, (8,2) => 0, (11,0) => 0, (10,1) => 12/1, (9,2) => 0, (12,0) => 0, (11,1) => 3/1, (10,2) => 0, (12,1) => 1/1, (11,2) => 0, (12,2) => 0, (0,0) => 1/1, (0,1) => 0, (1,0) => 2/1, (2,0) => 7/1, (0,2) => 0, (1,1) => 0, (3,0) => 12/1, (2,1) => 0, (1,2) => 0, (3,1) => 1/1, (2,2) => 0, (4,0) => 13/1, (3,2) => 0, (4,1) => 4/1, (5,0) => 5/1, (4,2) => 0, (5,1) => 25/1, (6,0) => 0};
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
er42 = new HashTable from {(5,2) => 0, (6,1) => 0, (7,0) => 0, (8,0) => 0, (6,2) => 0, (7,1) => 0, (9,0) => 0, (8,1) => 0, (7,2) => 0, (10,0) => 0, (9,1) => 0, (8,2) => 0, (11,0) => 0, (10,1) => 0, (9,2) => 0, (12,0) => 0, (11,1) => 0, (10,2) => 0, (12,1) => 0, (11,2) => 0, (12,2) => 0, (0,0) => 0, (0,1) => 0, (1,0) => 0, (2,0) => 0, (0,2) => 0, (1,1) => 0, (3,0) => 0, (2,1) => 0, (1,2) => 0, (3,1) => 0, (2,2) => 0, (4,0) => 0, (3,2) => 0, (4,1) => 0, (5,0) => 0, (4,2) => 0, (5,1) => 0, (6,0) => 0};
--bs encodes the Boij-Soederberg coefficients each entry
bs42 = {1219276800/1,4746470400/1,1219276800/1,479001600/1};
end;