--This file computes Betti tables for P^2 for d = 9 and b = 0
A := QQ[t_0,t_1,t_2];
--tb stands for Total Betti numbers
tb90 = new HashTable from {(7,0) => 0, (6,1) => 216, (8,0) => 0, (7,1) => 63, (8,1) => 8, (0,0) => 1, (0,1) => 0, (1,0) => 0, (2,0) => 0, (1,1) => 36, (2,1) => 168, (3,0) => 0, (3,1) => 378, (4,0) => 0, (4,1) => 504, (5,0) => 0, (6,0) => 0, (5,1) => 420};
--mb stands for Multigraded Betti numbers
mb90 = new HashTable from {(7,0) => 0, (6,1) => t_0^41*t_1^22+2*t_0^40*t_1^23+4*t_0^39*t_1^24+6*t_0^38*t_1^25+9*t_0^37*t_1^26+12*t_0^36*t_1^27+15*t_0^35*t_1^28+18*t_0^34*t_1^29+20*t_0^33*t_1^30+21*t_0^32*t_1^31+21*t_0^31*t_1^32+20*t_0^30*t_1^33+18*t_0^29*t_1^34+15*t_0^28*t_1^35+12*t_0^27*t_1^36+9*t_0^26*t_1^37+6*t_0^25*t_1^38+4*t_0^24*t_1^39+2*t_0^23*t_1^40+t_0^22*t_1^41, (7,1) => t_0^43*t_1^29+2*t_0^42*t_1^30+3*t_0^41*t_1^31+4*t_0^40*t_1^32+5*t_0^39*t_1^33+6*t_0^38*t_1^34+7*t_0^37*t_1^35+7*t_0^36*t_1^36+7*t_0^35*t_1^37+6*t_0^34*t_1^38+5*t_0^33*t_1^39+4*t_0^32*t_1^40+3*t_0^31*t_1^41+2*t_0^30*t_1^42+t_0^29*t_1^43, (8,0) => 0, (8,1) => t_0^44*t_1^37+t_0^43*t_1^38+t_0^42*t_1^39+t_0^41*t_1^40+t_0^40*t_1^41+t_0^39*t_1^42+t_0^38*t_1^43+t_0^37*t_1^44, (0,0) => 1, (0,1) => 0, (1,0) => 0, (2,0) => 0, (1,1) => t_0^16*t_1^2+t_0^15*t_1^3+2*t_0^14*t_1^4+2*t_0^13*t_1^5+3*t_0^12*t_1^6+3*t_0^11*t_1^7+4*t_0^10*t_1^8+4*t_0^9*t_1^9+4*t_0^8*t_1^10+3*t_0^7*t_1^11+3*t_0^6*t_1^12+2*t_0^5*t_1^13+2*t_0^4*t_1^14+t_0^3*t_1^15+t_0^2*t_1^16, (2,1) => t_0^23*t_1^4+2*t_0^22*t_1^5+3*t_0^21*t_1^6+5*t_0^20*t_1^7+7*t_0^19*t_1^8+9*t_0^18*t_1^9+12*t_0^17*t_1^10+14*t_0^16*t_1^11+15*t_0^15*t_1^12+16*t_0^14*t_1^13+16*t_0^13*t_1^14+15*t_0^12*t_1^15+14*t_0^11*t_1^16+12*t_0^10*t_1^17+9*t_0^9*t_1^18+7*t_0^8*t_1^19+5*t_0^7*t_1^20+3*t_0^6*t_1^21+2*t_0^5*t_1^22+t_0^4*t_1^23, (3,0) => 0, (4,0) => 0, (3,1) => t_0^29*t_1^7+2*t_0^28*t_1^8+4*t_0^27*t_1^9+6*t_0^26*t_1^10+10*t_0^25*t_1^11+14*t_0^24*t_1^12+19*t_0^23*t_1^13+23*t_0^22*t_1^14+28*t_0^21*t_1^15+31*t_0^20*t_1^16+34*t_0^19*t_1^17+34*t_0^18*t_1^18+34*t_0^17*t_1^19+31*t_0^16*t_1^20+28*t_0^15*t_1^21+23*t_0^14*t_1^22+19*t_0^13*t_1^23+14*t_0^12*t_1^24+10*t_0^11*t_1^25+6*t_0^10*t_1^26+4*t_0^9*t_1^27+2*t_0^8*t_1^28+t_0^7*t_1^29, (5,0) => 0, (4,1) => t_0^34*t_1^11+2*t_0^33*t_1^12+4*t_0^32*t_1^13+7*t_0^31*t_1^14+11*t_0^30*t_1^15+16*t_0^29*t_1^16+22*t_0^28*t_1^17+28*t_0^27*t_1^18+34*t_0^26*t_1^19+39*t_0^25*t_1^20+43*t_0^24*t_1^21+45*t_0^23*t_1^22+45*t_0^22*t_1^23+43*t_0^21*t_1^24+39*t_0^20*t_1^25+34*t_0^19*t_1^26+28*t_0^18*t_1^27+22*t_0^17*t_1^28+16*t_0^16*t_1^29+11*t_0^15*t_1^30+7*t_0^14*t_1^31+4*t_0^13*t_1^32+2*t_0^12*t_1^33+t_0^11*t_1^34, (5,1) => t_0^38*t_1^16+2*t_0^37*t_1^17+4*t_0^36*t_1^18+7*t_0^35*t_1^19+11*t_0^34*t_1^20+15*t_0^33*t_1^21+21*t_0^32*t_1^22+26*t_0^31*t_1^23+31*t_0^30*t_1^24+35*t_0^29*t_1^25+38*t_0^28*t_1^26+38*t_0^27*t_1^27+38*t_0^26*t_1^28+35*t_0^25*t_1^29+31*t_0^24*t_1^30+26*t_0^23*t_1^31+21*t_0^22*t_1^32+15*t_0^21*t_1^33+11*t_0^20*t_1^34+7*t_0^19*t_1^35+4*t_0^18*t_1^36+2*t_0^17*t_1^37+t_0^16*t_1^38, (6,0) => 0};
--sb represents the betti numbers as sums of Schur functors
sb90 = new HashTable from {(7,0) => {}, (6,1) => {({41,22},1)}, (8,0) => {}, (7,1) => {({43,29},1)}, (8,1) => {({44,37},1)}, (0,0) => {({0,0},1)}, (0,1) => {}, (1,0) => {}, (2,0) => {}, (1,1) => {({16,2},1)}, (2,1) => {({23,4},1)}, (3,0) => {}, (3,1) => {({29,7},1)}, (4,0) => {}, (4,1) => {({34,11},1)}, (5,0) => {}, (6,0) => {}, (5,1) => {({38,16},1)}};
--dw encodes the dominant weights in each entry
dw90 = new HashTable from {(7,0) => {}, (6,1) => {{41,22}}, (8,0) => {}, (7,1) => {{43,29}}, (8,1) => {{44,37}}, (0,0) => {{0,0}}, (0,1) => {}, (1,0) => {}, (2,0) => {}, (1,1) => {{16,2}}, (2,1) => {{23,4}}, (3,0) => {}, (3,1) => {{29,7}}, (4,0) => {}, (4,1) => {{34,11}}, (5,0) => {}, (6,0) => {}, (5,1) => {{38,16}}};
--lw encodes the lex leading weight in each entry
lw90 = new HashTable from {(7,0) => {}, (6,1) => {41,22}, (8,0) => {}, (7,1) => {43,29}, (8,1) => {44,37}, (0,0) => {0,0}, (0,1) => {}, (1,0) => {}, (2,0) => {}, (1,1) => {16,2}, (2,1) => {23,4}, (3,0) => {}, (3,1) => {29,7}, (4,0) => {}, (4,1) => {34,11}, (5,0) => {}, (6,0) => {}, (5,1) => {38,16}};
--nr encodes the number of disctinct reprsentations in each entry
nr90 = new HashTable from {(7,0) => 0, (6,1) => 1, (8,0) => 0, (7,1) => 1, (8,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 0, (2,0) => 0, (1,1) => 1, (2,1) => 1, (3,0) => 0, (3,1) => 1, (4,0) => 0, (4,1) => 1, (5,0) => 0, (6,0) => 0, (5,1) => 1};
--nrm encodes the number of representations with multiplicity in each entry
nrm90 = new HashTable from {(7,0) => 0, (6,1) => 1, (8,0) => 0, (7,1) => 1, (8,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 0, (2,0) => 0, (1,1) => 1, (2,1) => 1, (3,0) => 0, (3,1) => 1, (4,0) => 0, (4,1) => 1, (5,0) => 0, (6,0) => 0, (5,1) => 1};
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
er90 = new HashTable from {(7,0) => 0, (6,1) => 0, (8,0) => 0, (7,1) => 0, (8,1) => 0, (0,0) => 0, (0,1) => 0, (1,0) => 0, (2,0) => 0, (1,1) => 0, (2,1) => 0, (3,0) => 0, (3,1) => 0, (4,0) => 0, (4,1) => 0, (5,0) => 0, (6,0) => 0, (5,1) => 0};
--bs encodes the Boij-Soederberg coefficients each entry
bs90 = {362880/1};
end;