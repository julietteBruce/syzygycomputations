--This file computes Betti tables for P^2 for d = 8 and b = 1
A := QQ[t_0,t_1,t_2];
--tb stands for Total Betti numbers
tb81 = new HashTable from {(7,0) => 0, (6,1) => 40, (7,1) => 6, (0,0) => 2, (0,1) => 0, (1,0) => 8, (2,0) => 0, (1,1) => 0, (2,1) => 56, (3,0) => 0, (3,1) => 140, (4,0) => 0, (4,1) => 168, (5,0) => 0, (6,0) => 0, (5,1) => 112};
--mb stands for Multigraded Betti numbers
mb81 = new HashTable from {(7,0) => 0, (6,1) => t_0^34*t_1^23+2*t_0^33*t_1^24+3*t_0^32*t_1^25+4*t_0^31*t_1^26+5*t_0^30*t_1^27+5*t_0^29*t_1^28+5*t_0^28*t_1^29+5*t_0^27*t_1^30+4*t_0^26*t_1^31+3*t_0^25*t_1^32+2*t_0^24*t_1^33+t_0^23*t_1^34, (7,1) => t_0^35*t_1^30+t_0^34*t_1^31+t_0^33*t_1^32+t_0^32*t_1^33+t_0^31*t_1^34+t_0^30*t_1^35, (0,0) => t_0+t_1, (1,0) => t_0^8*t_1+t_0^7*t_1^2+t_0^6*t_1^3+t_0^5*t_1^4+t_0^4*t_1^5+t_0^3*t_1^6+t_0^2*t_1^7+t_0*t_1^8, (0,1) => 0, (2,0) => 0, (1,1) => 0, (2,1) => t_0^20*t_1^5+t_0^19*t_1^6+2*t_0^18*t_1^7+3*t_0^17*t_1^8+4*t_0^16*t_1^9+5*t_0^15*t_1^10+6*t_0^14*t_1^11+6*t_0^13*t_1^12+6*t_0^12*t_1^13+6*t_0^11*t_1^14+5*t_0^10*t_1^15+4*t_0^9*t_1^16+3*t_0^8*t_1^17+2*t_0^7*t_1^18+t_0^6*t_1^19+t_0^5*t_1^20, (3,0) => 0, (3,1) => t_0^25*t_1^8+2*t_0^24*t_1^9+3*t_0^23*t_1^10+5*t_0^22*t_1^11+8*t_0^21*t_1^12+10*t_0^20*t_1^13+12*t_0^19*t_1^14+14*t_0^18*t_1^15+15*t_0^17*t_1^16+15*t_0^16*t_1^17+14*t_0^15*t_1^18+12*t_0^14*t_1^19+10*t_0^13*t_1^20+8*t_0^12*t_1^21+5*t_0^11*t_1^22+3*t_0^10*t_1^23+2*t_0^9*t_1^24+t_0^8*t_1^25, (4,0) => 0, (5,0) => 0, (4,1) => t_0^29*t_1^12+2*t_0^28*t_1^13+4*t_0^27*t_1^14+6*t_0^26*t_1^15+9*t_0^25*t_1^16+12*t_0^24*t_1^17+15*t_0^23*t_1^18+17*t_0^22*t_1^19+18*t_0^21*t_1^20+18*t_0^20*t_1^21+17*t_0^19*t_1^22+15*t_0^18*t_1^23+12*t_0^17*t_1^24+9*t_0^16*t_1^25+6*t_0^15*t_1^26+4*t_0^14*t_1^27+2*t_0^13*t_1^28+t_0^12*t_1^29, (5,1) => t_0^32*t_1^17+2*t_0^31*t_1^18+4*t_0^30*t_1^19+6*t_0^29*t_1^20+8*t_0^28*t_1^21+10*t_0^27*t_1^22+12*t_0^26*t_1^23+13*t_0^25*t_1^24+13*t_0^24*t_1^25+12*t_0^23*t_1^26+10*t_0^22*t_1^27+8*t_0^21*t_1^28+6*t_0^20*t_1^29+4*t_0^19*t_1^30+2*t_0^18*t_1^31+t_0^17*t_1^32, (6,0) => 0};
--sb represents the betti numbers as sums of Schur functors
sb81 = new HashTable from {(7,0) => {}, (6,1) => {({34,23},1)}, (7,1) => {({35,30},1)}, (0,0) => {({1,0},1)}, (0,1) => {}, (1,0) => {({8,1},1)}, (2,0) => {}, (1,1) => {}, (2,1) => {({20,5},1)}, (3,0) => {}, (3,1) => {({25,8},1)}, (4,0) => {}, (4,1) => {({29,12},1)}, (5,0) => {}, (6,0) => {}, (5,1) => {({32,17},1)}};
--dw encodes the dominant weights in each entry
dw81 = new HashTable from {(7,0) => {}, (6,1) => {{34,23}}, (7,1) => {{35,30}}, (0,0) => {{1,0}}, (0,1) => {}, (1,0) => {{8,1}}, (2,0) => {}, (1,1) => {}, (2,1) => {{20,5}}, (3,0) => {}, (3,1) => {{25,8}}, (4,0) => {}, (4,1) => {{29,12}}, (5,0) => {}, (6,0) => {}, (5,1) => {{32,17}}};
--lw encodes the lex leading weight in each entry
lw81 = new HashTable from {(7,0) => {}, (6,1) => {34,23}, (7,1) => {35,30}, (0,0) => {1,0}, (0,1) => {}, (1,0) => {8,1}, (2,0) => {}, (1,1) => {}, (2,1) => {20,5}, (3,0) => {}, (3,1) => {25,8}, (4,0) => {}, (4,1) => {29,12}, (5,0) => {}, (6,0) => {}, (5,1) => {32,17}};
--nr encodes the number of disctinct reprsentations in each entry
nr81 = new HashTable from {(7,0) => 0, (6,1) => 1, (7,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 0, (1,1) => 0, (2,1) => 1, (3,0) => 0, (3,1) => 1, (4,0) => 0, (4,1) => 1, (5,0) => 0, (6,0) => 0, (5,1) => 1};
--nrm encodes the number of representations with multiplicity in each entry
nrm81 = new HashTable from {(7,0) => 0, (6,1) => 1, (7,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 0, (1,1) => 0, (2,1) => 1, (3,0) => 0, (3,1) => 1, (4,0) => 0, (4,1) => 1, (5,0) => 0, (6,0) => 0, (5,1) => 1};
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
er81 = new HashTable from {(7,0) => 0, (6,1) => 0, (7,1) => 0, (0,0) => 0, (0,1) => 0, (1,0) => 0, (2,0) => 0, (1,1) => 0, (2,1) => 0, (3,0) => 0, (3,1) => 0, (4,0) => 0, (4,1) => 0, (5,0) => 0, (6,0) => 0, (5,1) => 0};
--bs encodes the Boij-Soederberg coefficients each entry
bs81 = {40320/1};
end;