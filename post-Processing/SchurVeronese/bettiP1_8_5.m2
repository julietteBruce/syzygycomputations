--This file computes Betti tables for P^2 for d = 8 and b = 5
A := QQ[t_0,t_1,t_2];
--tb stands for Total Betti numbers
tb85 = new HashTable from {(7,0) => 0, (6,1) => 8, (7,1) => 2, (0,0) => 6, (0,1) => 0, (1,0) => 40, (2,0) => 112, (1,1) => 0, (2,1) => 0, (3,0) => 168, (3,1) => 0, (4,0) => 140, (4,1) => 0, (5,0) => 56, (6,0) => 0, (5,1) => 0};
--mb stands for Multigraded Betti numbers
mb85 = new HashTable from {(7,0) => 0, (6,1) => t_0^34*t_1^27+t_0^33*t_1^28+t_0^32*t_1^29+t_0^31*t_1^30+t_0^30*t_1^31+t_0^29*t_1^32+t_0^28*t_1^33+t_0^27*t_1^34, (7,1) => t_0^35*t_1^34+t_0^34*t_1^35, (0,0) => t_0^5+t_0^4*t_1+t_0^3*t_1^2+t_0^2*t_1^3+t_0*t_1^4+t_1^5, (1,0) => t_0^12*t_1+2*t_0^11*t_1^2+3*t_0^10*t_1^3+4*t_0^9*t_1^4+5*t_0^8*t_1^5+5*t_0^7*t_1^6+5*t_0^6*t_1^7+5*t_0^5*t_1^8+4*t_0^4*t_1^9+3*t_0^3*t_1^10+2*t_0^2*t_1^11+t_0*t_1^12, (0,1) => 0, (2,0) => t_0^18*t_1^3+2*t_0^17*t_1^4+4*t_0^16*t_1^5+6*t_0^15*t_1^6+8*t_0^14*t_1^7+10*t_0^13*t_1^8+12*t_0^12*t_1^9+13*t_0^11*t_1^10+13*t_0^10*t_1^11+12*t_0^9*t_1^12+10*t_0^8*t_1^13+8*t_0^7*t_1^14+6*t_0^6*t_1^15+4*t_0^5*t_1^16+2*t_0^4*t_1^17+t_0^3*t_1^18, (1,1) => 0, (2,1) => 0, (3,0) => t_0^23*t_1^6+2*t_0^22*t_1^7+4*t_0^21*t_1^8+6*t_0^20*t_1^9+9*t_0^19*t_1^10+12*t_0^18*t_1^11+15*t_0^17*t_1^12+17*t_0^16*t_1^13+18*t_0^15*t_1^14+18*t_0^14*t_1^15+17*t_0^13*t_1^16+15*t_0^12*t_1^17+12*t_0^11*t_1^18+9*t_0^10*t_1^19+6*t_0^9*t_1^20+4*t_0^8*t_1^21+2*t_0^7*t_1^22+t_0^6*t_1^23, (3,1) => 0, (4,0) => t_0^27*t_1^10+2*t_0^26*t_1^11+3*t_0^25*t_1^12+5*t_0^24*t_1^13+8*t_0^23*t_1^14+10*t_0^22*t_1^15+12*t_0^21*t_1^16+14*t_0^20*t_1^17+15*t_0^19*t_1^18+15*t_0^18*t_1^19+14*t_0^17*t_1^20+12*t_0^16*t_1^21+10*t_0^15*t_1^22+8*t_0^14*t_1^23+5*t_0^13*t_1^24+3*t_0^12*t_1^25+2*t_0^11*t_1^26+t_0^10*t_1^27, (5,0) => t_0^30*t_1^15+t_0^29*t_1^16+2*t_0^28*t_1^17+3*t_0^27*t_1^18+4*t_0^26*t_1^19+5*t_0^25*t_1^20+6*t_0^24*t_1^21+6*t_0^23*t_1^22+6*t_0^22*t_1^23+6*t_0^21*t_1^24+5*t_0^20*t_1^25+4*t_0^19*t_1^26+3*t_0^18*t_1^27+2*t_0^17*t_1^28+t_0^16*t_1^29+t_0^15*t_1^30, (4,1) => 0, (5,1) => 0, (6,0) => 0};
--sb represents the betti numbers as sums of Schur functors
sb85 = new HashTable from {(7,0) => {}, (6,1) => {({34,27},1)}, (7,1) => {({35,34},1)}, (0,0) => {({5,0},1)}, (0,1) => {}, (1,0) => {({12,1},1)}, (2,0) => {({18,3},1)}, (1,1) => {}, (2,1) => {}, (3,0) => {({23,6},1)}, (3,1) => {}, (4,0) => {({27,10},1)}, (4,1) => {}, (5,0) => {({30,15},1)}, (6,0) => {}, (5,1) => {}};
--dw encodes the dominant weights in each entry
dw85 = new HashTable from {(7,0) => {}, (6,1) => {{34,27}}, (7,1) => {{35,34}}, (0,0) => {{5,0}}, (0,1) => {}, (1,0) => {{12,1}}, (2,0) => {{18,3}}, (1,1) => {}, (2,1) => {}, (3,0) => {{23,6}}, (3,1) => {}, (4,0) => {{27,10}}, (4,1) => {}, (5,0) => {{30,15}}, (6,0) => {}, (5,1) => {}};
--lw encodes the lex leading weight in each entry
lw85 = new HashTable from {(7,0) => {}, (6,1) => {34,27}, (7,1) => {35,34}, (0,0) => {5,0}, (0,1) => {}, (1,0) => {12,1}, (2,0) => {18,3}, (1,1) => {}, (2,1) => {}, (3,0) => {23,6}, (3,1) => {}, (4,0) => {27,10}, (4,1) => {}, (5,0) => {30,15}, (6,0) => {}, (5,1) => {}};
--nr encodes the number of disctinct reprsentations in each entry
nr85 = new HashTable from {(7,0) => 0, (6,1) => 1, (7,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (2,1) => 0, (3,0) => 1, (3,1) => 0, (4,0) => 1, (4,1) => 0, (5,0) => 1, (6,0) => 0, (5,1) => 0};
--nrm encodes the number of representations with multiplicity in each entry
nrm85 = new HashTable from {(7,0) => 0, (6,1) => 1, (7,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (2,1) => 0, (3,0) => 1, (3,1) => 0, (4,0) => 1, (4,1) => 0, (5,0) => 1, (6,0) => 0, (5,1) => 0};
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
er85 = new HashTable from {(7,0) => 0, (6,1) => 0, (7,1) => 0, (0,0) => 0, (0,1) => 0, (1,0) => 0, (2,0) => 0, (1,1) => 0, (2,1) => 0, (3,0) => 0, (3,1) => 0, (4,0) => 0, (4,1) => 0, (5,0) => 0, (6,0) => 0, (5,1) => 0};
--bs encodes the Boij-Soederberg coefficients each entry
bs85 = {40320/1};
end;