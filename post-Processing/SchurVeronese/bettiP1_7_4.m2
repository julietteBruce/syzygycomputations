--This file computes Betti tables for P^2 for d = 7 and b = 4
A := QQ[t_0,t_1,t_2];
--tb stands for Total Betti numbers
tb74 = new HashTable from {(6,1) => 2, (0,0) => 5, (0,1) => 0, (1,0) => 28, (2,0) => 63, (1,1) => 0, (2,1) => 0, (3,0) => 70, (3,1) => 0, (4,0) => 35, (4,1) => 0, (5,0) => 0, (6,0) => 0, (5,1) => 7};
--mb stands for Multigraded Betti numbers
mb74 = new HashTable from {(6,1) => t_0^27*t_1^26+t_0^26*t_1^27, (0,0) => t_0^4+t_0^3*t_1+t_0^2*t_1^2+t_0*t_1^3+t_1^4, (1,0) => t_0^10*t_1+2*t_0^9*t_1^2+3*t_0^8*t_1^3+4*t_0^7*t_1^4+4*t_0^6*t_1^5+4*t_0^5*t_1^6+4*t_0^4*t_1^7+3*t_0^3*t_1^8+2*t_0^2*t_1^9+t_0*t_1^10, (0,1) => 0, (1,1) => 0, (2,0) => t_0^15*t_1^3+2*t_0^14*t_1^4+4*t_0^13*t_1^5+5*t_0^12*t_1^6+7*t_0^11*t_1^7+8*t_0^10*t_1^8+9*t_0^9*t_1^9+8*t_0^8*t_1^10+7*t_0^7*t_1^11+5*t_0^6*t_1^12+4*t_0^5*t_1^13+2*t_0^4*t_1^14+t_0^3*t_1^15, (2,1) => 0, (3,0) => t_0^19*t_1^6+2*t_0^18*t_1^7+3*t_0^17*t_1^8+5*t_0^16*t_1^9+7*t_0^15*t_1^10+8*t_0^14*t_1^11+9*t_0^13*t_1^12+9*t_0^12*t_1^13+8*t_0^11*t_1^14+7*t_0^10*t_1^15+5*t_0^9*t_1^16+3*t_0^8*t_1^17+2*t_0^7*t_1^18+t_0^6*t_1^19, (3,1) => 0, (4,0) => t_0^22*t_1^10+t_0^21*t_1^11+2*t_0^20*t_1^12+3*t_0^19*t_1^13+4*t_0^18*t_1^14+4*t_0^17*t_1^15+5*t_0^16*t_1^16+4*t_0^15*t_1^17+4*t_0^14*t_1^18+3*t_0^13*t_1^19+2*t_0^12*t_1^20+t_0^11*t_1^21+t_0^10*t_1^22, (4,1) => 0, (5,0) => 0, (5,1) => t_0^26*t_1^20+t_0^25*t_1^21+t_0^24*t_1^22+t_0^23*t_1^23+t_0^22*t_1^24+t_0^21*t_1^25+t_0^20*t_1^26, (6,0) => 0};
--sb represents the betti numbers as sums of Schur functors
sb74 = new HashTable from {(6,1) => {({27,26},1)}, (0,0) => {({4,0},1)}, (0,1) => {}, (1,0) => {({10,1},1)}, (2,0) => {({15,3},1)}, (1,1) => {}, (2,1) => {}, (3,0) => {({19,6},1)}, (3,1) => {}, (4,0) => {({22,10},1)}, (4,1) => {}, (5,0) => {}, (6,0) => {}, (5,1) => {({26,20},1)}};
--dw encodes the dominant weights in each entry
dw74 = new HashTable from {(6,1) => {{27,26}}, (0,0) => {{4,0}}, (0,1) => {}, (1,0) => {{10,1}}, (2,0) => {{15,3}}, (1,1) => {}, (2,1) => {}, (3,0) => {{19,6}}, (3,1) => {}, (4,0) => {{22,10}}, (4,1) => {}, (5,0) => {}, (6,0) => {}, (5,1) => {{26,20}}};
--lw encodes the lex leading weight in each entry
lw74 = new HashTable from {(6,1) => {27,26}, (0,0) => {4,0}, (0,1) => {}, (1,0) => {10,1}, (2,0) => {15,3}, (1,1) => {}, (2,1) => {}, (3,0) => {19,6}, (3,1) => {}, (4,0) => {22,10}, (4,1) => {}, (5,0) => {}, (6,0) => {}, (5,1) => {26,20}};
--nr encodes the number of disctinct reprsentations in each entry
nr74 = new HashTable from {(6,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (2,1) => 0, (3,0) => 1, (3,1) => 0, (4,0) => 1, (4,1) => 0, (5,0) => 0, (6,0) => 0, (5,1) => 1};
--nrm encodes the number of representations with multiplicity in each entry
nrm74 = new HashTable from {(6,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (2,1) => 0, (3,0) => 1, (3,1) => 0, (4,0) => 1, (4,1) => 0, (5,0) => 0, (6,0) => 0, (5,1) => 1};
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
er74 = new HashTable from {(6,1) => 0, (0,0) => 0, (0,1) => 0, (1,0) => 0, (2,0) => 0, (1,1) => 0, (2,1) => 0, (3,0) => 0, (3,1) => 0, (4,0) => 0, (4,1) => 0, (5,0) => 0, (6,0) => 0, (5,1) => 0};
--bs encodes the Boij-Soederberg coefficients each entry
bs74 = {5040/1};
end;