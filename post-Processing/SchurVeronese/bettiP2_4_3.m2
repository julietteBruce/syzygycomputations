--This file computes Betti tables for P^2 for d = 4 and b = 3
A := QQ[t_0,t_1,t_2];
--tb stands for Total Betti numbers
tb43 = new HashTable from {(5,2) => 0, (6,1) => 0, (7,0) => 2376, (8,0) => 450, (6,2) => 0, (7,1) => 252, (9,0) => 55, (8,1) => 825, (7,2) => 0, (10,0) => 0, (9,1) => 660, (8,2) => 0, (11,0) => 0, (10,1) => 276, (9,2) => 0, (12,0) => 0, (11,1) => 62, (10,2) => 0, (12,1) => 6, (11,2) => 0, (12,2) => 0, (0,0) => 10, (0,1) => 0, (1,0) => 114, (2,0) => 588, (0,2) => 0, (1,1) => 0, (3,0) => 1804, (2,1) => 0, (1,2) => 0, (3,1) => 0, (2,2) => 0, (4,0) => 3630, (3,2) => 0, (4,1) => 0, (5,0) => 4950, (4,2) => 0, (5,1) => 0, (6,0) => 4488};
--mb stands for Multigraded Betti numbers
mb43 = new HashTable from {(7,0) => t_0^17*t_1^9*t_2^5+t_0^17*t_1^8*t_2^6+2*t_0^17*t_1^7*t_2^7+t_0^17*t_1^6*t_2^8+t_0^17*t_1^5*t_2^9+2*t_0^16*t_1^10*t_2^5+4*t_0^16*t_1^9*t_2^6+6*t_0^16*t_1^8*t_2^7+6*t_0^16*t_1^7*t_2^8+4*t_0^16*t_1^6*t_2^9+2*t_0^16*t_1^5*t_2^10+3*t_0^15*t_1^11*t_2^5+7*t_0^15*t_1^10*t_2^6+14*t_0^15*t_1^9*t_2^7+15*t_0^15*t_1^8*t_2^8+14*t_0^15*t_1^7*t_2^9+7*t_0^15*t_1^6*t_2^10+3*t_0^15*t_1^5*t_2^11+3*t_0^14*t_1^12*t_2^5+9*t_0^14*t_1^11*t_2^6+20*t_0^14*t_1^10*t_2^7+28*t_0^14*t_1^9*t_2^8+28*t_0^14*t_1^8*t_2^9+20*t_0^14*t_1^7*t_2^10+9*t_0^14*t_1^6*t_2^11+3*t_0^14*t_1^5*t_2^12+4*t_0^13*t_1^13*t_2^5+11*t_0^13*t_1^12*t_2^6+26*t_0^13*t_1^11*t_2^7+39*t_0^13*t_1^10*t_2^8+48*t_0^13*t_1^9*t_2^9+39*t_0^13*t_1^8*t_2^10+26*t_0^13*t_1^7*t_2^11+11*t_0^13*t_1^6*t_2^12+4*t_0^13*t_1^5*t_2^13+3*t_0^12*t_1^14*t_2^5+11*t_0^12*t_1^13*t_2^6+27*t_0^12*t_1^12*t_2^7+45*t_0^12*t_1^11*t_2^8+60*t_0^12*t_1^10*t_2^9+60*t_0^12*t_1^9*t_2^10+45*t_0^12*t_1^8*t_2^11+27*t_0^12*t_1^7*t_2^12+11*t_0^12*t_1^6*t_2^13+3*t_0^12*t_1^5*t_2^14+3*t_0^11*t_1^15*t_2^5+9*t_0^11*t_1^14*t_2^6+26*t_0^11*t_1^13*t_2^7+45*t_0^11*t_1^12*t_2^8+66*t_0^11*t_1^11*t_2^9+72*t_0^11*t_1^10*t_2^10+66*t_0^11*t_1^9*t_2^11+45*t_0^11*t_1^8*t_2^12+26*t_0^11*t_1^7*t_2^13+9*t_0^11*t_1^6*t_2^14+3*t_0^11*t_1^5*t_2^15+2*t_0^10*t_1^16*t_2^5+7*t_0^10*t_1^15*t_2^6+20*t_0^10*t_1^14*t_2^7+39*t_0^10*t_1^13*t_2^8+60*t_0^10*t_1^12*t_2^9+72*t_0^10*t_1^11*t_2^10+72*t_0^10*t_1^10*t_2^11+60*t_0^10*t_1^9*t_2^12+39*t_0^10*t_1^8*t_2^13+20*t_0^10*t_1^7*t_2^14+7*t_0^10*t_1^6*t_2^15+2*t_0^10*t_1^5*t_2^16+t_0^9*t_1^17*t_2^5+4*t_0^9*t_1^16*t_2^6+14*t_0^9*t_1^15*t_2^7+28*t_0^9*t_1^14*t_2^8+48*t_0^9*t_1^13*t_2^9+60*t_0^9*t_1^12*t_2^10+66*t_0^9*t_1^11*t_2^11+60*t_0^9*t_1^10*t_2^12+48*t_0^9*t_1^9*t_2^13+28*t_0^9*t_1^8*t_2^14+14*t_0^9*t_1^7*t_2^15+4*t_0^9*t_1^6*t_2^16+t_0^9*t_1^5*t_2^17+t_0^8*t_1^17*t_2^6+6*t_0^8*t_1^16*t_2^7+15*t_0^8*t_1^15*t_2^8+28*t_0^8*t_1^14*t_2^9+39*t_0^8*t_1^13*t_2^10+45*t_0^8*t_1^12*t_2^11+45*t_0^8*t_1^11*t_2^12+39*t_0^8*t_1^10*t_2^13+28*t_0^8*t_1^9*t_2^14+15*t_0^8*t_1^8*t_2^15+6*t_0^8*t_1^7*t_2^16+t_0^8*t_1^6*t_2^17+2*t_0^7*t_1^17*t_2^7+6*t_0^7*t_1^16*t_2^8+14*t_0^7*t_1^15*t_2^9+20*t_0^7*t_1^14*t_2^10+26*t_0^7*t_1^13*t_2^11+27*t_0^7*t_1^12*t_2^12+26*t_0^7*t_1^11*t_2^13+20*t_0^7*t_1^10*t_2^14+14*t_0^7*t_1^9*t_2^15+6*t_0^7*t_1^8*t_2^16+2*t_0^7*t_1^7*t_2^17+t_0^6*t_1^17*t_2^8+4*t_0^6*t_1^16*t_2^9+7*t_0^6*t_1^15*t_2^10+9*t_0^6*t_1^14*t_2^11+11*t_0^6*t_1^13*t_2^12+11*t_0^6*t_1^12*t_2^13+9*t_0^6*t_1^11*t_2^14+7*t_0^6*t_1^10*t_2^15+4*t_0^6*t_1^9*t_2^16+t_0^6*t_1^8*t_2^17+t_0^5*t_1^17*t_2^9+2*t_0^5*t_1^16*t_2^10+3*t_0^5*t_1^15*t_2^11+3*t_0^5*t_1^14*t_2^12+4*t_0^5*t_1^13*t_2^13+3*t_0^5*t_1^12*t_2^14+3*t_0^5*t_1^11*t_2^15+2*t_0^5*t_1^10*t_2^16+t_0^5*t_1^9*t_2^17, (6,1) => 0, (5,2) => 0, (8,0) => t_0^18*t_1^10*t_2^7+t_0^18*t_1^9*t_2^8+t_0^18*t_1^8*t_2^9+t_0^18*t_1^7*t_2^10+t_0^17*t_1^11*t_2^7+3*t_0^17*t_1^10*t_2^8+3*t_0^17*t_1^9*t_2^9+3*t_0^17*t_1^8*t_2^10+t_0^17*t_1^7*t_2^11+t_0^16*t_1^12*t_2^7+3*t_0^16*t_1^11*t_2^8+6*t_0^16*t_1^10*t_2^9+6*t_0^16*t_1^9*t_2^10+3*t_0^16*t_1^8*t_2^11+t_0^16*t_1^7*t_2^12+t_0^15*t_1^13*t_2^7+3*t_0^15*t_1^12*t_2^8+6*t_0^15*t_1^11*t_2^9+10*t_0^15*t_1^10*t_2^10+6*t_0^15*t_1^9*t_2^11+3*t_0^15*t_1^8*t_2^12+t_0^15*t_1^7*t_2^13+t_0^14*t_1^14*t_2^7+3*t_0^14*t_1^13*t_2^8+6*t_0^14*t_1^12*t_2^9+10*t_0^14*t_1^11*t_2^10+10*t_0^14*t_1^10*t_2^11+6*t_0^14*t_1^9*t_2^12+3*t_0^14*t_1^8*t_2^13+t_0^14*t_1^7*t_2^14+t_0^13*t_1^15*t_2^7+3*t_0^13*t_1^14*t_2^8+6*t_0^13*t_1^13*t_2^9+10*t_0^13*t_1^12*t_2^10+10*t_0^13*t_1^11*t_2^11+10*t_0^13*t_1^10*t_2^12+6*t_0^13*t_1^9*t_2^13+3*t_0^13*t_1^8*t_2^14+t_0^13*t_1^7*t_2^15+t_0^12*t_1^16*t_2^7+3*t_0^12*t_1^15*t_2^8+6*t_0^12*t_1^14*t_2^9+10*t_0^12*t_1^13*t_2^10+10*t_0^12*t_1^12*t_2^11+10*t_0^12*t_1^11*t_2^12+10*t_0^12*t_1^10*t_2^13+6*t_0^12*t_1^9*t_2^14+3*t_0^12*t_1^8*t_2^15+t_0^12*t_1^7*t_2^16+t_0^11*t_1^17*t_2^7+3*t_0^11*t_1^16*t_2^8+6*t_0^11*t_1^15*t_2^9+10*t_0^11*t_1^14*t_2^10+10*t_0^11*t_1^13*t_2^11+10*t_0^11*t_1^12*t_2^12+10*t_0^11*t_1^11*t_2^13+10*t_0^11*t_1^10*t_2^14+6*t_0^11*t_1^9*t_2^15+3*t_0^11*t_1^8*t_2^16+t_0^11*t_1^7*t_2^17+t_0^10*t_1^18*t_2^7+3*t_0^10*t_1^17*t_2^8+6*t_0^10*t_1^16*t_2^9+10*t_0^10*t_1^15*t_2^10+10*t_0^10*t_1^14*t_2^11+10*t_0^10*t_1^13*t_2^12+10*t_0^10*t_1^12*t_2^13+10*t_0^10*t_1^11*t_2^14+10*t_0^10*t_1^10*t_2^15+6*t_0^10*t_1^9*t_2^16+3*t_0^10*t_1^8*t_2^17+t_0^10*t_1^7*t_2^18+t_0^9*t_1^18*t_2^8+3*t_0^9*t_1^17*t_2^9+6*t_0^9*t_1^16*t_2^10+6*t_0^9*t_1^15*t_2^11+6*t_0^9*t_1^14*t_2^12+6*t_0^9*t_1^13*t_2^13+6*t_0^9*t_1^12*t_2^14+6*t_0^9*t_1^11*t_2^15+6*t_0^9*t_1^10*t_2^16+3*t_0^9*t_1^9*t_2^17+t_0^9*t_1^8*t_2^18+t_0^8*t_1^18*t_2^9+3*t_0^8*t_1^17*t_2^10+3*t_0^8*t_1^16*t_2^11+3*t_0^8*t_1^15*t_2^12+3*t_0^8*t_1^14*t_2^13+3*t_0^8*t_1^13*t_2^14+3*t_0^8*t_1^12*t_2^15+3*t_0^8*t_1^11*t_2^16+3*t_0^8*t_1^10*t_2^17+t_0^8*t_1^9*t_2^18+t_0^7*t_1^18*t_2^10+t_0^7*t_1^17*t_2^11+t_0^7*t_1^16*t_2^12+t_0^7*t_1^15*t_2^13+t_0^7*t_1^14*t_2^14+t_0^7*t_1^13*t_2^15+t_0^7*t_1^12*t_2^16+t_0^7*t_1^11*t_2^17+t_0^7*t_1^10*t_2^18, (6,2) => 0, (7,1) => t_0^15*t_1^15*t_2^5+t_0^15*t_1^14*t_2^6+2*t_0^15*t_1^13*t_2^7+2*t_0^15*t_1^12*t_2^8+3*t_0^15*t_1^11*t_2^9+3*t_0^15*t_1^10*t_2^10+3*t_0^15*t_1^9*t_2^11+2*t_0^15*t_1^8*t_2^12+2*t_0^15*t_1^7*t_2^13+t_0^15*t_1^6*t_2^14+t_0^15*t_1^5*t_2^15+t_0^14*t_1^15*t_2^6+2*t_0^14*t_1^14*t_2^7+3*t_0^14*t_1^13*t_2^8+4*t_0^14*t_1^12*t_2^9+5*t_0^14*t_1^11*t_2^10+5*t_0^14*t_1^10*t_2^11+4*t_0^14*t_1^9*t_2^12+3*t_0^14*t_1^8*t_2^13+2*t_0^14*t_1^7*t_2^14+t_0^14*t_1^6*t_2^15+2*t_0^13*t_1^15*t_2^7+3*t_0^13*t_1^14*t_2^8+6*t_0^13*t_1^13*t_2^9+7*t_0^13*t_1^12*t_2^10+9*t_0^13*t_1^11*t_2^11+7*t_0^13*t_1^10*t_2^12+6*t_0^13*t_1^9*t_2^13+3*t_0^13*t_1^8*t_2^14+2*t_0^13*t_1^7*t_2^15+2*t_0^12*t_1^15*t_2^8+4*t_0^12*t_1^14*t_2^9+7*t_0^12*t_1^13*t_2^10+9*t_0^12*t_1^12*t_2^11+9*t_0^12*t_1^11*t_2^12+7*t_0^12*t_1^10*t_2^13+4*t_0^12*t_1^9*t_2^14+2*t_0^12*t_1^8*t_2^15+3*t_0^11*t_1^15*t_2^9+5*t_0^11*t_1^14*t_2^10+9*t_0^11*t_1^13*t_2^11+9*t_0^11*t_1^12*t_2^12+9*t_0^11*t_1^11*t_2^13+5*t_0^11*t_1^10*t_2^14+3*t_0^11*t_1^9*t_2^15+3*t_0^10*t_1^15*t_2^10+5*t_0^10*t_1^14*t_2^11+7*t_0^10*t_1^13*t_2^12+7*t_0^10*t_1^12*t_2^13+5*t_0^10*t_1^11*t_2^14+3*t_0^10*t_1^10*t_2^15+3*t_0^9*t_1^15*t_2^11+4*t_0^9*t_1^14*t_2^12+6*t_0^9*t_1^13*t_2^13+4*t_0^9*t_1^12*t_2^14+3*t_0^9*t_1^11*t_2^15+2*t_0^8*t_1^15*t_2^12+3*t_0^8*t_1^14*t_2^13+3*t_0^8*t_1^13*t_2^14+2*t_0^8*t_1^12*t_2^15+2*t_0^7*t_1^15*t_2^13+2*t_0^7*t_1^14*t_2^14+2*t_0^7*t_1^13*t_2^15+t_0^6*t_1^15*t_2^14+t_0^6*t_1^14*t_2^15+t_0^5*t_1^15*t_2^15, (7,2) => 0, (8,1) => t_0^17*t_1^15*t_2^7+t_0^17*t_1^14*t_2^8+3*t_0^17*t_1^13*t_2^9+3*t_0^17*t_1^12*t_2^10+4*t_0^17*t_1^11*t_2^11+3*t_0^17*t_1^10*t_2^12+3*t_0^17*t_1^9*t_2^13+t_0^17*t_1^8*t_2^14+t_0^17*t_1^7*t_2^15+t_0^16*t_1^16*t_2^7+3*t_0^16*t_1^15*t_2^8+6*t_0^16*t_1^14*t_2^9+9*t_0^16*t_1^13*t_2^10+11*t_0^16*t_1^12*t_2^11+11*t_0^16*t_1^11*t_2^12+9*t_0^16*t_1^10*t_2^13+6*t_0^16*t_1^9*t_2^14+3*t_0^16*t_1^8*t_2^15+t_0^16*t_1^7*t_2^16+t_0^15*t_1^17*t_2^7+3*t_0^15*t_1^16*t_2^8+9*t_0^15*t_1^15*t_2^9+14*t_0^15*t_1^14*t_2^10+21*t_0^15*t_1^13*t_2^11+22*t_0^15*t_1^12*t_2^12+21*t_0^15*t_1^11*t_2^13+14*t_0^15*t_1^10*t_2^14+9*t_0^15*t_1^9*t_2^15+3*t_0^15*t_1^8*t_2^16+t_0^15*t_1^7*t_2^17+t_0^14*t_1^17*t_2^8+6*t_0^14*t_1^16*t_2^9+14*t_0^14*t_1^15*t_2^10+23*t_0^14*t_1^14*t_2^11+30*t_0^14*t_1^13*t_2^12+30*t_0^14*t_1^12*t_2^13+23*t_0^14*t_1^11*t_2^14+14*t_0^14*t_1^10*t_2^15+6*t_0^14*t_1^9*t_2^16+t_0^14*t_1^8*t_2^17+3*t_0^13*t_1^17*t_2^9+9*t_0^13*t_1^16*t_2^10+21*t_0^13*t_1^15*t_2^11+30*t_0^13*t_1^14*t_2^12+36*t_0^13*t_1^13*t_2^13+30*t_0^13*t_1^12*t_2^14+21*t_0^13*t_1^11*t_2^15+9*t_0^13*t_1^10*t_2^16+3*t_0^13*t_1^9*t_2^17+3*t_0^12*t_1^17*t_2^10+11*t_0^12*t_1^16*t_2^11+22*t_0^12*t_1^15*t_2^12+30*t_0^12*t_1^14*t_2^13+30*t_0^12*t_1^13*t_2^14+22*t_0^12*t_1^12*t_2^15+11*t_0^12*t_1^11*t_2^16+3*t_0^12*t_1^10*t_2^17+4*t_0^11*t_1^17*t_2^11+11*t_0^11*t_1^16*t_2^12+21*t_0^11*t_1^15*t_2^13+23*t_0^11*t_1^14*t_2^14+21*t_0^11*t_1^13*t_2^15+11*t_0^11*t_1^12*t_2^16+4*t_0^11*t_1^11*t_2^17+3*t_0^10*t_1^17*t_2^12+9*t_0^10*t_1^16*t_2^13+14*t_0^10*t_1^15*t_2^14+14*t_0^10*t_1^14*t_2^15+9*t_0^10*t_1^13*t_2^16+3*t_0^10*t_1^12*t_2^17+3*t_0^9*t_1^17*t_2^13+6*t_0^9*t_1^16*t_2^14+9*t_0^9*t_1^15*t_2^15+6*t_0^9*t_1^14*t_2^16+3*t_0^9*t_1^13*t_2^17+t_0^8*t_1^17*t_2^14+3*t_0^8*t_1^16*t_2^15+3*t_0^8*t_1^15*t_2^16+t_0^8*t_1^14*t_2^17+t_0^7*t_1^17*t_2^15+t_0^7*t_1^16*t_2^16+t_0^7*t_1^15*t_2^17, (9,0) => t_0^19*t_1^10*t_2^10+t_0^18*t_1^11*t_2^10+t_0^18*t_1^10*t_2^11+t_0^17*t_1^12*t_2^10+t_0^17*t_1^11*t_2^11+t_0^17*t_1^10*t_2^12+t_0^16*t_1^13*t_2^10+t_0^16*t_1^12*t_2^11+t_0^16*t_1^11*t_2^12+t_0^16*t_1^10*t_2^13+t_0^15*t_1^14*t_2^10+t_0^15*t_1^13*t_2^11+t_0^15*t_1^12*t_2^12+t_0^15*t_1^11*t_2^13+t_0^15*t_1^10*t_2^14+t_0^14*t_1^15*t_2^10+t_0^14*t_1^14*t_2^11+t_0^14*t_1^13*t_2^12+t_0^14*t_1^12*t_2^13+t_0^14*t_1^11*t_2^14+t_0^14*t_1^10*t_2^15+t_0^13*t_1^16*t_2^10+t_0^13*t_1^15*t_2^11+t_0^13*t_1^14*t_2^12+t_0^13*t_1^13*t_2^13+t_0^13*t_1^12*t_2^14+t_0^13*t_1^11*t_2^15+t_0^13*t_1^10*t_2^16+t_0^12*t_1^17*t_2^10+t_0^12*t_1^16*t_2^11+t_0^12*t_1^15*t_2^12+t_0^12*t_1^14*t_2^13+t_0^12*t_1^13*t_2^14+t_0^12*t_1^12*t_2^15+t_0^12*t_1^11*t_2^16+t_0^12*t_1^10*t_2^17+t_0^11*t_1^18*t_2^10+t_0^11*t_1^17*t_2^11+t_0^11*t_1^16*t_2^12+t_0^11*t_1^15*t_2^13+t_0^11*t_1^14*t_2^14+t_0^11*t_1^13*t_2^15+t_0^11*t_1^12*t_2^16+t_0^11*t_1^11*t_2^17+t_0^11*t_1^10*t_2^18+t_0^10*t_1^19*t_2^10+t_0^10*t_1^18*t_2^11+t_0^10*t_1^17*t_2^12+t_0^10*t_1^16*t_2^13+t_0^10*t_1^15*t_2^14+t_0^10*t_1^14*t_2^15+t_0^10*t_1^13*t_2^16+t_0^10*t_1^12*t_2^17+t_0^10*t_1^11*t_2^18+t_0^10*t_1^10*t_2^19, (8,2) => 0, (9,1) => t_0^18*t_1^16*t_2^9+2*t_0^18*t_1^15*t_2^10+3*t_0^18*t_1^14*t_2^11+4*t_0^18*t_1^13*t_2^12+4*t_0^18*t_1^12*t_2^13+3*t_0^18*t_1^11*t_2^14+2*t_0^18*t_1^10*t_2^15+t_0^18*t_1^9*t_2^16+t_0^17*t_1^17*t_2^9+4*t_0^17*t_1^16*t_2^10+7*t_0^17*t_1^15*t_2^11+11*t_0^17*t_1^14*t_2^12+12*t_0^17*t_1^13*t_2^13+11*t_0^17*t_1^12*t_2^14+7*t_0^17*t_1^11*t_2^15+4*t_0^17*t_1^10*t_2^16+t_0^17*t_1^9*t_2^17+t_0^16*t_1^18*t_2^9+4*t_0^16*t_1^17*t_2^10+10*t_0^16*t_1^16*t_2^11+17*t_0^16*t_1^15*t_2^12+22*t_0^16*t_1^14*t_2^13+22*t_0^16*t_1^13*t_2^14+17*t_0^16*t_1^12*t_2^15+10*t_0^16*t_1^11*t_2^16+4*t_0^16*t_1^10*t_2^17+t_0^16*t_1^9*t_2^18+2*t_0^15*t_1^18*t_2^10+7*t_0^15*t_1^17*t_2^11+17*t_0^15*t_1^16*t_2^12+25*t_0^15*t_1^15*t_2^13+30*t_0^15*t_1^14*t_2^14+25*t_0^15*t_1^13*t_2^15+17*t_0^15*t_1^12*t_2^16+7*t_0^15*t_1^11*t_2^17+2*t_0^15*t_1^10*t_2^18+3*t_0^14*t_1^18*t_2^11+11*t_0^14*t_1^17*t_2^12+22*t_0^14*t_1^16*t_2^13+30*t_0^14*t_1^15*t_2^14+30*t_0^14*t_1^14*t_2^15+22*t_0^14*t_1^13*t_2^16+11*t_0^14*t_1^12*t_2^17+3*t_0^14*t_1^11*t_2^18+4*t_0^13*t_1^18*t_2^12+12*t_0^13*t_1^17*t_2^13+22*t_0^13*t_1^16*t_2^14+25*t_0^13*t_1^15*t_2^15+22*t_0^13*t_1^14*t_2^16+12*t_0^13*t_1^13*t_2^17+4*t_0^13*t_1^12*t_2^18+4*t_0^12*t_1^18*t_2^13+11*t_0^12*t_1^17*t_2^14+17*t_0^12*t_1^16*t_2^15+17*t_0^12*t_1^15*t_2^16+11*t_0^12*t_1^14*t_2^17+4*t_0^12*t_1^13*t_2^18+3*t_0^11*t_1^18*t_2^14+7*t_0^11*t_1^17*t_2^15+10*t_0^11*t_1^16*t_2^16+7*t_0^11*t_1^15*t_2^17+3*t_0^11*t_1^14*t_2^18+2*t_0^10*t_1^18*t_2^15+4*t_0^10*t_1^17*t_2^16+4*t_0^10*t_1^16*t_2^17+2*t_0^10*t_1^15*t_2^18+t_0^9*t_1^18*t_2^16+t_0^9*t_1^17*t_2^17+t_0^9*t_1^16*t_2^18, (10,0) => 0, (11,0) => 0, (10,1) => t_0^19*t_1^16*t_2^12+t_0^19*t_1^15*t_2^13+2*t_0^19*t_1^14*t_2^14+t_0^19*t_1^13*t_2^15+t_0^19*t_1^12*t_2^16+t_0^18*t_1^18*t_2^11+3*t_0^18*t_1^17*t_2^12+5*t_0^18*t_1^16*t_2^13+7*t_0^18*t_1^15*t_2^14+7*t_0^18*t_1^14*t_2^15+5*t_0^18*t_1^13*t_2^16+3*t_0^18*t_1^12*t_2^17+t_0^18*t_1^11*t_2^18+3*t_0^17*t_1^18*t_2^12+6*t_0^17*t_1^17*t_2^13+11*t_0^17*t_1^16*t_2^14+12*t_0^17*t_1^15*t_2^15+11*t_0^17*t_1^14*t_2^16+6*t_0^17*t_1^13*t_2^17+3*t_0^17*t_1^12*t_2^18+t_0^16*t_1^19*t_2^12+5*t_0^16*t_1^18*t_2^13+11*t_0^16*t_1^17*t_2^14+15*t_0^16*t_1^16*t_2^15+15*t_0^16*t_1^15*t_2^16+11*t_0^16*t_1^14*t_2^17+5*t_0^16*t_1^13*t_2^18+t_0^16*t_1^12*t_2^19+t_0^15*t_1^19*t_2^13+7*t_0^15*t_1^18*t_2^14+12*t_0^15*t_1^17*t_2^15+15*t_0^15*t_1^16*t_2^16+12*t_0^15*t_1^15*t_2^17+7*t_0^15*t_1^14*t_2^18+t_0^15*t_1^13*t_2^19+2*t_0^14*t_1^19*t_2^14+7*t_0^14*t_1^18*t_2^15+11*t_0^14*t_1^17*t_2^16+11*t_0^14*t_1^16*t_2^17+7*t_0^14*t_1^15*t_2^18+2*t_0^14*t_1^14*t_2^19+t_0^13*t_1^19*t_2^15+5*t_0^13*t_1^18*t_2^16+6*t_0^13*t_1^17*t_2^17+5*t_0^13*t_1^16*t_2^18+t_0^13*t_1^15*t_2^19+t_0^12*t_1^19*t_2^16+3*t_0^12*t_1^18*t_2^17+3*t_0^12*t_1^17*t_2^18+t_0^12*t_1^16*t_2^19+t_0^11*t_1^18*t_2^18, (9,2) => 0, (12,0) => 0, (11,1) => t_0^19*t_1^18*t_2^14+2*t_0^19*t_1^17*t_2^15+2*t_0^19*t_1^16*t_2^16+2*t_0^19*t_1^15*t_2^17+t_0^19*t_1^14*t_2^18+t_0^18*t_1^19*t_2^14+3*t_0^18*t_1^18*t_2^15+4*t_0^18*t_1^17*t_2^16+4*t_0^18*t_1^16*t_2^17+3*t_0^18*t_1^15*t_2^18+t_0^18*t_1^14*t_2^19+2*t_0^17*t_1^19*t_2^15+4*t_0^17*t_1^18*t_2^16+5*t_0^17*t_1^17*t_2^17+4*t_0^17*t_1^16*t_2^18+2*t_0^17*t_1^15*t_2^19+2*t_0^16*t_1^19*t_2^16+4*t_0^16*t_1^18*t_2^17+4*t_0^16*t_1^17*t_2^18+2*t_0^16*t_1^16*t_2^19+2*t_0^15*t_1^19*t_2^17+3*t_0^15*t_1^18*t_2^18+2*t_0^15*t_1^17*t_2^19+t_0^14*t_1^19*t_2^18+t_0^14*t_1^18*t_2^19, (10,2) => 0, (12,1) => t_0^19*t_1^19*t_2^17+t_0^19*t_1^18*t_2^18+t_0^19*t_1^17*t_2^19+t_0^18*t_1^19*t_2^18+t_0^18*t_1^18*t_2^19+t_0^17*t_1^19*t_2^19, (11,2) => 0, (12,2) => 0, (0,0) => t_0^3+t_0^2*t_1+t_0^2*t_2+t_0*t_1^2+t_0*t_1*t_2+t_0*t_2^2+t_1^3+t_1^2*t_2+t_1*t_2^2+t_2^3, (0,1) => 0, (1,0) => t_0^6*t_1+t_0^6*t_2+2*t_0^5*t_1^2+3*t_0^5*t_1*t_2+2*t_0^5*t_2^2+3*t_0^4*t_1^3+5*t_0^4*t_1^2*t_2+5*t_0^4*t_1*t_2^2+3*t_0^4*t_2^3+3*t_0^3*t_1^4+6*t_0^3*t_1^3*t_2+7*t_0^3*t_1^2*t_2^2+6*t_0^3*t_1*t_2^3+3*t_0^3*t_2^4+2*t_0^2*t_1^5+5*t_0^2*t_1^4*t_2+7*t_0^2*t_1^3*t_2^2+7*t_0^2*t_1^2*t_2^3+5*t_0^2*t_1*t_2^4+2*t_0^2*t_2^5+t_0*t_1^6+3*t_0*t_1^5*t_2+5*t_0*t_1^4*t_2^2+6*t_0*t_1^3*t_2^3+5*t_0*t_1^2*t_2^4+3*t_0*t_1*t_2^5+t_0*t_2^6+t_1^6*t_2+2*t_1^5*t_2^2+3*t_1^4*t_2^3+3*t_1^3*t_2^4+2*t_1^2*t_2^5+t_1*t_2^6, (1,1) => 0, (0,2) => 0, (2,0) => t_0^9*t_1*t_2+t_0^8*t_1^3+3*t_0^8*t_1^2*t_2+3*t_0^8*t_1*t_2^2+t_0^8*t_2^3+2*t_0^7*t_1^4+7*t_0^7*t_1^3*t_2+8*t_0^7*t_1^2*t_2^2+7*t_0^7*t_1*t_2^3+2*t_0^7*t_2^4+3*t_0^6*t_1^5+10*t_0^6*t_1^4*t_2+15*t_0^6*t_1^3*t_2^2+15*t_0^6*t_1^2*t_2^3+10*t_0^6*t_1*t_2^4+3*t_0^6*t_2^5+3*t_0^5*t_1^6+12*t_0^5*t_1^5*t_2+20*t_0^5*t_1^4*t_2^2+25*t_0^5*t_1^3*t_2^3+20*t_0^5*t_1^2*t_2^4+12*t_0^5*t_1*t_2^5+3*t_0^5*t_2^6+2*t_0^4*t_1^7+10*t_0^4*t_1^6*t_2+20*t_0^4*t_1^5*t_2^2+28*t_0^4*t_1^4*t_2^3+28*t_0^4*t_1^3*t_2^4+20*t_0^4*t_1^2*t_2^5+10*t_0^4*t_1*t_2^6+2*t_0^4*t_2^7+t_0^3*t_1^8+7*t_0^3*t_1^7*t_2+15*t_0^3*t_1^6*t_2^2+25*t_0^3*t_1^5*t_2^3+28*t_0^3*t_1^4*t_2^4+25*t_0^3*t_1^3*t_2^5+15*t_0^3*t_1^2*t_2^6+7*t_0^3*t_1*t_2^7+t_0^3*t_2^8+3*t_0^2*t_1^8*t_2+8*t_0^2*t_1^7*t_2^2+15*t_0^2*t_1^6*t_2^3+20*t_0^2*t_1^5*t_2^4+20*t_0^2*t_1^4*t_2^5+15*t_0^2*t_1^3*t_2^6+8*t_0^2*t_1^2*t_2^7+3*t_0^2*t_1*t_2^8+t_0*t_1^9*t_2+3*t_0*t_1^8*t_2^2+7*t_0*t_1^7*t_2^3+10*t_0*t_1^6*t_2^4+12*t_0*t_1^5*t_2^5+10*t_0*t_1^4*t_2^6+7*t_0*t_1^3*t_2^7+3*t_0*t_1^2*t_2^8+t_0*t_1*t_2^9+t_1^8*t_2^3+2*t_1^7*t_2^4+3*t_1^6*t_2^5+3*t_1^5*t_2^6+2*t_1^4*t_2^7+t_1^3*t_2^8, (1,2) => 0, (2,1) => 0, (3,0) => t_0^11*t_1^3*t_2+t_0^11*t_1^2*t_2^2+t_0^11*t_1*t_2^3+3*t_0^10*t_1^4*t_2+5*t_0^10*t_1^3*t_2^2+5*t_0^10*t_1^2*t_2^3+3*t_0^10*t_1*t_2^4+t_0^9*t_1^6+6*t_0^9*t_1^5*t_2+12*t_0^9*t_1^4*t_2^2+16*t_0^9*t_1^3*t_2^3+12*t_0^9*t_1^2*t_2^4+6*t_0^9*t_1*t_2^5+t_0^9*t_2^6+t_0^8*t_1^7+9*t_0^8*t_1^6*t_2+20*t_0^8*t_1^5*t_2^2+30*t_0^8*t_1^4*t_2^3+30*t_0^8*t_1^3*t_2^4+20*t_0^8*t_1^2*t_2^5+9*t_0^8*t_1*t_2^6+t_0^8*t_2^7+t_0^7*t_1^8+10*t_0^7*t_1^7*t_2+26*t_0^7*t_1^6*t_2^2+44*t_0^7*t_1^5*t_2^3+51*t_0^7*t_1^4*t_2^4+44*t_0^7*t_1^3*t_2^5+26*t_0^7*t_1^2*t_2^6+10*t_0^7*t_1*t_2^7+t_0^7*t_2^8+t_0^6*t_1^9+9*t_0^6*t_1^8*t_2+26*t_0^6*t_1^7*t_2^2+50*t_0^6*t_1^6*t_2^3+66*t_0^6*t_1^5*t_2^4+66*t_0^6*t_1^4*t_2^5+50*t_0^6*t_1^3*t_2^6+26*t_0^6*t_1^2*t_2^7+9*t_0^6*t_1*t_2^8+t_0^6*t_2^9+6*t_0^5*t_1^9*t_2+20*t_0^5*t_1^8*t_2^2+44*t_0^5*t_1^7*t_2^3+66*t_0^5*t_1^6*t_2^4+76*t_0^5*t_1^5*t_2^5+66*t_0^5*t_1^4*t_2^6+44*t_0^5*t_1^3*t_2^7+20*t_0^5*t_1^2*t_2^8+6*t_0^5*t_1*t_2^9+3*t_0^4*t_1^10*t_2+12*t_0^4*t_1^9*t_2^2+30*t_0^4*t_1^8*t_2^3+51*t_0^4*t_1^7*t_2^4+66*t_0^4*t_1^6*t_2^5+66*t_0^4*t_1^5*t_2^6+51*t_0^4*t_1^4*t_2^7+30*t_0^4*t_1^3*t_2^8+12*t_0^4*t_1^2*t_2^9+3*t_0^4*t_1*t_2^10+t_0^3*t_1^11*t_2+5*t_0^3*t_1^10*t_2^2+16*t_0^3*t_1^9*t_2^3+30*t_0^3*t_1^8*t_2^4+44*t_0^3*t_1^7*t_2^5+50*t_0^3*t_1^6*t_2^6+44*t_0^3*t_1^5*t_2^7+30*t_0^3*t_1^4*t_2^8+16*t_0^3*t_1^3*t_2^9+5*t_0^3*t_1^2*t_2^10+t_0^3*t_1*t_2^11+t_0^2*t_1^11*t_2^2+5*t_0^2*t_1^10*t_2^3+12*t_0^2*t_1^9*t_2^4+20*t_0^2*t_1^8*t_2^5+26*t_0^2*t_1^7*t_2^6+26*t_0^2*t_1^6*t_2^7+20*t_0^2*t_1^5*t_2^8+12*t_0^2*t_1^4*t_2^9+5*t_0^2*t_1^3*t_2^10+t_0^2*t_1^2*t_2^11+t_0*t_1^11*t_2^3+3*t_0*t_1^10*t_2^4+6*t_0*t_1^9*t_2^5+9*t_0*t_1^8*t_2^6+10*t_0*t_1^7*t_2^7+9*t_0*t_1^6*t_2^8+6*t_0*t_1^5*t_2^9+3*t_0*t_1^4*t_2^10+t_0*t_1^3*t_2^11+t_1^9*t_2^6+t_1^8*t_2^7+t_1^7*t_2^8+t_1^6*t_2^9, (4,0) => t_0^13*t_1^4*t_2^2+t_0^13*t_1^3*t_2^3+t_0^13*t_1^2*t_2^4+t_0^12*t_1^6*t_2+3*t_0^12*t_1^5*t_2^2+6*t_0^12*t_1^4*t_2^3+6*t_0^12*t_1^3*t_2^4+3*t_0^12*t_1^2*t_2^5+t_0^12*t_1*t_2^6+2*t_0^11*t_1^7*t_2+8*t_0^11*t_1^6*t_2^2+14*t_0^11*t_1^5*t_2^3+19*t_0^11*t_1^4*t_2^4+14*t_0^11*t_1^3*t_2^5+8*t_0^11*t_1^2*t_2^6+2*t_0^11*t_1*t_2^7+3*t_0^10*t_1^8*t_2+13*t_0^10*t_1^7*t_2^2+28*t_0^10*t_1^6*t_2^3+39*t_0^10*t_1^5*t_2^4+39*t_0^10*t_1^4*t_2^5+28*t_0^10*t_1^3*t_2^6+13*t_0^10*t_1^2*t_2^7+3*t_0^10*t_1*t_2^8+3*t_0^9*t_1^9*t_2+16*t_0^9*t_1^8*t_2^2+38*t_0^9*t_1^7*t_2^3+63*t_0^9*t_1^6*t_2^4+70*t_0^9*t_1^5*t_2^5+63*t_0^9*t_1^4*t_2^6+38*t_0^9*t_1^3*t_2^7+16*t_0^9*t_1^2*t_2^8+3*t_0^9*t_1*t_2^9+3*t_0^8*t_1^10*t_2+16*t_0^8*t_1^9*t_2^2+43*t_0^8*t_1^8*t_2^3+78*t_0^8*t_1^7*t_2^4+102*t_0^8*t_1^6*t_2^5+102*t_0^8*t_1^5*t_2^6+78*t_0^8*t_1^4*t_2^7+43*t_0^8*t_1^3*t_2^8+16*t_0^8*t_1^2*t_2^9+3*t_0^8*t_1*t_2^10+2*t_0^7*t_1^11*t_2+13*t_0^7*t_1^10*t_2^2+38*t_0^7*t_1^9*t_2^3+78*t_0^7*t_1^8*t_2^4+113*t_0^7*t_1^7*t_2^5+131*t_0^7*t_1^6*t_2^6+113*t_0^7*t_1^5*t_2^7+78*t_0^7*t_1^4*t_2^8+38*t_0^7*t_1^3*t_2^9+13*t_0^7*t_1^2*t_2^10+2*t_0^7*t_1*t_2^11+t_0^6*t_1^12*t_2+8*t_0^6*t_1^11*t_2^2+28*t_0^6*t_1^10*t_2^3+63*t_0^6*t_1^9*t_2^4+102*t_0^6*t_1^8*t_2^5+131*t_0^6*t_1^7*t_2^6+131*t_0^6*t_1^6*t_2^7+102*t_0^6*t_1^5*t_2^8+63*t_0^6*t_1^4*t_2^9+28*t_0^6*t_1^3*t_2^10+8*t_0^6*t_1^2*t_2^11+t_0^6*t_1*t_2^12+3*t_0^5*t_1^12*t_2^2+14*t_0^5*t_1^11*t_2^3+39*t_0^5*t_1^10*t_2^4+70*t_0^5*t_1^9*t_2^5+102*t_0^5*t_1^8*t_2^6+113*t_0^5*t_1^7*t_2^7+102*t_0^5*t_1^6*t_2^8+70*t_0^5*t_1^5*t_2^9+39*t_0^5*t_1^4*t_2^10+14*t_0^5*t_1^3*t_2^11+3*t_0^5*t_1^2*t_2^12+t_0^4*t_1^13*t_2^2+6*t_0^4*t_1^12*t_2^3+19*t_0^4*t_1^11*t_2^4+39*t_0^4*t_1^10*t_2^5+63*t_0^4*t_1^9*t_2^6+78*t_0^4*t_1^8*t_2^7+78*t_0^4*t_1^7*t_2^8+63*t_0^4*t_1^6*t_2^9+39*t_0^4*t_1^5*t_2^10+19*t_0^4*t_1^4*t_2^11+6*t_0^4*t_1^3*t_2^12+t_0^4*t_1^2*t_2^13+t_0^3*t_1^13*t_2^3+6*t_0^3*t_1^12*t_2^4+14*t_0^3*t_1^11*t_2^5+28*t_0^3*t_1^10*t_2^6+38*t_0^3*t_1^9*t_2^7+43*t_0^3*t_1^8*t_2^8+38*t_0^3*t_1^7*t_2^9+28*t_0^3*t_1^6*t_2^10+14*t_0^3*t_1^5*t_2^11+6*t_0^3*t_1^4*t_2^12+t_0^3*t_1^3*t_2^13+t_0^2*t_1^13*t_2^4+3*t_0^2*t_1^12*t_2^5+8*t_0^2*t_1^11*t_2^6+13*t_0^2*t_1^10*t_2^7+16*t_0^2*t_1^9*t_2^8+16*t_0^2*t_1^8*t_2^9+13*t_0^2*t_1^7*t_2^10+8*t_0^2*t_1^6*t_2^11+3*t_0^2*t_1^5*t_2^12+t_0^2*t_1^4*t_2^13+t_0*t_1^12*t_2^6+2*t_0*t_1^11*t_2^7+3*t_0*t_1^10*t_2^8+3*t_0*t_1^9*t_2^9+3*t_0*t_1^8*t_2^10+2*t_0*t_1^7*t_2^11+t_0*t_1^6*t_2^12, (2,2) => 0, (3,1) => 0, (5,0) => t_0^15*t_1^4*t_2^4+t_0^14*t_1^7*t_2^2+2*t_0^14*t_1^6*t_2^3+4*t_0^14*t_1^5*t_2^4+4*t_0^14*t_1^4*t_2^5+2*t_0^14*t_1^3*t_2^6+t_0^14*t_1^2*t_2^7+2*t_0^13*t_1^8*t_2^2+6*t_0^13*t_1^7*t_2^3+12*t_0^13*t_1^6*t_2^4+13*t_0^13*t_1^5*t_2^5+12*t_0^13*t_1^4*t_2^6+6*t_0^13*t_1^3*t_2^7+2*t_0^13*t_1^2*t_2^8+3*t_0^12*t_1^9*t_2^2+11*t_0^12*t_1^8*t_2^3+25*t_0^12*t_1^7*t_2^4+33*t_0^12*t_1^6*t_2^5+33*t_0^12*t_1^5*t_2^6+25*t_0^12*t_1^4*t_2^7+11*t_0^12*t_1^3*t_2^8+3*t_0^12*t_1^2*t_2^9+4*t_0^11*t_1^10*t_2^2+15*t_0^11*t_1^9*t_2^3+38*t_0^11*t_1^8*t_2^4+58*t_0^11*t_1^7*t_2^5+68*t_0^11*t_1^6*t_2^6+58*t_0^11*t_1^5*t_2^7+38*t_0^11*t_1^4*t_2^8+15*t_0^11*t_1^3*t_2^9+4*t_0^11*t_1^2*t_2^10+4*t_0^10*t_1^11*t_2^2+17*t_0^10*t_1^10*t_2^3+46*t_0^10*t_1^9*t_2^4+80*t_0^10*t_1^8*t_2^5+106*t_0^10*t_1^7*t_2^6+106*t_0^10*t_1^6*t_2^7+80*t_0^10*t_1^5*t_2^8+46*t_0^10*t_1^4*t_2^9+17*t_0^10*t_1^3*t_2^10+4*t_0^10*t_1^2*t_2^11+3*t_0^9*t_1^12*t_2^2+15*t_0^9*t_1^11*t_2^3+46*t_0^9*t_1^10*t_2^4+87*t_0^9*t_1^9*t_2^5+130*t_0^9*t_1^8*t_2^6+147*t_0^9*t_1^7*t_2^7+130*t_0^9*t_1^6*t_2^8+87*t_0^9*t_1^5*t_2^9+46*t_0^9*t_1^4*t_2^10+15*t_0^9*t_1^3*t_2^11+3*t_0^9*t_1^2*t_2^12+2*t_0^8*t_1^13*t_2^2+11*t_0^8*t_1^12*t_2^3+38*t_0^8*t_1^11*t_2^4+80*t_0^8*t_1^10*t_2^5+130*t_0^8*t_1^9*t_2^6+165*t_0^8*t_1^8*t_2^7+165*t_0^8*t_1^7*t_2^8+130*t_0^8*t_1^6*t_2^9+80*t_0^8*t_1^5*t_2^10+38*t_0^8*t_1^4*t_2^11+11*t_0^8*t_1^3*t_2^12+2*t_0^8*t_1^2*t_2^13+t_0^7*t_1^14*t_2^2+6*t_0^7*t_1^13*t_2^3+25*t_0^7*t_1^12*t_2^4+58*t_0^7*t_1^11*t_2^5+106*t_0^7*t_1^10*t_2^6+147*t_0^7*t_1^9*t_2^7+165*t_0^7*t_1^8*t_2^8+147*t_0^7*t_1^7*t_2^9+106*t_0^7*t_1^6*t_2^10+58*t_0^7*t_1^5*t_2^11+25*t_0^7*t_1^4*t_2^12+6*t_0^7*t_1^3*t_2^13+t_0^7*t_1^2*t_2^14+2*t_0^6*t_1^14*t_2^3+12*t_0^6*t_1^13*t_2^4+33*t_0^6*t_1^12*t_2^5+68*t_0^6*t_1^11*t_2^6+106*t_0^6*t_1^10*t_2^7+130*t_0^6*t_1^9*t_2^8+130*t_0^6*t_1^8*t_2^9+106*t_0^6*t_1^7*t_2^10+68*t_0^6*t_1^6*t_2^11+33*t_0^6*t_1^5*t_2^12+12*t_0^6*t_1^4*t_2^13+2*t_0^6*t_1^3*t_2^14+4*t_0^5*t_1^14*t_2^4+13*t_0^5*t_1^13*t_2^5+33*t_0^5*t_1^12*t_2^6+58*t_0^5*t_1^11*t_2^7+80*t_0^5*t_1^10*t_2^8+87*t_0^5*t_1^9*t_2^9+80*t_0^5*t_1^8*t_2^10+58*t_0^5*t_1^7*t_2^11+33*t_0^5*t_1^6*t_2^12+13*t_0^5*t_1^5*t_2^13+4*t_0^5*t_1^4*t_2^14+t_0^4*t_1^15*t_2^4+4*t_0^4*t_1^14*t_2^5+12*t_0^4*t_1^13*t_2^6+25*t_0^4*t_1^12*t_2^7+38*t_0^4*t_1^11*t_2^8+46*t_0^4*t_1^10*t_2^9+46*t_0^4*t_1^9*t_2^10+38*t_0^4*t_1^8*t_2^11+25*t_0^4*t_1^7*t_2^12+12*t_0^4*t_1^6*t_2^13+4*t_0^4*t_1^5*t_2^14+t_0^4*t_1^4*t_2^15+2*t_0^3*t_1^14*t_2^6+6*t_0^3*t_1^13*t_2^7+11*t_0^3*t_1^12*t_2^8+15*t_0^3*t_1^11*t_2^9+17*t_0^3*t_1^10*t_2^10+15*t_0^3*t_1^9*t_2^11+11*t_0^3*t_1^8*t_2^12+6*t_0^3*t_1^7*t_2^13+2*t_0^3*t_1^6*t_2^14+t_0^2*t_1^14*t_2^7+2*t_0^2*t_1^13*t_2^8+3*t_0^2*t_1^12*t_2^9+4*t_0^2*t_1^11*t_2^10+4*t_0^2*t_1^10*t_2^11+3*t_0^2*t_1^9*t_2^12+2*t_0^2*t_1^8*t_2^13+t_0^2*t_1^7*t_2^14, (4,1) => 0, (3,2) => 0, (6,0) => t_0^16*t_1^7*t_2^4+t_0^16*t_1^6*t_2^5+t_0^16*t_1^5*t_2^6+t_0^16*t_1^4*t_2^7+t_0^15*t_1^9*t_2^3+3*t_0^15*t_1^8*t_2^4+6*t_0^15*t_1^7*t_2^5+6*t_0^15*t_1^6*t_2^6+6*t_0^15*t_1^5*t_2^7+3*t_0^15*t_1^4*t_2^8+t_0^15*t_1^3*t_2^9+t_0^14*t_1^10*t_2^3+6*t_0^14*t_1^9*t_2^4+13*t_0^14*t_1^8*t_2^5+18*t_0^14*t_1^7*t_2^6+18*t_0^14*t_1^6*t_2^7+13*t_0^14*t_1^5*t_2^8+6*t_0^14*t_1^4*t_2^9+t_0^14*t_1^3*t_2^10+2*t_0^13*t_1^11*t_2^3+9*t_0^13*t_1^10*t_2^4+23*t_0^13*t_1^9*t_2^5+35*t_0^13*t_1^8*t_2^6+43*t_0^13*t_1^7*t_2^7+35*t_0^13*t_1^6*t_2^8+23*t_0^13*t_1^5*t_2^9+9*t_0^13*t_1^4*t_2^10+2*t_0^13*t_1^3*t_2^11+2*t_0^12*t_1^12*t_2^3+11*t_0^12*t_1^11*t_2^4+29*t_0^12*t_1^10*t_2^5+53*t_0^12*t_1^9*t_2^6+71*t_0^12*t_1^8*t_2^7+71*t_0^12*t_1^7*t_2^8+53*t_0^12*t_1^6*t_2^9+29*t_0^12*t_1^5*t_2^10+11*t_0^12*t_1^4*t_2^11+2*t_0^12*t_1^3*t_2^12+2*t_0^11*t_1^13*t_2^3+11*t_0^11*t_1^12*t_2^4+33*t_0^11*t_1^11*t_2^5+63*t_0^11*t_1^10*t_2^6+97*t_0^11*t_1^9*t_2^7+108*t_0^11*t_1^8*t_2^8+97*t_0^11*t_1^7*t_2^9+63*t_0^11*t_1^6*t_2^10+33*t_0^11*t_1^5*t_2^11+11*t_0^11*t_1^4*t_2^12+2*t_0^11*t_1^3*t_2^13+t_0^10*t_1^14*t_2^3+9*t_0^10*t_1^13*t_2^4+29*t_0^10*t_1^12*t_2^5+63*t_0^10*t_1^11*t_2^6+104*t_0^10*t_1^10*t_2^7+132*t_0^10*t_1^9*t_2^8+132*t_0^10*t_1^8*t_2^9+104*t_0^10*t_1^7*t_2^10+63*t_0^10*t_1^6*t_2^11+29*t_0^10*t_1^5*t_2^12+9*t_0^10*t_1^4*t_2^13+t_0^10*t_1^3*t_2^14+t_0^9*t_1^15*t_2^3+6*t_0^9*t_1^14*t_2^4+23*t_0^9*t_1^13*t_2^5+53*t_0^9*t_1^12*t_2^6+97*t_0^9*t_1^11*t_2^7+132*t_0^9*t_1^10*t_2^8+150*t_0^9*t_1^9*t_2^9+132*t_0^9*t_1^8*t_2^10+97*t_0^9*t_1^7*t_2^11+53*t_0^9*t_1^6*t_2^12+23*t_0^9*t_1^5*t_2^13+6*t_0^9*t_1^4*t_2^14+t_0^9*t_1^3*t_2^15+3*t_0^8*t_1^15*t_2^4+13*t_0^8*t_1^14*t_2^5+35*t_0^8*t_1^13*t_2^6+71*t_0^8*t_1^12*t_2^7+108*t_0^8*t_1^11*t_2^8+132*t_0^8*t_1^10*t_2^9+132*t_0^8*t_1^9*t_2^10+108*t_0^8*t_1^8*t_2^11+71*t_0^8*t_1^7*t_2^12+35*t_0^8*t_1^6*t_2^13+13*t_0^8*t_1^5*t_2^14+3*t_0^8*t_1^4*t_2^15+t_0^7*t_1^16*t_2^4+6*t_0^7*t_1^15*t_2^5+18*t_0^7*t_1^14*t_2^6+43*t_0^7*t_1^13*t_2^7+71*t_0^7*t_1^12*t_2^8+97*t_0^7*t_1^11*t_2^9+104*t_0^7*t_1^10*t_2^10+97*t_0^7*t_1^9*t_2^11+71*t_0^7*t_1^8*t_2^12+43*t_0^7*t_1^7*t_2^13+18*t_0^7*t_1^6*t_2^14+6*t_0^7*t_1^5*t_2^15+t_0^7*t_1^4*t_2^16+t_0^6*t_1^16*t_2^5+6*t_0^6*t_1^15*t_2^6+18*t_0^6*t_1^14*t_2^7+35*t_0^6*t_1^13*t_2^8+53*t_0^6*t_1^12*t_2^9+63*t_0^6*t_1^11*t_2^10+63*t_0^6*t_1^10*t_2^11+53*t_0^6*t_1^9*t_2^12+35*t_0^6*t_1^8*t_2^13+18*t_0^6*t_1^7*t_2^14+6*t_0^6*t_1^6*t_2^15+t_0^6*t_1^5*t_2^16+t_0^5*t_1^16*t_2^6+6*t_0^5*t_1^15*t_2^7+13*t_0^5*t_1^14*t_2^8+23*t_0^5*t_1^13*t_2^9+29*t_0^5*t_1^12*t_2^10+33*t_0^5*t_1^11*t_2^11+29*t_0^5*t_1^10*t_2^12+23*t_0^5*t_1^9*t_2^13+13*t_0^5*t_1^8*t_2^14+6*t_0^5*t_1^7*t_2^15+t_0^5*t_1^6*t_2^16+t_0^4*t_1^16*t_2^7+3*t_0^4*t_1^15*t_2^8+6*t_0^4*t_1^14*t_2^9+9*t_0^4*t_1^13*t_2^10+11*t_0^4*t_1^12*t_2^11+11*t_0^4*t_1^11*t_2^12+9*t_0^4*t_1^10*t_2^13+6*t_0^4*t_1^9*t_2^14+3*t_0^4*t_1^8*t_2^15+t_0^4*t_1^7*t_2^16+t_0^3*t_1^15*t_2^9+t_0^3*t_1^14*t_2^10+2*t_0^3*t_1^13*t_2^11+2*t_0^3*t_1^12*t_2^12+2*t_0^3*t_1^11*t_2^13+t_0^3*t_1^10*t_2^14+t_0^3*t_1^9*t_2^15, (5,1) => 0, (4,2) => 0};
--sb represents the betti numbers as sums of Schur functors
sb43 = new HashTable from {(7,0) => {({17,9,5},1/1),({17,7,7},1/1),({16,10,5},1/1),({16,9,6},1/1),({16,8,7},1/1),({15,11,5},1/1),({15,10,6},1/1),({15,9,7},3/1),({14,11,6},1/1),({14,10,7},2/1),({14,9,8},2/1),({13,13,5},1/1),({13,12,6},1/1),({13,11,7},2/1),({13,10,8},1/1),({13,9,9},2/1),({12,11,8},1/1),({12,10,9},1/1),({11,11,9},1/1)}, (6,1) => {}, (5,2) => {}, (8,0) => {({18,10,7},1/1),({17,10,8},1/1),({16,10,9},1/1),({15,10,10},1/1)}, (6,2) => {}, (7,1) => {({15,15,5},1/1),({15,13,7},1/1),({15,11,9},1/1),({13,13,9},1/1),({13,11,11},1/1)}, (7,2) => {}, (8,1) => {({17,15,7},1/1),({17,13,9},2/1),({17,11,11},1/1),({16,15,8},1/1),({16,14,9},1/1),({16,13,10},1/1),({16,12,11},1/1),({15,15,9},1/1),({15,14,10},1/1),({15,13,11},2/1),({14,13,12},1/1)}, (9,0) => {({19,10,10},1/1)}, (8,2) => {}, (9,1) => {({18,16,9},1/1),({18,15,10},1/1),({18,14,11},1/1),({18,13,12},1/1),({17,16,10},1/1),({17,15,11},1/1),({17,14,12},2/1),({16,16,11},1/1),({16,15,12},1/1),({16,14,13},1/1),({15,14,14},1/1)}, (10,0) => {}, (11,0) => {}, (10,1) => {({19,16,12},1/1),({19,14,14},1/1),({18,18,11},1/1),({18,17,12},1/1),({18,16,13},1/1),({18,15,14},1/1),({17,16,14},1/1)}, (9,2) => {}, (12,0) => {}, (11,1) => {({19,18,14},1/1),({19,17,15},1/1)}, (10,2) => {}, (12,1) => {({19,19,17},1/1)}, (11,2) => {}, (12,2) => {}, (0,0) => {({3,0,0},1/1)}, (0,1) => {}, (1,0) => {({6,1,0},1/1),({5,2,0},1/1),({4,3,0},1/1)}, (1,1) => {}, (0,2) => {}, (2,0) => {({9,1,1},1/1),({8,3,0},1/1),({8,2,1},1/1),({7,4,0},1/1),({7,3,1},2/1),({6,5,0},1/1),({6,4,1},1/1),({6,3,2},1/1),({5,5,1},1/1),({5,4,2},1/1),({5,3,3},1/1)}, (1,2) => {}, (2,1) => {}, (3,0) => {({11,3,1},1/1),({10,4,1},2/1),({10,3,2},1/1),({9,6,0},1/1),({9,5,1},2/1),({9,4,2},2/1),({9,3,3},2/1),({8,6,1},2/1),({8,5,2},3/1),({8,4,3},2/1),({7,7,1},1/1),({7,6,2},2/1),({7,5,3},3/1),({7,4,4},1/1),({6,6,3},1/1),({6,5,4},1/1),({5,5,5},1/1)}, (4,0) => {({13,4,2},1/1),({12,6,1},1/1),({12,5,2},1/1),({12,4,3},2/1),({11,7,1},1/1),({11,6,2},3/1),({11,5,3},2/1),({11,4,4},2/1),({10,8,1},1/1),({10,7,2},3/1),({10,6,3},5/1),({10,5,4},3/1),({9,8,2},2/1),({9,7,3},3/1),({9,6,4},5/1),({9,5,5},1/1),({8,8,3},2/1),({8,7,4},3/1),({8,6,5},3/1),({7,7,5},1/1),({7,6,6},1/1)}, (2,2) => {}, (3,1) => {}, (5,0) => {({15,4,4},1/1),({14,7,2},1/1),({14,6,3},1/1),({14,5,4},1/1),({13,8,2},1/1),({13,7,3},2/1),({13,6,4},3/1),({12,9,2},1/1),({12,8,3},3/1),({12,7,4},5/1),({12,6,5},3/1),({11,10,2},1/1),({11,9,3},2/1),({11,8,4},5/1),({11,7,5},4/1),({11,6,6},3/1),({10,10,3},1/1),({10,9,4},3/1),({10,8,5},5/1),({10,7,6},4/1),({9,9,5},1/1),({9,8,6},3/1),({9,7,7},1/1),({8,8,7},1/1)}, (4,1) => {}, (3,2) => {}, (6,0) => {({16,7,4},1/1),({15,9,3},1/1),({15,8,4},1/1),({15,7,5},2/1),({14,9,4},2/1),({14,8,5},3/1),({14,7,6},2/1),({13,11,3},1/1),({13,10,4},2/1),({13,9,5},4/1),({13,8,6},3/1),({13,7,7},3/1),({12,11,4},1/1),({12,10,5},2/1),({12,9,6},5/1),({12,8,7},3/1),({11,11,5},2/1),({11,10,6},2/1),({11,9,7},4/1),({11,8,8},1/1),({10,10,7},1/1),({10,9,8},1/1),({9,9,9},1/1)}, (5,1) => {}, (4,2) => {}};
--dw encodes the dominant weights in each entry
dw43 = new HashTable from {(5,2) => {}, (6,1) => {}, (7,0) => {{17,9,5}}, (8,0) => {{18,10,7}}, (6,2) => {}, (7,1) => {{15,15,5}}, (9,0) => {{19,10,10}}, (8,1) => {{17,15,7}}, (7,2) => {}, (10,0) => {}, (9,1) => {{18,16,9}}, (8,2) => {}, (11,0) => {}, (10,1) => {{19,16,12},{18,18,11}}, (9,2) => {}, (12,0) => {}, (11,1) => {{19,18,14}}, (10,2) => {}, (12,1) => {{19,19,17}}, (11,2) => {}, (12,2) => {}, (0,0) => {{3,0,0}}, (0,1) => {}, (1,0) => {{6,1,0}}, (2,0) => {{9,1,1},{8,3,0}}, (0,2) => {}, (1,1) => {}, (3,0) => {{11,3,1},{9,6,0}}, (2,1) => {}, (1,2) => {}, (3,1) => {}, (2,2) => {}, (4,0) => {{13,4,2},{12,6,1}}, (3,2) => {}, (4,1) => {}, (5,0) => {{15,4,4},{14,7,2}}, (4,2) => {}, (5,1) => {}, (6,0) => {{16,7,4},{15,9,3}}};
--lw encodes the lex leading weight in each entry
lw43 = new HashTable from {(5,2) => {}, (6,1) => {}, (7,0) => {17,9,5}, (8,0) => {18,10,7}, (6,2) => {}, (7,1) => {15,15,5}, (9,0) => {19,10,10}, (8,1) => {17,15,7}, (7,2) => {}, (10,0) => {}, (9,1) => {18,16,9}, (8,2) => {}, (11,0) => {}, (10,1) => {19,16,12}, (9,2) => {}, (12,0) => {}, (11,1) => {19,18,14}, (10,2) => {}, (12,1) => {19,19,17}, (11,2) => {}, (12,2) => {}, (0,0) => {3,0,0}, (0,1) => {}, (1,0) => {6,1,0}, (2,0) => {9,1,1}, (0,2) => {}, (1,1) => {}, (3,0) => {11,3,1}, (2,1) => {}, (1,2) => {}, (3,1) => {}, (2,2) => {}, (4,0) => {13,4,2}, (3,2) => {}, (4,1) => {}, (5,0) => {15,4,4}, (4,2) => {}, (5,1) => {}, (6,0) => {16,7,4}};
--nr encodes the number of disctinct reprsentations in each entry
nr43 = new HashTable from {(5,2) => 0, (6,1) => 0, (7,0) => 19, (8,0) => 4, (6,2) => 0, (7,1) => 5, (9,0) => 1, (8,1) => 11, (7,2) => 0, (10,0) => 0, (9,1) => 11, (8,2) => 0, (11,0) => 0, (10,1) => 7, (9,2) => 0, (12,0) => 0, (11,1) => 2, (10,2) => 0, (12,1) => 1, (11,2) => 0, (12,2) => 0, (0,0) => 1, (0,1) => 0, (1,0) => 3, (2,0) => 11, (0,2) => 0, (1,1) => 0, (3,0) => 17, (2,1) => 0, (1,2) => 0, (3,1) => 0, (2,2) => 0, (4,0) => 21, (3,2) => 0, (4,1) => 0, (5,0) => 24, (4,2) => 0, (5,1) => 0, (6,0) => 23};
--nrm encodes the number of representations with multiplicity in each entry
nrm43 = new HashTable from {(5,2) => 0, (6,1) => 0, (7,0) => 25/1, (8,0) => 4/1, (6,2) => 0, (7,1) => 5/1, (9,0) => 1/1, (8,1) => 13/1, (7,2) => 0, (10,0) => 0, (9,1) => 12/1, (8,2) => 0, (11,0) => 0, (10,1) => 7/1, (9,2) => 0, (12,0) => 0, (11,1) => 2/1, (10,2) => 0, (12,1) => 1/1, (11,2) => 0, (12,2) => 0, (0,0) => 1/1, (0,1) => 0, (1,0) => 3/1, (2,0) => 12/1, (0,2) => 0, (1,1) => 0, (3,0) => 28/1, (2,1) => 0, (1,2) => 0, (3,1) => 0, (2,2) => 0, (4,0) => 46/1, (3,2) => 0, (4,1) => 0, (5,0) => 56/1, (4,2) => 0, (5,1) => 0, (6,0) => 48/1};
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
er43 = new HashTable from {(5,2) => 0, (6,1) => 0, (7,0) => 0, (8,0) => 0, (6,2) => 0, (7,1) => 0, (9,0) => 0, (8,1) => 0, (7,2) => 0, (10,0) => 0, (9,1) => 0, (8,2) => 0, (11,0) => 0, (10,1) => 0, (9,2) => 0, (12,0) => 0, (11,1) => 0, (10,2) => 0, (12,1) => 0, (11,2) => 0, (12,2) => 0, (0,0) => 0, (0,1) => 0, (1,0) => 0, (2,0) => 0, (0,2) => 0, (1,1) => 0, (3,0) => 0, (2,1) => 0, (1,2) => 0, (3,1) => 0, (2,2) => 0, (4,0) => 0, (3,2) => 0, (4,1) => 0, (5,0) => 0, (4,2) => 0, (5,1) => 0, (6,0) => 0};
--bs encodes the Boij-Soederberg coefficients each entry
bs43 = {479001600/1,1219276800/1,4746470400/1,1219276800/1};
end;