--This file computes Betti tables for P^2 for d = 10 and b = 2
A := QQ[t_0,t_1,t_2];
--tb stands for Total Betti numbers
tb102 = new HashTable from {(7,0) => 0, (6,1) => 480, (8,0) => 0, (7,1) => 225, (9,0) => 0, (8,1) => 60, (9,1) => 7, (0,0) => 3, (0,1) => 0, (1,0) => 20, (2,0) => 45, (1,1) => 0, (2,1) => 0, (3,0) => 0, (3,1) => 210, (4,0) => 0, (4,1) => 504, (5,0) => 0, (6,0) => 0, (5,1) => 630};
--mb stands for Multigraded Betti numbers
mb102 = new HashTable from {(7,0) => 0, (6,1) => t_0^48*t_1^24+2*t_0^47*t_1^25+4*t_0^46*t_1^26+7*t_0^45*t_1^27+10*t_0^44*t_1^28+14*t_0^43*t_1^29+19*t_0^42*t_1^30+24*t_0^41*t_1^31+29*t_0^40*t_1^32+34*t_0^39*t_1^33+37*t_0^38*t_1^34+39*t_0^37*t_1^35+40*t_0^36*t_1^36+39*t_0^35*t_1^37+37*t_0^34*t_1^38+34*t_0^33*t_1^39+29*t_0^32*t_1^40+24*t_0^31*t_1^41+19*t_0^30*t_1^42+14*t_0^29*t_1^43+10*t_0^28*t_1^44+7*t_0^27*t_1^45+4*t_0^26*t_1^46+2*t_0^25*t_1^47+t_0^24*t_1^48, (7,1) => t_0^51*t_1^31+2*t_0^50*t_1^32+4*t_0^49*t_1^33+6*t_0^48*t_1^34+9*t_0^47*t_1^35+11*t_0^46*t_1^36+14*t_0^45*t_1^37+16*t_0^44*t_1^38+19*t_0^43*t_1^39+20*t_0^42*t_1^40+21*t_0^41*t_1^41+20*t_0^40*t_1^42+19*t_0^39*t_1^43+16*t_0^38*t_1^44+14*t_0^37*t_1^45+11*t_0^36*t_1^46+9*t_0^35*t_1^47+6*t_0^34*t_1^48+4*t_0^33*t_1^49+2*t_0^32*t_1^50+t_0^31*t_1^51, (8,0) => 0, (8,1) => t_0^53*t_1^39+2*t_0^52*t_1^40+3*t_0^51*t_1^41+4*t_0^50*t_1^42+5*t_0^49*t_1^43+6*t_0^48*t_1^44+6*t_0^47*t_1^45+6*t_0^46*t_1^46+6*t_0^45*t_1^47+6*t_0^44*t_1^48+5*t_0^43*t_1^49+4*t_0^42*t_1^50+3*t_0^41*t_1^51+2*t_0^40*t_1^52+t_0^39*t_1^53, (9,0) => 0, (9,1) => t_0^54*t_1^48+t_0^53*t_1^49+t_0^52*t_1^50+t_0^51*t_1^51+t_0^50*t_1^52+t_0^49*t_1^53+t_0^48*t_1^54, (0,0) => t_0^2+t_0*t_1+t_1^2, (0,1) => 0, (1,0) => t_0^11*t_1+2*t_0^10*t_1^2+2*t_0^9*t_1^3+2*t_0^8*t_1^4+2*t_0^7*t_1^5+2*t_0^6*t_1^6+2*t_0^5*t_1^7+2*t_0^4*t_1^8+2*t_0^3*t_1^9+2*t_0^2*t_1^10+t_0*t_1^11, (2,0) => t_0^19*t_1^3+t_0^18*t_1^4+2*t_0^17*t_1^5+2*t_0^16*t_1^6+3*t_0^15*t_1^7+3*t_0^14*t_1^8+4*t_0^13*t_1^9+4*t_0^12*t_1^10+5*t_0^11*t_1^11+4*t_0^10*t_1^12+4*t_0^9*t_1^13+3*t_0^8*t_1^14+3*t_0^7*t_1^15+2*t_0^6*t_1^16+2*t_0^5*t_1^17+t_0^4*t_1^18+t_0^3*t_1^19, (1,1) => 0, (3,0) => 0, (2,1) => 0, (4,0) => 0, (3,1) => t_0^33*t_1^9+t_0^32*t_1^10+2*t_0^31*t_1^11+3*t_0^30*t_1^12+5*t_0^29*t_1^13+6*t_0^28*t_1^14+9*t_0^27*t_1^15+10*t_0^26*t_1^16+13*t_0^25*t_1^17+14*t_0^24*t_1^18+16*t_0^23*t_1^19+16*t_0^22*t_1^20+18*t_0^21*t_1^21+16*t_0^20*t_1^22+16*t_0^19*t_1^23+14*t_0^18*t_1^24+13*t_0^17*t_1^25+10*t_0^16*t_1^26+9*t_0^15*t_1^27+6*t_0^14*t_1^28+5*t_0^13*t_1^29+3*t_0^12*t_1^30+2*t_0^11*t_1^31+t_0^10*t_1^32+t_0^9*t_1^33, (5,0) => 0, (4,1) => t_0^39*t_1^13+2*t_0^38*t_1^14+3*t_0^37*t_1^15+5*t_0^36*t_1^16+8*t_0^35*t_1^17+12*t_0^34*t_1^18+16*t_0^33*t_1^19+20*t_0^32*t_1^20+25*t_0^31*t_1^21+30*t_0^30*t_1^22+34*t_0^29*t_1^23+37*t_0^28*t_1^24+39*t_0^27*t_1^25+40*t_0^26*t_1^26+39*t_0^25*t_1^27+37*t_0^24*t_1^28+34*t_0^23*t_1^29+30*t_0^22*t_1^30+25*t_0^21*t_1^31+20*t_0^20*t_1^32+16*t_0^19*t_1^33+12*t_0^18*t_1^34+8*t_0^17*t_1^35+5*t_0^16*t_1^36+3*t_0^15*t_1^37+2*t_0^14*t_1^38+t_0^13*t_1^39, (5,1) => t_0^44*t_1^18+2*t_0^43*t_1^19+4*t_0^42*t_1^20+6*t_0^41*t_1^21+10*t_0^40*t_1^22+14*t_0^39*t_1^23+20*t_0^38*t_1^24+25*t_0^37*t_1^25+32*t_0^36*t_1^26+37*t_0^35*t_1^27+43*t_0^34*t_1^28+46*t_0^33*t_1^29+50*t_0^32*t_1^30+50*t_0^31*t_1^31+50*t_0^30*t_1^32+46*t_0^29*t_1^33+43*t_0^28*t_1^34+37*t_0^27*t_1^35+32*t_0^26*t_1^36+25*t_0^25*t_1^37+20*t_0^24*t_1^38+14*t_0^23*t_1^39+10*t_0^22*t_1^40+6*t_0^21*t_1^41+4*t_0^20*t_1^42+2*t_0^19*t_1^43+t_0^18*t_1^44, (6,0) => 0};
--sb represents the betti numbers as sums of Schur functors
sb102 = new HashTable from {(7,0) => {}, (6,1) => {({48,24},1)}, (8,0) => {}, (7,1) => {({51,31},1)}, (9,0) => {}, (8,1) => {({53,39},1)}, (9,1) => {({54,48},1)}, (0,0) => {({2,0},1)}, (0,1) => {}, (1,0) => {({11,1},1)}, (2,0) => {({19,3},1)}, (1,1) => {}, (2,1) => {}, (3,0) => {}, (3,1) => {({33,9},1)}, (4,0) => {}, (4,1) => {({39,13},1)}, (5,0) => {}, (6,0) => {}, (5,1) => {({44,18},1)}};
--dw encodes the dominant weights in each entry
dw102 = new HashTable from {(7,0) => {}, (6,1) => {{48,24}}, (8,0) => {}, (7,1) => {{51,31}}, (9,0) => {}, (8,1) => {{53,39}}, (9,1) => {{54,48}}, (0,0) => {{2,0}}, (0,1) => {}, (1,0) => {{11,1}}, (2,0) => {{19,3}}, (1,1) => {}, (2,1) => {}, (3,0) => {}, (3,1) => {{33,9}}, (4,0) => {}, (4,1) => {{39,13}}, (5,0) => {}, (6,0) => {}, (5,1) => {{44,18}}};
--lw encodes the lex leading weight in each entry
lw102 = new HashTable from {(7,0) => {}, (6,1) => {48,24}, (8,0) => {}, (7,1) => {51,31}, (9,0) => {}, (8,1) => {53,39}, (9,1) => {54,48}, (0,0) => {2,0}, (0,1) => {}, (1,0) => {11,1}, (2,0) => {19,3}, (1,1) => {}, (2,1) => {}, (3,0) => {}, (3,1) => {33,9}, (4,0) => {}, (4,1) => {39,13}, (5,0) => {}, (6,0) => {}, (5,1) => {44,18}};
--nr encodes the number of disctinct reprsentations in each entry
nr102 = new HashTable from {(7,0) => 0, (6,1) => 1, (8,0) => 0, (7,1) => 1, (9,0) => 0, (8,1) => 1, (9,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (2,1) => 0, (3,0) => 0, (3,1) => 1, (4,0) => 0, (4,1) => 1, (5,0) => 0, (6,0) => 0, (5,1) => 1};
--nrm encodes the number of representations with multiplicity in each entry
nrm102 = new HashTable from {(7,0) => 0, (6,1) => 1, (8,0) => 0, (7,1) => 1, (9,0) => 0, (8,1) => 1, (9,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (2,1) => 0, (3,0) => 0, (3,1) => 1, (4,0) => 0, (4,1) => 1, (5,0) => 0, (6,0) => 0, (5,1) => 1};
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
er102 = new HashTable from {(7,0) => 0, (6,1) => 0, (8,0) => 0, (7,1) => 0, (9,0) => 0, (8,1) => 0, (9,1) => 0, (0,0) => 0, (0,1) => 0, (1,0) => 0, (2,0) => 0, (1,1) => 0, (2,1) => 0, (3,0) => 0, (3,1) => 0, (4,0) => 0, (4,1) => 0, (5,0) => 0, (6,0) => 0, (5,1) => 0};
--bs encodes the Boij-Soederberg coefficients each entry
bs102 = {3628800/1};
end;