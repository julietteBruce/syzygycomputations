--This file computes Betti tables for P^2 for d = 7 and b = 5
A := QQ[t_0,t_1,t_2];
--tb stands for Total Betti numbers
tb75 = new HashTable from {(6,1) => 1, (0,0) => 6, (0,1) => 0, (1,0) => 35, (2,0) => 84, (1,1) => 0, (2,1) => 0, (3,0) => 105, (3,1) => 0, (4,0) => 70, (4,1) => 0, (5,0) => 21, (6,0) => 0, (5,1) => 0};
--mb stands for Multigraded Betti numbers
mb75 = new HashTable from {(6,1) => t_0^27*t_1^27, (0,0) => t_0^5+t_0^4*t_1+t_0^3*t_1^2+t_0^2*t_1^3+t_0*t_1^4+t_1^5, (1,0) => t_0^11*t_1+2*t_0^10*t_1^2+3*t_0^9*t_1^3+4*t_0^8*t_1^4+5*t_0^7*t_1^5+5*t_0^6*t_1^6+5*t_0^5*t_1^7+4*t_0^4*t_1^8+3*t_0^3*t_1^9+2*t_0^2*t_1^10+t_0*t_1^11, (0,1) => 0, (1,1) => 0, (2,0) => t_0^16*t_1^3+2*t_0^15*t_1^4+4*t_0^14*t_1^5+6*t_0^13*t_1^6+8*t_0^12*t_1^7+10*t_0^11*t_1^8+11*t_0^10*t_1^9+11*t_0^9*t_1^10+10*t_0^8*t_1^11+8*t_0^7*t_1^12+6*t_0^6*t_1^13+4*t_0^5*t_1^14+2*t_0^4*t_1^15+t_0^3*t_1^16, (2,1) => 0, (3,0) => t_0^20*t_1^6+2*t_0^19*t_1^7+4*t_0^18*t_1^8+6*t_0^17*t_1^9+9*t_0^16*t_1^10+11*t_0^15*t_1^11+13*t_0^14*t_1^12+13*t_0^13*t_1^13+13*t_0^12*t_1^14+11*t_0^11*t_1^15+9*t_0^10*t_1^16+6*t_0^9*t_1^17+4*t_0^8*t_1^18+2*t_0^7*t_1^19+t_0^6*t_1^20, (3,1) => 0, (4,0) => t_0^23*t_1^10+2*t_0^22*t_1^11+3*t_0^21*t_1^12+5*t_0^20*t_1^13+7*t_0^19*t_1^14+8*t_0^18*t_1^15+9*t_0^17*t_1^16+9*t_0^16*t_1^17+8*t_0^15*t_1^18+7*t_0^14*t_1^19+5*t_0^13*t_1^20+3*t_0^12*t_1^21+2*t_0^11*t_1^22+t_0^10*t_1^23, (4,1) => 0, (5,0) => t_0^25*t_1^15+t_0^24*t_1^16+2*t_0^23*t_1^17+2*t_0^22*t_1^18+3*t_0^21*t_1^19+3*t_0^20*t_1^20+3*t_0^19*t_1^21+2*t_0^18*t_1^22+2*t_0^17*t_1^23+t_0^16*t_1^24+t_0^15*t_1^25, (5,1) => 0, (6,0) => 0};
--sb represents the betti numbers as sums of Schur functors
sb75 = new HashTable from {(6,1) => {({27,27},1)}, (0,0) => {({5,0},1)}, (0,1) => {}, (1,0) => {({11,1},1)}, (2,0) => {({16,3},1)}, (1,1) => {}, (2,1) => {}, (3,0) => {({20,6},1)}, (3,1) => {}, (4,0) => {({23,10},1)}, (4,1) => {}, (5,0) => {({25,15},1)}, (6,0) => {}, (5,1) => {}};
--dw encodes the dominant weights in each entry
dw75 = new HashTable from {(6,1) => {{27,27}}, (0,0) => {{5,0}}, (0,1) => {}, (1,0) => {{11,1}}, (2,0) => {{16,3}}, (1,1) => {}, (2,1) => {}, (3,0) => {{20,6}}, (3,1) => {}, (4,0) => {{23,10}}, (4,1) => {}, (5,0) => {{25,15}}, (6,0) => {}, (5,1) => {}};
--lw encodes the lex leading weight in each entry
lw75 = new HashTable from {(6,1) => {27,27}, (0,0) => {5,0}, (0,1) => {}, (1,0) => {11,1}, (2,0) => {16,3}, (1,1) => {}, (2,1) => {}, (3,0) => {20,6}, (3,1) => {}, (4,0) => {23,10}, (4,1) => {}, (5,0) => {25,15}, (6,0) => {}, (5,1) => {}};
--nr encodes the number of disctinct reprsentations in each entry
nr75 = new HashTable from {(6,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (2,1) => 0, (3,0) => 1, (3,1) => 0, (4,0) => 1, (4,1) => 0, (5,0) => 1, (6,0) => 0, (5,1) => 0};
--nrm encodes the number of representations with multiplicity in each entry
nrm75 = new HashTable from {(6,1) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 1, (1,1) => 0, (2,1) => 0, (3,0) => 1, (3,1) => 0, (4,0) => 1, (4,1) => 0, (5,0) => 1, (6,0) => 0, (5,1) => 0};
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
er75 = new HashTable from {(6,1) => 0, (0,0) => 0, (0,1) => 0, (1,0) => 0, (2,0) => 0, (1,1) => 0, (2,1) => 0, (3,0) => 0, (3,1) => 0, (4,0) => 0, (4,1) => 0, (5,0) => 0, (6,0) => 0, (5,1) => 0};
--bs encodes the Boij-Soederberg coefficients each entry
bs75 = {5040/1};
end;