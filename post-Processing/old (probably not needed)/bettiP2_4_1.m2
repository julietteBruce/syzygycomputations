--This file computes Betti tables for P^2 for d = 4 and b = 1
--tb stands for Total Betti numbers
tb41 = new HashTable from {(5,2) => 0, (6,1) => 7920, (7,0) => 0, (8,0) => 0, (6,2) => 0, (7,1) => 7095, (9,0) => 0, (8,1) => 4488, (7,2) => 0, (10,0) => 0, (9,1) => 1947, (8,2) => 0, (11,0) => 0, (10,1) => 536, (9,2) => 0, (12,0) => 0, (11,1) => 75, (10,2) => 0, (12,1) => 0, (11,2) => 0, (12,2) => 1, (0,0) => 3, (0,1) => 0, (1,0) => 24, (2,0) => 55, (0,2) => 0, (1,1) => 0, (3,0) => 0, (2,1) => 120, (1,2) => 0, (3,1) => 1089, (2,2) => 0, (4,0) => 0, (3,2) => 0, (4,1) => 3344, (5,0) => 0, (4,2) => 0, (5,1) => 6237, (6,0) => 0};
--mb stands for Multigraded Betti numbers
mb41 = new HashTable from {(7,0) => 0, (6,1) => t_0^16*t_1^9*t_2^4+2*t_0^16*t_1^8*t_2^5+3*t_0^16*t_1^7*t_2^6+3*t_0^16*t_1^6*t_2^7+2*t_0^16*t_1^5*t_2^8+t_0^16*t_1^4*t_2^9+t_0^15*t_1^11*t_2^3+4*t_0^15*t_1^10*t_2^4+9*t_0^15*t_1^9*t_2^5+14*t_0^15*t_1^8*t_2^6+16*t_0^15*t_1^7*t_2^7+14*t_0^15*t_1^6*t_2^8+9*t_0^15*t_1^5*t_2^9+4*t_0^15*t_1^4*t_2^10+t_0^15*t_1^3*t_2^11+2*t_0^14*t_1^12*t_2^3+9*t_0^14*t_1^11*t_2^4+21*t_0^14*t_1^10*t_2^5+36*t_0^14*t_1^9*t_2^6+46*t_0^14*t_1^8*t_2^7+46*t_0^14*t_1^7*t_2^8+36*t_0^14*t_1^6*t_2^9+21*t_0^14*t_1^5*t_2^10+9*t_0^14*t_1^4*t_2^11+2*t_0^14*t_1^3*t_2^12+2*t_0^13*t_1^13*t_2^3+12*t_0^13*t_1^12*t_2^4+33*t_0^13*t_1^11*t_2^5+62*t_0^13*t_1^10*t_2^6+89*t_0^13*t_1^9*t_2^7+100*t_0^13*t_1^8*t_2^8+89*t_0^13*t_1^7*t_2^9+62*t_0^13*t_1^6*t_2^10+33*t_0^13*t_1^5*t_2^11+12*t_0^13*t_1^4*t_2^12+2*t_0^13*t_1^3*t_2^13+2*t_0^12*t_1^14*t_2^3+12*t_0^12*t_1^13*t_2^4+38*t_0^12*t_1^12*t_2^5+82*t_0^12*t_1^11*t_2^6+130*t_0^12*t_1^10*t_2^7+163*t_0^12*t_1^9*t_2^8+163*t_0^12*t_1^8*t_2^9+130*t_0^12*t_1^7*t_2^10+82*t_0^12*t_1^6*t_2^11+38*t_0^12*t_1^5*t_2^12+12*t_0^12*t_1^4*t_2^13+2*t_0^12*t_1^3*t_2^14+t_0^11*t_1^15*t_2^3+9*t_0^11*t_1^14*t_2^4+33*t_0^11*t_1^13*t_2^5+82*t_0^11*t_1^12*t_2^6+148*t_0^11*t_1^11*t_2^7+206*t_0^11*t_1^10*t_2^8+230*t_0^11*t_1^9*t_2^9+206*t_0^11*t_1^8*t_2^10+148*t_0^11*t_1^7*t_2^11+82*t_0^11*t_1^6*t_2^12+33*t_0^11*t_1^5*t_2^13+9*t_0^11*t_1^4*t_2^14+t_0^11*t_1^3*t_2^15+4*t_0^10*t_1^15*t_2^4+21*t_0^10*t_1^14*t_2^5+62*t_0^10*t_1^13*t_2^6+130*t_0^10*t_1^12*t_2^7+206*t_0^10*t_1^11*t_2^8+256*t_0^10*t_1^10*t_2^9+256*t_0^10*t_1^9*t_2^10+206*t_0^10*t_1^8*t_2^11+130*t_0^10*t_1^7*t_2^12+62*t_0^10*t_1^6*t_2^13+21*t_0^10*t_1^5*t_2^14+4*t_0^10*t_1^4*t_2^15+t_0^9*t_1^16*t_2^4+9*t_0^9*t_1^15*t_2^5+36*t_0^9*t_1^14*t_2^6+89*t_0^9*t_1^13*t_2^7+163*t_0^9*t_1^12*t_2^8+230*t_0^9*t_1^11*t_2^9+256*t_0^9*t_1^10*t_2^10+230*t_0^9*t_1^9*t_2^11+163*t_0^9*t_1^8*t_2^12+89*t_0^9*t_1^7*t_2^13+36*t_0^9*t_1^6*t_2^14+9*t_0^9*t_1^5*t_2^15+t_0^9*t_1^4*t_2^16+2*t_0^8*t_1^16*t_2^5+14*t_0^8*t_1^15*t_2^6+46*t_0^8*t_1^14*t_2^7+100*t_0^8*t_1^13*t_2^8+163*t_0^8*t_1^12*t_2^9+206*t_0^8*t_1^11*t_2^10+206*t_0^8*t_1^10*t_2^11+163*t_0^8*t_1^9*t_2^12+100*t_0^8*t_1^8*t_2^13+46*t_0^8*t_1^7*t_2^14+14*t_0^8*t_1^6*t_2^15+2*t_0^8*t_1^5*t_2^16+3*t_0^7*t_1^16*t_2^6+16*t_0^7*t_1^15*t_2^7+46*t_0^7*t_1^14*t_2^8+89*t_0^7*t_1^13*t_2^9+130*t_0^7*t_1^12*t_2^10+148*t_0^7*t_1^11*t_2^11+130*t_0^7*t_1^10*t_2^12+89*t_0^7*t_1^9*t_2^13+46*t_0^7*t_1^8*t_2^14+16*t_0^7*t_1^7*t_2^15+3*t_0^7*t_1^6*t_2^16+3*t_0^6*t_1^16*t_2^7+14*t_0^6*t_1^15*t_2^8+36*t_0^6*t_1^14*t_2^9+62*t_0^6*t_1^13*t_2^10+82*t_0^6*t_1^12*t_2^11+82*t_0^6*t_1^11*t_2^12+62*t_0^6*t_1^10*t_2^13+36*t_0^6*t_1^9*t_2^14+14*t_0^6*t_1^8*t_2^15+3*t_0^6*t_1^7*t_2^16+2*t_0^5*t_1^16*t_2^8+9*t_0^5*t_1^15*t_2^9+21*t_0^5*t_1^14*t_2^10+33*t_0^5*t_1^13*t_2^11+38*t_0^5*t_1^12*t_2^12+33*t_0^5*t_1^11*t_2^13+21*t_0^5*t_1^10*t_2^14+9*t_0^5*t_1^9*t_2^15+2*t_0^5*t_1^8*t_2^16+t_0^4*t_1^16*t_2^9+4*t_0^4*t_1^15*t_2^10+9*t_0^4*t_1^14*t_2^11+12*t_0^4*t_1^13*t_2^12+12*t_0^4*t_1^12*t_2^13+9*t_0^4*t_1^11*t_2^14+4*t_0^4*t_1^10*t_2^15+t_0^4*t_1^9*t_2^16+t_0^3*t_1^15*t_2^11+2*t_0^3*t_1^14*t_2^12+2*t_0^3*t_1^13*t_2^13+2*t_0^3*t_1^12*t_2^14+t_0^3*t_1^11*t_2^15, (5,2) => 0, (8,0) => 0, (6,2) => 0, (7,1) => t_0^17*t_1^11*t_2^5+2*t_0^17*t_1^10*t_2^6+4*t_0^17*t_1^9*t_2^7+4*t_0^17*t_1^8*t_2^8+4*t_0^17*t_1^7*t_2^9+2*t_0^17*t_1^6*t_2^10+t_0^17*t_1^5*t_2^11+3*t_0^16*t_1^12*t_2^5+8*t_0^16*t_1^11*t_2^6+14*t_0^16*t_1^10*t_2^7+19*t_0^16*t_1^9*t_2^8+19*t_0^16*t_1^8*t_2^9+14*t_0^16*t_1^7*t_2^10+8*t_0^16*t_1^6*t_2^11+3*t_0^16*t_1^5*t_2^12+t_0^15*t_1^14*t_2^4+6*t_0^15*t_1^13*t_2^5+17*t_0^15*t_1^12*t_2^6+34*t_0^15*t_1^11*t_2^7+48*t_0^15*t_1^10*t_2^8+56*t_0^15*t_1^9*t_2^9+48*t_0^15*t_1^8*t_2^10+34*t_0^15*t_1^7*t_2^11+17*t_0^15*t_1^6*t_2^12+6*t_0^15*t_1^5*t_2^13+t_0^15*t_1^4*t_2^14+t_0^14*t_1^15*t_2^4+7*t_0^14*t_1^14*t_2^5+23*t_0^14*t_1^13*t_2^6+52*t_0^14*t_1^12*t_2^7+84*t_0^14*t_1^11*t_2^8+106*t_0^14*t_1^10*t_2^9+106*t_0^14*t_1^9*t_2^10+84*t_0^14*t_1^8*t_2^11+52*t_0^14*t_1^7*t_2^12+23*t_0^14*t_1^6*t_2^13+7*t_0^14*t_1^5*t_2^14+t_0^14*t_1^4*t_2^15+6*t_0^13*t_1^15*t_2^5+23*t_0^13*t_1^14*t_2^6+60*t_0^13*t_1^13*t_2^7+109*t_0^13*t_1^12*t_2^8+156*t_0^13*t_1^11*t_2^9+171*t_0^13*t_1^10*t_2^10+156*t_0^13*t_1^9*t_2^11+109*t_0^13*t_1^8*t_2^12+60*t_0^13*t_1^7*t_2^13+23*t_0^13*t_1^6*t_2^14+6*t_0^13*t_1^5*t_2^15+3*t_0^12*t_1^16*t_2^5+17*t_0^12*t_1^15*t_2^6+52*t_0^12*t_1^14*t_2^7+109*t_0^12*t_1^13*t_2^8+175*t_0^12*t_1^12*t_2^9+218*t_0^12*t_1^11*t_2^10+218*t_0^12*t_1^10*t_2^11+175*t_0^12*t_1^9*t_2^12+109*t_0^12*t_1^8*t_2^13+52*t_0^12*t_1^7*t_2^14+17*t_0^12*t_1^6*t_2^15+3*t_0^12*t_1^5*t_2^16+t_0^11*t_1^17*t_2^5+8*t_0^11*t_1^16*t_2^6+34*t_0^11*t_1^15*t_2^7+84*t_0^11*t_1^14*t_2^8+156*t_0^11*t_1^13*t_2^9+218*t_0^11*t_1^12*t_2^10+246*t_0^11*t_1^11*t_2^11+218*t_0^11*t_1^10*t_2^12+156*t_0^11*t_1^9*t_2^13+84*t_0^11*t_1^8*t_2^14+34*t_0^11*t_1^7*t_2^15+8*t_0^11*t_1^6*t_2^16+t_0^11*t_1^5*t_2^17+2*t_0^10*t_1^17*t_2^6+14*t_0^10*t_1^16*t_2^7+48*t_0^10*t_1^15*t_2^8+106*t_0^10*t_1^14*t_2^9+171*t_0^10*t_1^13*t_2^10+218*t_0^10*t_1^12*t_2^11+218*t_0^10*t_1^11*t_2^12+171*t_0^10*t_1^10*t_2^13+106*t_0^10*t_1^9*t_2^14+48*t_0^10*t_1^8*t_2^15+14*t_0^10*t_1^7*t_2^16+2*t_0^10*t_1^6*t_2^17+4*t_0^9*t_1^17*t_2^7+19*t_0^9*t_1^16*t_2^8+56*t_0^9*t_1^15*t_2^9+106*t_0^9*t_1^14*t_2^10+156*t_0^9*t_1^13*t_2^11+175*t_0^9*t_1^12*t_2^12+156*t_0^9*t_1^11*t_2^13+106*t_0^9*t_1^10*t_2^14+56*t_0^9*t_1^9*t_2^15+19*t_0^9*t_1^8*t_2^16+4*t_0^9*t_1^7*t_2^17+4*t_0^8*t_1^17*t_2^8+19*t_0^8*t_1^16*t_2^9+48*t_0^8*t_1^15*t_2^10+84*t_0^8*t_1^14*t_2^11+109*t_0^8*t_1^13*t_2^12+109*t_0^8*t_1^12*t_2^13+84*t_0^8*t_1^11*t_2^14+48*t_0^8*t_1^10*t_2^15+19*t_0^8*t_1^9*t_2^16+4*t_0^8*t_1^8*t_2^17+4*t_0^7*t_1^17*t_2^9+14*t_0^7*t_1^16*t_2^10+34*t_0^7*t_1^15*t_2^11+52*t_0^7*t_1^14*t_2^12+60*t_0^7*t_1^13*t_2^13+52*t_0^7*t_1^12*t_2^14+34*t_0^7*t_1^11*t_2^15+14*t_0^7*t_1^10*t_2^16+4*t_0^7*t_1^9*t_2^17+2*t_0^6*t_1^17*t_2^10+8*t_0^6*t_1^16*t_2^11+17*t_0^6*t_1^15*t_2^12+23*t_0^6*t_1^14*t_2^13+23*t_0^6*t_1^13*t_2^14+17*t_0^6*t_1^12*t_2^15+8*t_0^6*t_1^11*t_2^16+2*t_0^6*t_1^10*t_2^17+t_0^5*t_1^17*t_2^11+3*t_0^5*t_1^16*t_2^12+6*t_0^5*t_1^15*t_2^13+7*t_0^5*t_1^14*t_2^14+6*t_0^5*t_1^13*t_2^15+3*t_0^5*t_1^12*t_2^16+t_0^5*t_1^11*t_2^17+t_0^4*t_1^15*t_2^14+t_0^4*t_1^14*t_2^15, (7,2) => 0, (8,1) => t_0^18*t_1^12*t_2^7+2*t_0^18*t_1^11*t_2^8+3*t_0^18*t_1^10*t_2^9+3*t_0^18*t_1^9*t_2^10+2*t_0^18*t_1^8*t_2^11+t_0^18*t_1^7*t_2^12+t_0^17*t_1^14*t_2^6+4*t_0^17*t_1^13*t_2^7+9*t_0^17*t_1^12*t_2^8+14*t_0^17*t_1^11*t_2^9+16*t_0^17*t_1^10*t_2^10+14*t_0^17*t_1^9*t_2^11+9*t_0^17*t_1^8*t_2^12+4*t_0^17*t_1^7*t_2^13+t_0^17*t_1^6*t_2^14+2*t_0^16*t_1^15*t_2^6+8*t_0^16*t_1^14*t_2^7+19*t_0^16*t_1^13*t_2^8+33*t_0^16*t_1^12*t_2^9+42*t_0^16*t_1^11*t_2^10+42*t_0^16*t_1^10*t_2^11+33*t_0^16*t_1^9*t_2^12+19*t_0^16*t_1^8*t_2^13+8*t_0^16*t_1^7*t_2^14+2*t_0^16*t_1^6*t_2^15+2*t_0^15*t_1^16*t_2^6+10*t_0^15*t_1^15*t_2^7+27*t_0^15*t_1^14*t_2^8+52*t_0^15*t_1^13*t_2^9+75*t_0^15*t_1^12*t_2^10+84*t_0^15*t_1^11*t_2^11+75*t_0^15*t_1^10*t_2^12+52*t_0^15*t_1^9*t_2^13+27*t_0^15*t_1^8*t_2^14+10*t_0^15*t_1^7*t_2^15+2*t_0^15*t_1^6*t_2^16+t_0^14*t_1^17*t_2^6+8*t_0^14*t_1^16*t_2^7+27*t_0^14*t_1^15*t_2^8+60*t_0^14*t_1^14*t_2^9+98*t_0^14*t_1^13*t_2^10+124*t_0^14*t_1^12*t_2^11+124*t_0^14*t_1^11*t_2^12+98*t_0^14*t_1^10*t_2^13+60*t_0^14*t_1^9*t_2^14+27*t_0^14*t_1^8*t_2^15+8*t_0^14*t_1^7*t_2^16+t_0^14*t_1^6*t_2^17+4*t_0^13*t_1^17*t_2^7+19*t_0^13*t_1^16*t_2^8+52*t_0^13*t_1^15*t_2^9+98*t_0^13*t_1^14*t_2^10+140*t_0^13*t_1^13*t_2^11+158*t_0^13*t_1^12*t_2^12+140*t_0^13*t_1^11*t_2^13+98*t_0^13*t_1^10*t_2^14+52*t_0^13*t_1^9*t_2^15+19*t_0^13*t_1^8*t_2^16+4*t_0^13*t_1^7*t_2^17+t_0^12*t_1^18*t_2^7+9*t_0^12*t_1^17*t_2^8+33*t_0^12*t_1^16*t_2^9+75*t_0^12*t_1^15*t_2^10+124*t_0^12*t_1^14*t_2^11+158*t_0^12*t_1^13*t_2^12+158*t_0^12*t_1^12*t_2^13+124*t_0^12*t_1^11*t_2^14+75*t_0^12*t_1^10*t_2^15+33*t_0^12*t_1^9*t_2^16+9*t_0^12*t_1^8*t_2^17+t_0^12*t_1^7*t_2^18+2*t_0^11*t_1^18*t_2^8+14*t_0^11*t_1^17*t_2^9+42*t_0^11*t_1^16*t_2^10+84*t_0^11*t_1^15*t_2^11+124*t_0^11*t_1^14*t_2^12+140*t_0^11*t_1^13*t_2^13+124*t_0^11*t_1^12*t_2^14+84*t_0^11*t_1^11*t_2^15+42*t_0^11*t_1^10*t_2^16+14*t_0^11*t_1^9*t_2^17+2*t_0^11*t_1^8*t_2^18+3*t_0^10*t_1^18*t_2^9+16*t_0^10*t_1^17*t_2^10+42*t_0^10*t_1^16*t_2^11+75*t_0^10*t_1^15*t_2^12+98*t_0^10*t_1^14*t_2^13+98*t_0^10*t_1^13*t_2^14+75*t_0^10*t_1^12*t_2^15+42*t_0^10*t_1^11*t_2^16+16*t_0^10*t_1^10*t_2^17+3*t_0^10*t_1^9*t_2^18+3*t_0^9*t_1^18*t_2^10+14*t_0^9*t_1^17*t_2^11+33*t_0^9*t_1^16*t_2^12+52*t_0^9*t_1^15*t_2^13+60*t_0^9*t_1^14*t_2^14+52*t_0^9*t_1^13*t_2^15+33*t_0^9*t_1^12*t_2^16+14*t_0^9*t_1^11*t_2^17+3*t_0^9*t_1^10*t_2^18+2*t_0^8*t_1^18*t_2^11+9*t_0^8*t_1^17*t_2^12+19*t_0^8*t_1^16*t_2^13+27*t_0^8*t_1^15*t_2^14+27*t_0^8*t_1^14*t_2^15+19*t_0^8*t_1^13*t_2^16+9*t_0^8*t_1^12*t_2^17+2*t_0^8*t_1^11*t_2^18+t_0^7*t_1^18*t_2^12+4*t_0^7*t_1^17*t_2^13+8*t_0^7*t_1^16*t_2^14+10*t_0^7*t_1^15*t_2^15+8*t_0^7*t_1^14*t_2^16+4*t_0^7*t_1^13*t_2^17+t_0^7*t_1^12*t_2^18+t_0^6*t_1^17*t_2^14+2*t_0^6*t_1^16*t_2^15+2*t_0^6*t_1^15*t_2^16+t_0^6*t_1^14*t_2^17, (9,0) => 0, (8,2) => 0, (9,1) => t_0^19*t_1^12*t_2^10+t_0^19*t_1^11*t_2^11+t_0^19*t_1^10*t_2^12+t_0^18*t_1^15*t_2^8+3*t_0^18*t_1^14*t_2^9+6*t_0^18*t_1^13*t_2^10+8*t_0^18*t_1^12*t_2^11+8*t_0^18*t_1^11*t_2^12+6*t_0^18*t_1^10*t_2^13+3*t_0^18*t_1^9*t_2^14+t_0^18*t_1^8*t_2^15+2*t_0^17*t_1^16*t_2^8+6*t_0^17*t_1^15*t_2^9+14*t_0^17*t_1^14*t_2^10+20*t_0^17*t_1^13*t_2^11+24*t_0^17*t_1^12*t_2^12+20*t_0^17*t_1^11*t_2^13+14*t_0^17*t_1^10*t_2^14+6*t_0^17*t_1^9*t_2^15+2*t_0^17*t_1^8*t_2^16+2*t_0^16*t_1^17*t_2^8+8*t_0^16*t_1^16*t_2^9+20*t_0^16*t_1^15*t_2^10+34*t_0^16*t_1^14*t_2^11+44*t_0^16*t_1^13*t_2^12+44*t_0^16*t_1^12*t_2^13+34*t_0^16*t_1^11*t_2^14+20*t_0^16*t_1^10*t_2^15+8*t_0^16*t_1^9*t_2^16+2*t_0^16*t_1^8*t_2^17+t_0^15*t_1^18*t_2^8+6*t_0^15*t_1^17*t_2^9+20*t_0^15*t_1^16*t_2^10+39*t_0^15*t_1^15*t_2^11+59*t_0^15*t_1^14*t_2^12+65*t_0^15*t_1^13*t_2^13+59*t_0^15*t_1^12*t_2^14+39*t_0^15*t_1^11*t_2^15+20*t_0^15*t_1^10*t_2^16+6*t_0^15*t_1^9*t_2^17+t_0^15*t_1^8*t_2^18+3*t_0^14*t_1^18*t_2^9+14*t_0^14*t_1^17*t_2^10+34*t_0^14*t_1^16*t_2^11+59*t_0^14*t_1^15*t_2^12+76*t_0^14*t_1^14*t_2^13+76*t_0^14*t_1^13*t_2^14+59*t_0^14*t_1^12*t_2^15+34*t_0^14*t_1^11*t_2^16+14*t_0^14*t_1^10*t_2^17+3*t_0^14*t_1^9*t_2^18+6*t_0^13*t_1^18*t_2^10+20*t_0^13*t_1^17*t_2^11+44*t_0^13*t_1^16*t_2^12+65*t_0^13*t_1^15*t_2^13+76*t_0^13*t_1^14*t_2^14+65*t_0^13*t_1^13*t_2^15+44*t_0^13*t_1^12*t_2^16+20*t_0^13*t_1^11*t_2^17+6*t_0^13*t_1^10*t_2^18+t_0^12*t_1^19*t_2^10+8*t_0^12*t_1^18*t_2^11+24*t_0^12*t_1^17*t_2^12+44*t_0^12*t_1^16*t_2^13+59*t_0^12*t_1^15*t_2^14+59*t_0^12*t_1^14*t_2^15+44*t_0^12*t_1^13*t_2^16+24*t_0^12*t_1^12*t_2^17+8*t_0^12*t_1^11*t_2^18+t_0^12*t_1^10*t_2^19+t_0^11*t_1^19*t_2^11+8*t_0^11*t_1^18*t_2^12+20*t_0^11*t_1^17*t_2^13+34*t_0^11*t_1^16*t_2^14+39*t_0^11*t_1^15*t_2^15+34*t_0^11*t_1^14*t_2^16+20*t_0^11*t_1^13*t_2^17+8*t_0^11*t_1^12*t_2^18+t_0^11*t_1^11*t_2^19+t_0^10*t_1^19*t_2^12+6*t_0^10*t_1^18*t_2^13+14*t_0^10*t_1^17*t_2^14+20*t_0^10*t_1^16*t_2^15+20*t_0^10*t_1^15*t_2^16+14*t_0^10*t_1^14*t_2^17+6*t_0^10*t_1^13*t_2^18+t_0^10*t_1^12*t_2^19+3*t_0^9*t_1^18*t_2^14+6*t_0^9*t_1^17*t_2^15+8*t_0^9*t_1^16*t_2^16+6*t_0^9*t_1^15*t_2^17+3*t_0^9*t_1^14*t_2^18+t_0^8*t_1^18*t_2^15+2*t_0^8*t_1^17*t_2^16+2*t_0^8*t_1^16*t_2^17+t_0^8*t_1^15*t_2^18, (10,0) => 0, (11,0) => 0, (10,1) => t_0^19*t_1^15*t_2^11+2*t_0^19*t_1^14*t_2^12+2*t_0^19*t_1^13*t_2^13+2*t_0^19*t_1^12*t_2^14+t_0^19*t_1^11*t_2^15+t_0^18*t_1^17*t_2^10+3*t_0^18*t_1^16*t_2^11+6*t_0^18*t_1^15*t_2^12+8*t_0^18*t_1^14*t_2^13+8*t_0^18*t_1^13*t_2^14+6*t_0^18*t_1^12*t_2^15+3*t_0^18*t_1^11*t_2^16+t_0^18*t_1^10*t_2^17+t_0^17*t_1^18*t_2^10+4*t_0^17*t_1^17*t_2^11+9*t_0^17*t_1^16*t_2^12+14*t_0^17*t_1^15*t_2^13+16*t_0^17*t_1^14*t_2^14+14*t_0^17*t_1^13*t_2^15+9*t_0^17*t_1^12*t_2^16+4*t_0^17*t_1^11*t_2^17+t_0^17*t_1^10*t_2^18+3*t_0^16*t_1^18*t_2^11+9*t_0^16*t_1^17*t_2^12+16*t_0^16*t_1^16*t_2^13+22*t_0^16*t_1^15*t_2^14+22*t_0^16*t_1^14*t_2^15+16*t_0^16*t_1^13*t_2^16+9*t_0^16*t_1^12*t_2^17+3*t_0^16*t_1^11*t_2^18+t_0^15*t_1^19*t_2^11+6*t_0^15*t_1^18*t_2^12+14*t_0^15*t_1^17*t_2^13+22*t_0^15*t_1^16*t_2^14+26*t_0^15*t_1^15*t_2^15+22*t_0^15*t_1^14*t_2^16+14*t_0^15*t_1^13*t_2^17+6*t_0^15*t_1^12*t_2^18+t_0^15*t_1^11*t_2^19+2*t_0^14*t_1^19*t_2^12+8*t_0^14*t_1^18*t_2^13+16*t_0^14*t_1^17*t_2^14+22*t_0^14*t_1^16*t_2^15+22*t_0^14*t_1^15*t_2^16+16*t_0^14*t_1^14*t_2^17+8*t_0^14*t_1^13*t_2^18+2*t_0^14*t_1^12*t_2^19+2*t_0^13*t_1^19*t_2^13+8*t_0^13*t_1^18*t_2^14+14*t_0^13*t_1^17*t_2^15+16*t_0^13*t_1^16*t_2^16+14*t_0^13*t_1^15*t_2^17+8*t_0^13*t_1^14*t_2^18+2*t_0^13*t_1^13*t_2^19+2*t_0^12*t_1^19*t_2^14+6*t_0^12*t_1^18*t_2^15+9*t_0^12*t_1^17*t_2^16+9*t_0^12*t_1^16*t_2^17+6*t_0^12*t_1^15*t_2^18+2*t_0^12*t_1^14*t_2^19+t_0^11*t_1^19*t_2^15+3*t_0^11*t_1^18*t_2^16+4*t_0^11*t_1^17*t_2^17+3*t_0^11*t_1^16*t_2^18+t_0^11*t_1^15*t_2^19+t_0^10*t_1^18*t_2^17+t_0^10*t_1^17*t_2^18, (9,2) => 0, (12,0) => 0, (11,1) => t_0^19*t_1^17*t_2^13+t_0^19*t_1^16*t_2^14+2*t_0^19*t_1^15*t_2^15+t_0^19*t_1^14*t_2^16+t_0^19*t_1^13*t_2^17+t_0^18*t_1^18*t_2^13+2*t_0^18*t_1^17*t_2^14+3*t_0^18*t_1^16*t_2^15+3*t_0^18*t_1^15*t_2^16+2*t_0^18*t_1^14*t_2^17+t_0^18*t_1^13*t_2^18+t_0^17*t_1^19*t_2^13+2*t_0^17*t_1^18*t_2^14+4*t_0^17*t_1^17*t_2^15+4*t_0^17*t_1^16*t_2^16+4*t_0^17*t_1^15*t_2^17+2*t_0^17*t_1^14*t_2^18+t_0^17*t_1^13*t_2^19+t_0^16*t_1^19*t_2^14+3*t_0^16*t_1^18*t_2^15+4*t_0^16*t_1^17*t_2^16+4*t_0^16*t_1^16*t_2^17+3*t_0^16*t_1^15*t_2^18+t_0^16*t_1^14*t_2^19+2*t_0^15*t_1^19*t_2^15+3*t_0^15*t_1^18*t_2^16+4*t_0^15*t_1^17*t_2^17+3*t_0^15*t_1^16*t_2^18+2*t_0^15*t_1^15*t_2^19+t_0^14*t_1^19*t_2^16+2*t_0^14*t_1^18*t_2^17+2*t_0^14*t_1^17*t_2^18+t_0^14*t_1^16*t_2^19+t_0^13*t_1^19*t_2^17+t_0^13*t_1^18*t_2^18+t_0^13*t_1^17*t_2^19, (10,2) => 0, (12,1) => 0, (11,2) => 0, (12,2) => t_0^19*t_1^19*t_2^19, (0,0) => t_0+t_1+t_2, (0,1) => 0, (1,0) => t_0^4*t_1+t_0^4*t_2+t_0^3*t_1^2+2*t_0^3*t_1*t_2+t_0^3*t_2^2+t_0^2*t_1^3+2*t_0^2*t_1^2*t_2+2*t_0^2*t_1*t_2^2+t_0^2*t_2^3+t_0*t_1^4+2*t_0*t_1^3*t_2+2*t_0*t_1^2*t_2^2+2*t_0*t_1*t_2^3+t_0*t_2^4+t_1^4*t_2+t_1^3*t_2^2+t_1^2*t_2^3+t_1*t_2^4, (1,1) => 0, (0,2) => 0, (2,0) => t_0^7*t_1*t_2+t_0^6*t_1^2*t_2+t_0^6*t_1*t_2^2+2*t_0^5*t_1^3*t_2+2*t_0^5*t_1^2*t_2^2+2*t_0^5*t_1*t_2^3+2*t_0^4*t_1^4*t_2+3*t_0^4*t_1^3*t_2^2+3*t_0^4*t_1^2*t_2^3+2*t_0^4*t_1*t_2^4+2*t_0^3*t_1^5*t_2+3*t_0^3*t_1^4*t_2^2+4*t_0^3*t_1^3*t_2^3+3*t_0^3*t_1^2*t_2^4+2*t_0^3*t_1*t_2^5+t_0^2*t_1^6*t_2+2*t_0^2*t_1^5*t_2^2+3*t_0^2*t_1^4*t_2^3+3*t_0^2*t_1^3*t_2^4+2*t_0^2*t_1^2*t_2^5+t_0^2*t_1*t_2^6+t_0*t_1^7*t_2+t_0*t_1^6*t_2^2+2*t_0*t_1^5*t_2^3+2*t_0*t_1^4*t_2^4+2*t_0*t_1^3*t_2^5+t_0*t_1^2*t_2^6+t_0*t_1*t_2^7, (1,2) => 0, (2,1) => t_0^8*t_1^5+t_0^8*t_1^4*t_2+t_0^8*t_1^3*t_2^2+t_0^8*t_1^2*t_2^3+t_0^8*t_1*t_2^4+t_0^8*t_2^5+t_0^7*t_1^6+2*t_0^7*t_1^5*t_2+2*t_0^7*t_1^4*t_2^2+2*t_0^7*t_1^3*t_2^3+2*t_0^7*t_1^2*t_2^4+2*t_0^7*t_1*t_2^5+t_0^7*t_2^6+t_0^6*t_1^7+2*t_0^6*t_1^6*t_2+3*t_0^6*t_1^5*t_2^2+3*t_0^6*t_1^4*t_2^3+3*t_0^6*t_1^3*t_2^4+3*t_0^6*t_1^2*t_2^5+2*t_0^6*t_1*t_2^6+t_0^6*t_2^7+t_0^5*t_1^8+2*t_0^5*t_1^7*t_2+3*t_0^5*t_1^6*t_2^2+4*t_0^5*t_1^5*t_2^3+4*t_0^5*t_1^4*t_2^4+4*t_0^5*t_1^3*t_2^5+3*t_0^5*t_1^2*t_2^6+2*t_0^5*t_1*t_2^7+t_0^5*t_2^8+t_0^4*t_1^8*t_2+2*t_0^4*t_1^7*t_2^2+3*t_0^4*t_1^6*t_2^3+4*t_0^4*t_1^5*t_2^4+4*t_0^4*t_1^4*t_2^5+3*t_0^4*t_1^3*t_2^6+2*t_0^4*t_1^2*t_2^7+t_0^4*t_1*t_2^8+t_0^3*t_1^8*t_2^2+2*t_0^3*t_1^7*t_2^3+3*t_0^3*t_1^6*t_2^4+4*t_0^3*t_1^5*t_2^5+3*t_0^3*t_1^4*t_2^6+2*t_0^3*t_1^3*t_2^7+t_0^3*t_1^2*t_2^8+t_0^2*t_1^8*t_2^3+2*t_0^2*t_1^7*t_2^4+3*t_0^2*t_1^6*t_2^5+3*t_0^2*t_1^5*t_2^6+2*t_0^2*t_1^4*t_2^7+t_0^2*t_1^3*t_2^8+t_0*t_1^8*t_2^4+2*t_0*t_1^7*t_2^5+2*t_0*t_1^6*t_2^6+2*t_0*t_1^5*t_2^7+t_0*t_1^4*t_2^8+t_1^8*t_2^5+t_1^7*t_2^6+t_1^6*t_2^7+t_1^5*t_2^8, (3,0) => 0, (4,0) => 0, (2,2) => 0, (3,1) => t_0^11*t_1^5*t_2+t_0^11*t_1^4*t_2^2+2*t_0^11*t_1^3*t_2^3+t_0^11*t_1^2*t_2^4+t_0^11*t_1*t_2^5+2*t_0^10*t_1^6*t_2+4*t_0^10*t_1^5*t_2^2+5*t_0^10*t_1^4*t_2^3+5*t_0^10*t_1^3*t_2^4+4*t_0^10*t_1^2*t_2^5+2*t_0^10*t_1*t_2^6+t_0^9*t_1^8+4*t_0^9*t_1^7*t_2+8*t_0^9*t_1^6*t_2^2+13*t_0^9*t_1^5*t_2^3+13*t_0^9*t_1^4*t_2^4+13*t_0^9*t_1^3*t_2^5+8*t_0^9*t_1^2*t_2^6+4*t_0^9*t_1*t_2^7+t_0^9*t_2^8+t_0^8*t_1^9+5*t_0^8*t_1^8*t_2+11*t_0^8*t_1^7*t_2^2+19*t_0^8*t_1^6*t_2^3+24*t_0^8*t_1^5*t_2^4+24*t_0^8*t_1^4*t_2^5+19*t_0^8*t_1^3*t_2^6+11*t_0^8*t_1^2*t_2^7+5*t_0^8*t_1*t_2^8+t_0^8*t_2^9+4*t_0^7*t_1^9*t_2+11*t_0^7*t_1^8*t_2^2+22*t_0^7*t_1^7*t_2^3+30*t_0^7*t_1^6*t_2^4+36*t_0^7*t_1^5*t_2^5+30*t_0^7*t_1^4*t_2^6+22*t_0^7*t_1^3*t_2^7+11*t_0^7*t_1^2*t_2^8+4*t_0^7*t_1*t_2^9+2*t_0^6*t_1^10*t_2+8*t_0^6*t_1^9*t_2^2+19*t_0^6*t_1^8*t_2^3+30*t_0^6*t_1^7*t_2^4+39*t_0^6*t_1^6*t_2^5+39*t_0^6*t_1^5*t_2^6+30*t_0^6*t_1^4*t_2^7+19*t_0^6*t_1^3*t_2^8+8*t_0^6*t_1^2*t_2^9+2*t_0^6*t_1*t_2^10+t_0^5*t_1^11*t_2+4*t_0^5*t_1^10*t_2^2+13*t_0^5*t_1^9*t_2^3+24*t_0^5*t_1^8*t_2^4+36*t_0^5*t_1^7*t_2^5+39*t_0^5*t_1^6*t_2^6+36*t_0^5*t_1^5*t_2^7+24*t_0^5*t_1^4*t_2^8+13*t_0^5*t_1^3*t_2^9+4*t_0^5*t_1^2*t_2^10+t_0^5*t_1*t_2^11+t_0^4*t_1^11*t_2^2+5*t_0^4*t_1^10*t_2^3+13*t_0^4*t_1^9*t_2^4+24*t_0^4*t_1^8*t_2^5+30*t_0^4*t_1^7*t_2^6+30*t_0^4*t_1^6*t_2^7+24*t_0^4*t_1^5*t_2^8+13*t_0^4*t_1^4*t_2^9+5*t_0^4*t_1^3*t_2^10+t_0^4*t_1^2*t_2^11+2*t_0^3*t_1^11*t_2^3+5*t_0^3*t_1^10*t_2^4+13*t_0^3*t_1^9*t_2^5+19*t_0^3*t_1^8*t_2^6+22*t_0^3*t_1^7*t_2^7+19*t_0^3*t_1^6*t_2^8+13*t_0^3*t_1^5*t_2^9+5*t_0^3*t_1^4*t_2^10+2*t_0^3*t_1^3*t_2^11+t_0^2*t_1^11*t_2^4+4*t_0^2*t_1^10*t_2^5+8*t_0^2*t_1^9*t_2^6+11*t_0^2*t_1^8*t_2^7+11*t_0^2*t_1^7*t_2^8+8*t_0^2*t_1^6*t_2^9+4*t_0^2*t_1^5*t_2^10+t_0^2*t_1^4*t_2^11+t_0*t_1^11*t_2^5+2*t_0*t_1^10*t_2^6+4*t_0*t_1^9*t_2^7+5*t_0*t_1^8*t_2^8+4*t_0*t_1^7*t_2^9+2*t_0*t_1^6*t_2^10+t_0*t_1^5*t_2^11+t_1^9*t_2^8+t_1^8*t_2^9, (5,0) => 0, (4,1) => t_0^13*t_1^6*t_2^2+2*t_0^13*t_1^5*t_2^3+2*t_0^13*t_1^4*t_2^4+2*t_0^13*t_1^3*t_2^5+t_0^13*t_1^2*t_2^6+t_0^12*t_1^8*t_2+3*t_0^12*t_1^7*t_2^2+7*t_0^12*t_1^6*t_2^3+9*t_0^12*t_1^5*t_2^4+9*t_0^12*t_1^4*t_2^5+7*t_0^12*t_1^3*t_2^6+3*t_0^12*t_1^2*t_2^7+t_0^12*t_1*t_2^8+2*t_0^11*t_1^9*t_2+7*t_0^11*t_1^8*t_2^2+15*t_0^11*t_1^7*t_2^3+23*t_0^11*t_1^6*t_2^4+26*t_0^11*t_1^5*t_2^5+23*t_0^11*t_1^4*t_2^6+15*t_0^11*t_1^3*t_2^7+7*t_0^11*t_1^2*t_2^8+2*t_0^11*t_1*t_2^9+2*t_0^10*t_1^10*t_2+10*t_0^10*t_1^9*t_2^2+24*t_0^10*t_1^8*t_2^3+39*t_0^10*t_1^7*t_2^4+51*t_0^10*t_1^6*t_2^5+51*t_0^10*t_1^5*t_2^6+39*t_0^10*t_1^4*t_2^7+24*t_0^10*t_1^3*t_2^8+10*t_0^10*t_1^2*t_2^9+2*t_0^10*t_1*t_2^10+2*t_0^9*t_1^11*t_2+10*t_0^9*t_1^10*t_2^2+28*t_0^9*t_1^9*t_2^3+52*t_0^9*t_1^8*t_2^4+74*t_0^9*t_1^7*t_2^5+84*t_0^9*t_1^6*t_2^6+74*t_0^9*t_1^5*t_2^7+52*t_0^9*t_1^4*t_2^8+28*t_0^9*t_1^3*t_2^9+10*t_0^9*t_1^2*t_2^10+2*t_0^9*t_1*t_2^11+t_0^8*t_1^12*t_2+7*t_0^8*t_1^11*t_2^2+24*t_0^8*t_1^10*t_2^3+52*t_0^8*t_1^9*t_2^4+84*t_0^8*t_1^8*t_2^5+105*t_0^8*t_1^7*t_2^6+105*t_0^8*t_1^6*t_2^7+84*t_0^8*t_1^5*t_2^8+52*t_0^8*t_1^4*t_2^9+24*t_0^8*t_1^3*t_2^10+7*t_0^8*t_1^2*t_2^11+t_0^8*t_1*t_2^12+3*t_0^7*t_1^12*t_2^2+15*t_0^7*t_1^11*t_2^3+39*t_0^7*t_1^10*t_2^4+74*t_0^7*t_1^9*t_2^5+105*t_0^7*t_1^8*t_2^6+116*t_0^7*t_1^7*t_2^7+105*t_0^7*t_1^6*t_2^8+74*t_0^7*t_1^5*t_2^9+39*t_0^7*t_1^4*t_2^10+15*t_0^7*t_1^3*t_2^11+3*t_0^7*t_1^2*t_2^12+t_0^6*t_1^13*t_2^2+7*t_0^6*t_1^12*t_2^3+23*t_0^6*t_1^11*t_2^4+51*t_0^6*t_1^10*t_2^5+84*t_0^6*t_1^9*t_2^6+105*t_0^6*t_1^8*t_2^7+105*t_0^6*t_1^7*t_2^8+84*t_0^6*t_1^6*t_2^9+51*t_0^6*t_1^5*t_2^10+23*t_0^6*t_1^4*t_2^11+7*t_0^6*t_1^3*t_2^12+t_0^6*t_1^2*t_2^13+2*t_0^5*t_1^13*t_2^3+9*t_0^5*t_1^12*t_2^4+26*t_0^5*t_1^11*t_2^5+51*t_0^5*t_1^10*t_2^6+74*t_0^5*t_1^9*t_2^7+84*t_0^5*t_1^8*t_2^8+74*t_0^5*t_1^7*t_2^9+51*t_0^5*t_1^6*t_2^10+26*t_0^5*t_1^5*t_2^11+9*t_0^5*t_1^4*t_2^12+2*t_0^5*t_1^3*t_2^13+2*t_0^4*t_1^13*t_2^4+9*t_0^4*t_1^12*t_2^5+23*t_0^4*t_1^11*t_2^6+39*t_0^4*t_1^10*t_2^7+52*t_0^4*t_1^9*t_2^8+52*t_0^4*t_1^8*t_2^9+39*t_0^4*t_1^7*t_2^10+23*t_0^4*t_1^6*t_2^11+9*t_0^4*t_1^5*t_2^12+2*t_0^4*t_1^4*t_2^13+2*t_0^3*t_1^13*t_2^5+7*t_0^3*t_1^12*t_2^6+15*t_0^3*t_1^11*t_2^7+24*t_0^3*t_1^10*t_2^8+28*t_0^3*t_1^9*t_2^9+24*t_0^3*t_1^8*t_2^10+15*t_0^3*t_1^7*t_2^11+7*t_0^3*t_1^6*t_2^12+2*t_0^3*t_1^5*t_2^13+t_0^2*t_1^13*t_2^6+3*t_0^2*t_1^12*t_2^7+7*t_0^2*t_1^11*t_2^8+10*t_0^2*t_1^10*t_2^9+10*t_0^2*t_1^9*t_2^10+7*t_0^2*t_1^8*t_2^11+3*t_0^2*t_1^7*t_2^12+t_0^2*t_1^6*t_2^13+t_0*t_1^12*t_2^8+2*t_0*t_1^11*t_2^9+2*t_0*t_1^10*t_2^10+2*t_0*t_1^9*t_2^11+t_0*t_1^8*t_2^12, (3,2) => 0, (6,0) => 0, (5,1) => t_0^15*t_1^6*t_2^4+t_0^15*t_1^5*t_2^5+t_0^15*t_1^4*t_2^6+t_0^14*t_1^9*t_2^2+3*t_0^14*t_1^8*t_2^3+6*t_0^14*t_1^7*t_2^4+8*t_0^14*t_1^6*t_2^5+8*t_0^14*t_1^5*t_2^6+6*t_0^14*t_1^4*t_2^7+3*t_0^14*t_1^3*t_2^8+t_0^14*t_1^2*t_2^9+2*t_0^13*t_1^10*t_2^2+7*t_0^13*t_1^9*t_2^3+16*t_0^13*t_1^8*t_2^4+23*t_0^13*t_1^7*t_2^5+28*t_0^13*t_1^6*t_2^6+23*t_0^13*t_1^5*t_2^7+16*t_0^13*t_1^4*t_2^8+7*t_0^13*t_1^3*t_2^9+2*t_0^13*t_1^2*t_2^10+3*t_0^12*t_1^11*t_2^2+12*t_0^12*t_1^10*t_2^3+29*t_0^12*t_1^9*t_2^4+48*t_0^12*t_1^8*t_2^5+62*t_0^12*t_1^7*t_2^6+62*t_0^12*t_1^6*t_2^7+48*t_0^12*t_1^5*t_2^8+29*t_0^12*t_1^4*t_2^9+12*t_0^12*t_1^3*t_2^10+3*t_0^12*t_1^2*t_2^11+3*t_0^11*t_1^12*t_2^2+14*t_0^11*t_1^11*t_2^3+39*t_0^11*t_1^10*t_2^4+71*t_0^11*t_1^9*t_2^5+103*t_0^11*t_1^8*t_2^6+113*t_0^11*t_1^7*t_2^7+103*t_0^11*t_1^6*t_2^8+71*t_0^11*t_1^5*t_2^9+39*t_0^11*t_1^4*t_2^10+14*t_0^11*t_1^3*t_2^11+3*t_0^11*t_1^2*t_2^12+2*t_0^10*t_1^13*t_2^2+12*t_0^10*t_1^12*t_2^3+39*t_0^10*t_1^11*t_2^4+82*t_0^10*t_1^10*t_2^5+131*t_0^10*t_1^9*t_2^6+163*t_0^10*t_1^8*t_2^7+163*t_0^10*t_1^7*t_2^8+131*t_0^10*t_1^6*t_2^9+82*t_0^10*t_1^5*t_2^10+39*t_0^10*t_1^4*t_2^11+12*t_0^10*t_1^3*t_2^12+2*t_0^10*t_1^2*t_2^13+t_0^9*t_1^14*t_2^2+7*t_0^9*t_1^13*t_2^3+29*t_0^9*t_1^12*t_2^4+71*t_0^9*t_1^11*t_2^5+131*t_0^9*t_1^10*t_2^6+181*t_0^9*t_1^9*t_2^7+204*t_0^9*t_1^8*t_2^8+181*t_0^9*t_1^7*t_2^9+131*t_0^9*t_1^6*t_2^10+71*t_0^9*t_1^5*t_2^11+29*t_0^9*t_1^4*t_2^12+7*t_0^9*t_1^3*t_2^13+t_0^9*t_1^2*t_2^14+3*t_0^8*t_1^14*t_2^3+16*t_0^8*t_1^13*t_2^4+48*t_0^8*t_1^12*t_2^5+103*t_0^8*t_1^11*t_2^6+163*t_0^8*t_1^10*t_2^7+204*t_0^8*t_1^9*t_2^8+204*t_0^8*t_1^8*t_2^9+163*t_0^8*t_1^7*t_2^10+103*t_0^8*t_1^6*t_2^11+48*t_0^8*t_1^5*t_2^12+16*t_0^8*t_1^4*t_2^13+3*t_0^8*t_1^3*t_2^14+6*t_0^7*t_1^14*t_2^4+23*t_0^7*t_1^13*t_2^5+62*t_0^7*t_1^12*t_2^6+113*t_0^7*t_1^11*t_2^7+163*t_0^7*t_1^10*t_2^8+181*t_0^7*t_1^9*t_2^9+163*t_0^7*t_1^8*t_2^10+113*t_0^7*t_1^7*t_2^11+62*t_0^7*t_1^6*t_2^12+23*t_0^7*t_1^5*t_2^13+6*t_0^7*t_1^4*t_2^14+t_0^6*t_1^15*t_2^4+8*t_0^6*t_1^14*t_2^5+28*t_0^6*t_1^13*t_2^6+62*t_0^6*t_1^12*t_2^7+103*t_0^6*t_1^11*t_2^8+131*t_0^6*t_1^10*t_2^9+131*t_0^6*t_1^9*t_2^10+103*t_0^6*t_1^8*t_2^11+62*t_0^6*t_1^7*t_2^12+28*t_0^6*t_1^6*t_2^13+8*t_0^6*t_1^5*t_2^14+t_0^6*t_1^4*t_2^15+t_0^5*t_1^15*t_2^5+8*t_0^5*t_1^14*t_2^6+23*t_0^5*t_1^13*t_2^7+48*t_0^5*t_1^12*t_2^8+71*t_0^5*t_1^11*t_2^9+82*t_0^5*t_1^10*t_2^10+71*t_0^5*t_1^9*t_2^11+48*t_0^5*t_1^8*t_2^12+23*t_0^5*t_1^7*t_2^13+8*t_0^5*t_1^6*t_2^14+t_0^5*t_1^5*t_2^15+t_0^4*t_1^15*t_2^6+6*t_0^4*t_1^14*t_2^7+16*t_0^4*t_1^13*t_2^8+29*t_0^4*t_1^12*t_2^9+39*t_0^4*t_1^11*t_2^10+39*t_0^4*t_1^10*t_2^11+29*t_0^4*t_1^9*t_2^12+16*t_0^4*t_1^8*t_2^13+6*t_0^4*t_1^7*t_2^14+t_0^4*t_1^6*t_2^15+3*t_0^3*t_1^14*t_2^8+7*t_0^3*t_1^13*t_2^9+12*t_0^3*t_1^12*t_2^10+14*t_0^3*t_1^11*t_2^11+12*t_0^3*t_1^10*t_2^12+7*t_0^3*t_1^9*t_2^13+3*t_0^3*t_1^8*t_2^14+t_0^2*t_1^14*t_2^9+2*t_0^2*t_1^13*t_2^10+3*t_0^2*t_1^12*t_2^11+3*t_0^2*t_1^11*t_2^12+2*t_0^2*t_1^10*t_2^13+t_0^2*t_1^9*t_2^14, (4,2) => 0};
--sb represents the betti numbers as sums of Schur functors
sb41 = new HashTable from {(7,0) => {}, (6,1) => {({16,9,4},1/1),({16,8,5},1/1),({16,7,6},1/1),({15,11,3},1/1),({15,10,4},2/1),({15,9,5},3/1),({15,8,6},3/1),({15,7,7},1/1),({14,12,3},1/1),({14,11,4},3/1),({14,10,5},5/1),({14,9,6},6/1),({14,8,7},4/1),({13,12,4},2/1),({13,11,5},5/1),({13,10,6},7/1),({13,9,7},7/1),({13,8,8},3/1),({12,12,5},2/1),({12,11,6},6/1),({12,10,7},7/1),({12,9,8},5/1),({11,11,7},3/1),({11,10,8},4/1),({11,9,9},2/1),({10,10,9},1/1)}, (5,2) => {}, (8,0) => {}, (6,2) => {}, (7,1) => {({17,11,5},1/1),({17,10,6},1/1),({17,9,7},2/1),({16,12,5},2/1),({16,11,6},3/1),({16,10,7},3/1),({16,9,8},3/1),({15,14,4},1/1),({15,13,5},2/1),({15,12,6},4/1),({15,11,7},7/1),({15,10,8},5/1),({15,9,9},3/1),({14,13,6},3/1),({14,12,7},6/1),({14,11,8},7/1),({14,10,9},5/1),({13,13,7},3/1),({13,12,8},5/1),({13,11,9},7/1),({13,10,10},1/1),({12,12,9},2/1),({12,11,10},3/1)}, (7,2) => {}, (8,1) => {({18,12,7},1/1),({18,11,8},1/1),({18,10,9},1/1),({17,14,6},1/1),({17,13,7},2/1),({17,12,8},3/1),({17,11,9},3/1),({17,10,10},1/1),({16,15,6},1/1),({16,14,7},2/1),({16,13,8},4/1),({16,12,9},5/1),({16,11,10},3/1),({15,15,7},1/1),({15,14,8},3/1),({15,13,9},5/1),({15,12,10},5/1),({15,11,11},2/1),({14,14,9},2/1),({14,13,10},4/1),({14,12,11},3/1),({13,13,11},1/1),({13,12,12},1/1)}, (9,0) => {}, (8,2) => {}, (9,1) => {({19,12,10},1/1),({18,15,8},1/1),({18,14,9},2/1),({18,13,10},2/1),({18,12,11},1/1),({17,16,8},1/1),({17,15,9},1/1),({17,14,10},3/1),({17,13,11},2/1),({17,12,12},2/1),({16,16,9},1/1),({16,15,10},2/1),({16,14,11},3/1),({16,13,12},2/1),({15,15,11},1/1),({15,14,12},2/1),({14,14,13},1/1)}, (10,0) => {}, (11,0) => {}, (10,1) => {({19,15,11},1/1),({19,14,12},1/1),({18,17,10},1/1),({18,16,11},1/1),({18,15,12},1/1),({18,14,13},1/1),({17,16,12},1/1),({17,15,13},1/1),({16,15,14},1/1)}, (9,2) => {}, (12,0) => {}, (11,1) => {({19,17,13},1/1),({19,15,15},1/1)}, (10,2) => {}, (12,1) => {}, (11,2) => {}, (12,2) => {({19,19,19},1/1)}, (0,0) => {({1,0,0},1/1)}, (0,1) => {}, (1,0) => {({4,1,0},1/1)}, (1,1) => {}, (0,2) => {}, (2,0) => {({7,1,1},1/1),({5,3,1},1/1)}, (1,2) => {}, (2,1) => {({8,5,0},1/1)}, (3,0) => {}, (4,0) => {}, (2,2) => {}, (3,1) => {({11,5,1},1/1),({11,3,3},1/1),({10,6,1},1/1),({10,5,2},1/1),({9,8,0},1/1),({9,7,1},1/1),({9,6,2},1/1),({9,5,3},2/1),({8,7,2},1/1),({8,6,3},1/1),({8,5,4},1/1),({7,7,3},1/1),({7,5,5},1/1)}, (5,0) => {}, (4,1) => {({13,6,2},1/1),({13,5,3},1/1),({12,8,1},1/1),({12,7,2},1/1),({12,6,3},2/1),({12,5,4},1/1),({11,9,1},1/1),({11,8,2},2/1),({11,7,3},3/1),({11,6,4},3/1),({11,5,5},1/1),({10,9,2},2/1),({10,8,3},3/1),({10,7,4},3/1),({10,6,5},3/1),({9,9,3},1/1),({9,8,4},3/1),({9,7,5},3/1),({9,6,6},1/1),({8,8,5},1/1),({8,7,6},1/1)}, (3,2) => {}, (6,0) => {}, (5,1) => {({15,6,4},1/1),({14,9,2},1/1),({14,8,3},2/1),({14,7,4},2/1),({14,6,5},1/1),({13,10,2},1/1),({13,9,3},2/1),({13,8,4},4/1),({13,7,5},3/1),({13,6,6},3/1),({12,11,2},1/1),({12,10,3},3/1),({12,9,4},5/1),({12,8,5},6/1),({12,7,6},4/1),({11,11,3},1/1),({11,10,4},4/1),({11,9,5},5/1),({11,8,6},6/1),({11,7,7},1/1),({10,10,5},3/1),({10,9,6},4/1),({10,8,7},4/1),({9,9,7},1/1),({9,8,8},1/1)}, (4,2) => {}};
--dw encodes the dominant weights in each entry
dw41 = new HashTable from {(5,2) => {}, (6,1) => {{16,9,4},{15,11,3}}, (7,0) => {}, (8,0) => {}, (6,2) => {}, (7,1) => {{17,11,5},{15,14,4}}, (9,0) => {}, (8,1) => {{18,12,7},{17,14,6}}, (7,2) => {}, (10,0) => {}, (9,1) => {{19,12,10},{18,15,8}}, (8,2) => {}, (11,0) => {}, (10,1) => {{19,15,11},{18,17,10}}, (9,2) => {}, (12,0) => {}, (11,1) => {{19,17,13}}, (10,2) => {}, (12,1) => {}, (11,2) => {}, (12,2) => {{19,19,19}}, (0,0) => {{1,0,0}}, (0,1) => {}, (1,0) => {{4,1,0}}, (2,0) => {{7,1,1}}, (0,2) => {}, (1,1) => {}, (3,0) => {}, (2,1) => {{8,5,0}}, (1,2) => {}, (3,1) => {{11,5,1},{9,8,0}}, (2,2) => {}, (4,0) => {}, (3,2) => {}, (4,1) => {{13,6,2},{12,8,1}}, (5,0) => {}, (4,2) => {}, (5,1) => {{15,6,4},{14,9,2}}, (6,0) => {}};
--lw encodes the lex leading weight in each entry
lw41 = new HashTable from {(5,2) => {}, (6,1) => {16,9,4}, (7,0) => {}, (8,0) => {}, (6,2) => {}, (7,1) => {17,11,5}, (9,0) => {}, (8,1) => {18,12,7}, (7,2) => {}, (10,0) => {}, (9,1) => {19,12,10}, (8,2) => {}, (11,0) => {}, (10,1) => {19,15,11}, (9,2) => {}, (12,0) => {}, (11,1) => {19,17,13}, (10,2) => {}, (12,1) => {}, (11,2) => {}, (12,2) => {19,19,19}, (0,0) => {1,0,0}, (0,1) => {}, (1,0) => {4,1,0}, (2,0) => {7,1,1}, (0,2) => {}, (1,1) => {}, (3,0) => {}, (2,1) => {8,5,0}, (1,2) => {}, (3,1) => {11,5,1}, (2,2) => {}, (4,0) => {}, (3,2) => {}, (4,1) => {13,6,2}, (5,0) => {}, (4,2) => {}, (5,1) => {15,6,4}, (6,0) => {}};
--nr encodes the number of disctinct reprsentations in each entry
nr41 = new HashTable from {(5,2) => 0, (6,1) => 26, (7,0) => 0, (8,0) => 0, (6,2) => 0, (7,1) => 23, (9,0) => 0, (8,1) => 23, (7,2) => 0, (10,0) => 0, (9,1) => 17, (8,2) => 0, (11,0) => 0, (10,1) => 9, (9,2) => 0, (12,0) => 0, (11,1) => 2, (10,2) => 0, (12,1) => 0, (11,2) => 0, (12,2) => 1, (0,0) => 1, (0,1) => 0, (1,0) => 1, (2,0) => 2, (0,2) => 0, (1,1) => 0, (3,0) => 0, (2,1) => 1, (1,2) => 0, (3,1) => 13, (2,2) => 0, (4,0) => 0, (3,2) => 0, (4,1) => 21, (5,0) => 0, (4,2) => 0, (5,1) => 25, (6,0) => 0};
--nrm encodes the number of representations with multiplicity in each entry
nrm41 = new HashTable from {(5,2) => 0, (6,1) => 86/1, (7,0) => 0, (8,0) => 0, (6,2) => 0, (7,1) => 79/1, (9,0) => 0, (8,1) => 55/1, (7,2) => 0, (10,0) => 0, (9,1) => 28/1, (8,2) => 0, (11,0) => 0, (10,1) => 9/1, (9,2) => 0, (12,0) => 0, (11,1) => 2/1, (10,2) => 0, (12,1) => 0, (11,2) => 0, (12,2) => 1/1, (0,0) => 1/1, (0,1) => 0, (1,0) => 1/1, (2,0) => 2/1, (0,2) => 0, (1,1) => 0, (3,0) => 0, (2,1) => 1/1, (1,2) => 0, (3,1) => 14/1, (2,2) => 0, (4,0) => 0, (3,2) => 0, (4,1) => 38/1, (5,0) => 0, (4,2) => 0, (5,1) => 69/1, (6,0) => 0};
--er encodes the errors in the computed multigraded Hilbert series via our Schur method in each entry
er41 = new HashTable from {(5,2) => 0, (6,1) => 0, (7,0) => 0, (8,0) => 0, (6,2) => 0, (7,1) => 0, (9,0) => 0, (8,1) => 0, (7,2) => 0, (10,0) => 0, (9,1) => 0, (8,2) => 0, (11,0) => 0, (10,1) => 0, (9,2) => 0, (12,0) => 0, (11,1) => 0, (10,2) => 0, (12,1) => 0, (11,2) => 0, (12,2) => 0, (0,0) => 0, (0,1) => 0, (1,0) => 0, (2,0) => 0, (0,2) => 0, (1,1) => 0, (3,0) => 0, (2,1) => 0, (1,2) => 0, (3,1) => 0, (2,2) => 0, (4,0) => 0, (3,2) => 0, (4,1) => 0, (5,0) => 0, (4,2) => 0, (5,1) => 0, (6,0) => 0};
end;--BS encodes the Boij-Soederberg coefficients each entry
BS41 = {4790016000/1,2874009600/1};
end;